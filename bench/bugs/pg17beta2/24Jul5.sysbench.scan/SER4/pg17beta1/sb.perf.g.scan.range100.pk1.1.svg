<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>PostmasterMain (19,908,500,000 samples, 99.99%)</title><rect x="10.1" y="453" width="1179.9" height="15.0" fill="rgb(229,218,36)" rx="2" ry="2" />
<text  x="13.12" y="463.5" >PostmasterMain</text>
</g>
<g >
<title>ReleaseBuffer (4,500,000 samples, 0.02%)</title><rect x="1072.6" y="261" width="0.3" height="15.0" fill="rgb(231,141,49)" rx="2" ry="2" />
<text  x="1075.63" y="271.5" ></text>
</g>
<g >
<title>[postgres] (19,908,500,000 samples, 99.99%)</title><rect x="10.1" y="405" width="1179.9" height="15.0" fill="rgb(239,99,22)" rx="2" ry="2" />
<text  x="13.12" y="415.5" >[postgres]</text>
</g>
<g >
<title>tick_sched_timer (2,000,000 samples, 0.01%)</title><rect x="301.4" y="165" width="0.2" height="15.0" fill="rgb(248,78,41)" rx="2" ry="2" />
<text  x="304.44" y="175.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6,000,000 samples, 0.03%)</title><rect x="1142.3" y="197" width="0.4" height="15.0" fill="rgb(233,63,43)" rx="2" ry="2" />
<text  x="1145.32" y="207.5" ></text>
</g>
<g >
<title>do_read_fault (208,500,000 samples, 1.05%)</title><rect x="1124.8" y="101" width="12.4" height="15.0" fill="rgb(248,174,12)" rx="2" ry="2" />
<text  x="1127.84" y="111.5" ></text>
</g>
<g >
<title>pte_alloc_one (5,000,000 samples, 0.03%)</title><rect x="1136.8" y="85" width="0.3" height="15.0" fill="rgb(232,172,6)" rx="2" ry="2" />
<text  x="1139.84" y="95.5" ></text>
</g>
<g >
<title>exec_simple_query (19,908,500,000 samples, 99.99%)</title><rect x="10.1" y="373" width="1179.9" height="15.0" fill="rgb(254,219,23)" rx="2" ry="2" />
<text  x="13.12" y="383.5" >exec_simple_query</text>
</g>
<g >
<title>asm_exc_page_fault (294,500,000 samples, 1.48%)</title><rect x="1121.8" y="213" width="17.5" height="15.0" fill="rgb(233,157,1)" rx="2" ry="2" />
<text  x="1124.85" y="223.5" ></text>
</g>
<g >
<title>PostgresMain (19,908,500,000 samples, 99.99%)</title><rect x="10.1" y="389" width="1179.9" height="15.0" fill="rgb(214,111,4)" rx="2" ry="2" />
<text  x="13.12" y="399.5" >PostgresMain</text>
</g>
<g >
<title>heap_scan_stream_read_next_serial (7,000,000 samples, 0.04%)</title><rect x="1166.3" y="229" width="0.4" height="15.0" fill="rgb(230,229,51)" rx="2" ry="2" />
<text  x="1169.26" y="239.5" ></text>
</g>
<g >
<title>__count_memcg_events (3,500,000 samples, 0.02%)</title><rect x="1137.3" y="133" width="0.3" height="15.0" fill="rgb(205,10,32)" rx="2" ry="2" />
<text  x="1140.34" y="143.5" ></text>
</g>
<g >
<title>int4lt (153,500,000 samples, 0.77%)</title><rect x="1175.7" y="293" width="9.1" height="15.0" fill="rgb(239,15,16)" rx="2" ry="2" />
<text  x="1178.72" y="303.5" ></text>
</g>
<g >
<title>ss_report_location (3,000,000 samples, 0.02%)</title><rect x="1166.5" y="213" width="0.2" height="15.0" fill="rgb(237,101,11)" rx="2" ry="2" />
<text  x="1169.50" y="223.5" ></text>
</g>
<g >
<title>[unknown] (2,000,000 samples, 0.01%)</title><rect x="10.0" y="485" width="0.1" height="15.0" fill="rgb(224,17,38)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>postgres (19,910,500,000 samples, 100.00%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(220,221,5)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >postgres</text>
</g>
<g >
<title>do_set_pte (4,000,000 samples, 0.02%)</title><rect x="1125.0" y="85" width="0.2" height="15.0" fill="rgb(208,16,53)" rx="2" ry="2" />
<text  x="1127.96" y="95.5" ></text>
</g>
<g >
<title>do_read_fault (2,500,000 samples, 0.01%)</title><rect x="1164.5" y="85" width="0.2" height="15.0" fill="rgb(219,120,24)" rx="2" ry="2" />
<text  x="1167.52" y="95.5" ></text>
</g>
<g >
<title>page_add_file_rmap (4,000,000 samples, 0.02%)</title><rect x="1127.8" y="53" width="0.2" height="15.0" fill="rgb(238,148,39)" rx="2" ry="2" />
<text  x="1130.77" y="63.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (5,500,000 samples, 0.03%)</title><rect x="1138.9" y="165" width="0.4" height="15.0" fill="rgb(219,63,39)" rx="2" ry="2" />
<text  x="1141.94" y="175.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (5,000,000 samples, 0.03%)</title><rect x="1138.9" y="149" width="0.3" height="15.0" fill="rgb(225,225,50)" rx="2" ry="2" />
<text  x="1141.94" y="159.5" ></text>
</g>
<g >
<title>ResourceOwnerEnlarge (3,000,000 samples, 0.02%)</title><rect x="1070.4" y="229" width="0.2" height="15.0" fill="rgb(216,24,32)" rx="2" ry="2" />
<text  x="1073.43" y="239.5" ></text>
</g>
<g >
<title>slot_getsomeattrs_int (1,034,000,000 samples, 5.19%)</title><rect x="957.2" y="277" width="61.3" height="15.0" fill="rgb(237,22,2)" rx="2" ry="2" />
<text  x="960.24" y="287.5" >slot_g..</text>
</g>
<g >
<title>error_entry (2,500,000 samples, 0.01%)</title><rect x="1139.3" y="213" width="0.1" height="15.0" fill="rgb(230,37,42)" rx="2" ry="2" />
<text  x="1142.30" y="223.5" ></text>
</g>
<g >
<title>handle_pte_fault (3,000,000 samples, 0.02%)</title><rect x="1164.5" y="117" width="0.2" height="15.0" fill="rgb(231,136,22)" rx="2" ry="2" />
<text  x="1167.49" y="127.5" ></text>
</g>
<g >
<title>mtree_range_walk (9,000,000 samples, 0.05%)</title><rect x="1138.3" y="133" width="0.5" height="15.0" fill="rgb(232,177,5)" rx="2" ry="2" />
<text  x="1141.29" y="143.5" ></text>
</g>
<g >
<title>irqentry_exit (6,000,000 samples, 0.03%)</title><rect x="1138.9" y="181" width="0.4" height="15.0" fill="rgb(246,2,10)" rx="2" ry="2" />
<text  x="1141.91" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,000,000 samples, 0.01%)</title><rect x="301.4" y="229" width="0.2" height="15.0" fill="rgb(226,16,4)" rx="2" ry="2" />
<text  x="304.44" y="239.5" ></text>
</g>
<g >
<title>update_process_times (7,000,000 samples, 0.04%)</title><rect x="949.4" y="133" width="0.4" height="15.0" fill="rgb(214,84,24)" rx="2" ry="2" />
<text  x="952.41" y="143.5" ></text>
</g>
<g >
<title>PinBuffer (13,500,000 samples, 0.07%)</title><rect x="1163.9" y="213" width="0.8" height="15.0" fill="rgb(241,3,26)" rx="2" ry="2" />
<text  x="1166.86" y="223.5" ></text>
</g>
<g >
<title>tts_buffer_heap_getsomeattrs (51,000,000 samples, 0.26%)</title><rect x="1018.5" y="277" width="3.0" height="15.0" fill="rgb(213,91,42)" rx="2" ry="2" />
<text  x="1021.52" y="287.5" ></text>
</g>
<g >
<title>pg_utf_mblen_private (10,943,500,000 samples, 54.96%)</title><rect x="301.6" y="261" width="648.5" height="15.0" fill="rgb(231,59,31)" rx="2" ry="2" />
<text  x="304.56" y="271.5" >pg_utf_mblen_private</text>
</g>
<g >
<title>mtree_range_walk (3,500,000 samples, 0.02%)</title><rect x="1137.8" y="117" width="0.3" height="15.0" fill="rgb(237,79,7)" rx="2" ry="2" />
<text  x="1140.85" y="127.5" ></text>
</g>
<g >
<title>do_set_pte (40,500,000 samples, 0.20%)</title><rect x="1126.8" y="69" width="2.4" height="15.0" fill="rgb(249,62,18)" rx="2" ry="2" />
<text  x="1129.82" y="79.5" ></text>
</g>
<g >
<title>heapgettup_pagemode (1,582,500,000 samples, 7.95%)</title><rect x="1073.1" y="261" width="93.8" height="15.0" fill="rgb(224,125,6)" rx="2" ry="2" />
<text  x="1076.07" y="271.5" >heapgettup_..</text>
</g>
<g >
<title>UnpinBufferNoOwner (16,000,000 samples, 0.08%)</title><rect x="1105.9" y="245" width="1.0" height="15.0" fill="rgb(205,22,5)" rx="2" ry="2" />
<text  x="1108.90" y="255.5" ></text>
</g>
<g >
<title>next_uptodate_page (2,000,000 samples, 0.01%)</title><rect x="1136.7" y="85" width="0.1" height="15.0" fill="rgb(208,67,34)" rx="2" ry="2" />
<text  x="1139.72" y="95.5" ></text>
</g>
<g >
<title>mt_find (5,000,000 samples, 0.03%)</title><rect x="1137.8" y="133" width="0.3" height="15.0" fill="rgb(217,12,13)" rx="2" ry="2" />
<text  x="1140.76" y="143.5" ></text>
</g>
<g >
<title>__alloc_pages (2,500,000 samples, 0.01%)</title><rect x="1136.9" y="37" width="0.2" height="15.0" fill="rgb(213,101,40)" rx="2" ry="2" />
<text  x="1139.93" y="47.5" ></text>
</g>
<g >
<title>LWLockRelease (12,500,000 samples, 0.06%)</title><rect x="1163.1" y="213" width="0.8" height="15.0" fill="rgb(250,41,22)" rx="2" ry="2" />
<text  x="1166.12" y="223.5" ></text>
</g>
<g >
<title>heap_scan_stream_read_next_serial (2,000,000 samples, 0.01%)</title><rect x="1139.8" y="245" width="0.1" height="15.0" fill="rgb(211,46,25)" rx="2" ry="2" />
<text  x="1142.80" y="255.5" ></text>
</g>
<g >
<title>hash_search_with_hash_value (320,500,000 samples, 1.61%)</title><rect x="1142.7" y="197" width="19.0" height="15.0" fill="rgb(229,144,16)" rx="2" ry="2" />
<text  x="1145.68" y="207.5" ></text>
</g>
<g >
<title>standard_ExecutorRun (19,908,500,000 samples, 99.99%)</title><rect x="10.1" y="325" width="1179.9" height="15.0" fill="rgb(231,216,14)" rx="2" ry="2" />
<text  x="13.12" y="335.5" >standard_ExecutorRun</text>
</g>
<g >
<title>filemap_map_pages (2,500,000 samples, 0.01%)</title><rect x="1164.5" y="69" width="0.2" height="15.0" fill="rgb(215,152,14)" rx="2" ry="2" />
<text  x="1167.52" y="79.5" ></text>
</g>
<g >
<title>LWLockAttemptLock (19,500,000 samples, 0.10%)</title><rect x="1162.0" y="213" width="1.1" height="15.0" fill="rgb(235,64,35)" rx="2" ry="2" />
<text  x="1164.97" y="223.5" ></text>
</g>
<g >
<title>exc_page_fault (269,000,000 samples, 1.35%)</title><rect x="1123.3" y="197" width="16.0" height="15.0" fill="rgb(250,107,41)" rx="2" ry="2" />
<text  x="1126.33" y="207.5" ></text>
</g>
<g >
<title>heap_getnextslot (2,058,000,000 samples, 10.34%)</title><rect x="1044.9" y="277" width="122.0" height="15.0" fill="rgb(226,143,15)" rx="2" ry="2" />
<text  x="1047.92" y="287.5" >heap_getnextslot</text>
</g>
<g >
<title>ExecScanFetch (174,000,000 samples, 0.87%)</title><rect x="1021.5" y="293" width="10.4" height="15.0" fill="rgb(225,216,14)" rx="2" ry="2" />
<text  x="1024.54" y="303.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (20,500,000 samples, 0.10%)</title><rect x="1128.0" y="53" width="1.2" height="15.0" fill="rgb(206,152,24)" rx="2" ry="2" />
<text  x="1131.01" y="63.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3,000,000 samples, 0.02%)</title><rect x="1164.5" y="133" width="0.2" height="15.0" fill="rgb(252,23,47)" rx="2" ry="2" />
<text  x="1167.49" y="143.5" ></text>
</g>
<g >
<title>heap_prepare_pagescan (555,000,000 samples, 2.79%)</title><rect x="1106.9" y="245" width="32.9" height="15.0" fill="rgb(248,69,27)" rx="2" ry="2" />
<text  x="1109.91" y="255.5" >he..</text>
</g>
<g >
<title>ReleaseBuffer (12,500,000 samples, 0.06%)</title><rect x="1070.6" y="245" width="0.8" height="15.0" fill="rgb(213,188,54)" rx="2" ry="2" />
<text  x="1073.61" y="255.5" ></text>
</g>
<g >
<title>PortalRun (19,908,500,000 samples, 99.99%)</title><rect x="10.1" y="357" width="1179.9" height="15.0" fill="rgb(237,81,31)" rx="2" ry="2" />
<text  x="13.12" y="367.5" >PortalRun</text>
</g>
<g >
<title>pg_mbstrlen_with_len (24,500,000 samples, 0.12%)</title><rect x="955.8" y="277" width="1.4" height="15.0" fill="rgb(247,34,19)" rx="2" ry="2" />
<text  x="958.78" y="287.5" ></text>
</g>
<g >
<title>MemoryContextReset (58,000,000 samples, 0.29%)</title><rect x="1031.9" y="293" width="3.4" height="15.0" fill="rgb(215,225,11)" rx="2" ry="2" />
<text  x="1034.85" y="303.5" ></text>
</g>
<g >
<title>ExecStoreBufferHeapTuple (20,000,000 samples, 0.10%)</title><rect x="1043.7" y="277" width="1.2" height="15.0" fill="rgb(221,72,50)" rx="2" ry="2" />
<text  x="1046.73" y="287.5" ></text>
</g>
<g >
<title>lock_vma_under_rcu (12,500,000 samples, 0.06%)</title><rect x="1138.1" y="165" width="0.7" height="15.0" fill="rgb(211,3,2)" rx="2" ry="2" />
<text  x="1141.08" y="175.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,000,000 samples, 0.01%)</title><rect x="301.4" y="213" width="0.2" height="15.0" fill="rgb(242,220,15)" rx="2" ry="2" />
<text  x="304.44" y="223.5" ></text>
</g>
<g >
<title>handle_pte_fault (215,000,000 samples, 1.08%)</title><rect x="1124.5" y="133" width="12.8" height="15.0" fill="rgb(231,65,6)" rx="2" ry="2" />
<text  x="1127.54" y="143.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3,000,000 samples, 0.02%)</title><rect x="1164.5" y="197" width="0.2" height="15.0" fill="rgb(234,228,35)" rx="2" ry="2" />
<text  x="1167.49" y="207.5" ></text>
</g>
<g >
<title>count_memcg_events.constprop.0 (4,000,000 samples, 0.02%)</title><rect x="1137.3" y="149" width="0.3" height="15.0" fill="rgb(205,213,8)" rx="2" ry="2" />
<text  x="1140.31" y="159.5" ></text>
</g>
<g >
<title>scheduler_tick (6,000,000 samples, 0.03%)</title><rect x="949.4" y="117" width="0.4" height="15.0" fill="rgb(231,30,22)" rx="2" ry="2" />
<text  x="952.41" y="127.5" ></text>
</g>
<g >
<title>mas_walk (12,500,000 samples, 0.06%)</title><rect x="1138.1" y="149" width="0.7" height="15.0" fill="rgb(230,50,23)" rx="2" ry="2" />
<text  x="1141.08" y="159.5" ></text>
</g>
<g >
<title>GetPrivateRefCountEntry (4,000,000 samples, 0.02%)</title><rect x="1164.2" y="197" width="0.3" height="15.0" fill="rgb(236,93,15)" rx="2" ry="2" />
<text  x="1167.25" y="207.5" ></text>
</g>
<g >
<title>_compound_head (2,500,000 samples, 0.01%)</title><rect x="1126.6" y="69" width="0.2" height="15.0" fill="rgb(211,53,51)" rx="2" ry="2" />
<text  x="1129.62" y="79.5" ></text>
</g>
<g >
<title>BufTableLookup (327,000,000 samples, 1.64%)</title><rect x="1142.3" y="213" width="19.4" height="15.0" fill="rgb(241,205,31)" rx="2" ry="2" />
<text  x="1145.29" y="223.5" ></text>
</g>
<g >
<title>ReleaseBuffer (16,000,000 samples, 0.08%)</title><rect x="1105.0" y="245" width="0.9" height="15.0" fill="rgb(228,201,34)" rx="2" ry="2" />
<text  x="1107.95" y="255.5" ></text>
</g>
<g >
<title>bpcharlen (46,500,000 samples, 0.23%)</title><rect x="1167.0" y="293" width="2.7" height="15.0" fill="rgb(248,183,28)" rx="2" ry="2" />
<text  x="1169.98" y="303.5" ></text>
</g>
<g >
<title>ExecInterpExpr (41,500,000 samples, 0.21%)</title><rect x="10.1" y="309" width="2.5" height="15.0" fill="rgb(213,95,45)" rx="2" ry="2" />
<text  x="13.12" y="319.5" ></text>
</g>
<g >
<title>ExecScan (19,808,000,000 samples, 99.49%)</title><rect x="12.6" y="309" width="1173.9" height="15.0" fill="rgb(218,159,47)" rx="2" ry="2" />
<text  x="15.58" y="319.5" >ExecScan</text>
</g>
<g >
<title>ResourceOwnerForget (10,000,000 samples, 0.05%)</title><rect x="1070.8" y="229" width="0.6" height="15.0" fill="rgb(206,167,39)" rx="2" ry="2" />
<text  x="1073.76" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (9,500,000 samples, 0.05%)</title><rect x="949.3" y="181" width="0.6" height="15.0" fill="rgb(231,128,13)" rx="2" ry="2" />
<text  x="952.29" y="191.5" ></text>
</g>
<g >
<title>heap_page_prune_opt (355,500,000 samples, 1.79%)</title><rect x="1118.7" y="229" width="21.1" height="15.0" fill="rgb(237,31,6)" rx="2" ry="2" />
<text  x="1121.73" y="239.5" ></text>
</g>
<g >
<title>filemap_map_pages (194,500,000 samples, 0.98%)</title><rect x="1125.2" y="85" width="11.5" height="15.0" fill="rgb(231,18,50)" rx="2" ry="2" />
<text  x="1128.19" y="95.5" ></text>
</g>
<g >
<title>IncrBufferRefCount (7,000,000 samples, 0.04%)</title><rect x="1070.2" y="245" width="0.4" height="15.0" fill="rgb(243,38,44)" rx="2" ry="2" />
<text  x="1073.20" y="255.5" ></text>
</g>
<g >
<title>GetPrivateRefCountEntry (10,500,000 samples, 0.05%)</title><rect x="1106.2" y="229" width="0.7" height="15.0" fill="rgb(211,161,6)" rx="2" ry="2" />
<text  x="1109.23" y="239.5" ></text>
</g>
<g >
<title>task_tick_fair (3,500,000 samples, 0.02%)</title><rect x="949.5" y="101" width="0.2" height="15.0" fill="rgb(237,88,24)" rx="2" ry="2" />
<text  x="952.47" y="111.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,500,000 samples, 0.07%)</title><rect x="949.3" y="245" width="0.8" height="15.0" fill="rgb(223,91,16)" rx="2" ry="2" />
<text  x="952.26" y="255.5" ></text>
</g>
<g >
<title>xas_load (10,000,000 samples, 0.05%)</title><rect x="1136.0" y="53" width="0.5" height="15.0" fill="rgb(248,61,8)" rx="2" ry="2" />
<text  x="1138.95" y="63.5" ></text>
</g>
<g >
<title>do_fault (210,000,000 samples, 1.05%)</title><rect x="1124.8" y="117" width="12.5" height="15.0" fill="rgb(220,220,41)" rx="2" ry="2" />
<text  x="1127.81" y="127.5" ></text>
</g>
<g >
<title>PortalRunSelect (19,908,500,000 samples, 99.99%)</title><rect x="10.1" y="341" width="1179.9" height="15.0" fill="rgb(233,94,0)" rx="2" ry="2" />
<text  x="13.12" y="351.5" >PortalRunSelect</text>
</g>
<g >
<title>exc_page_fault (3,000,000 samples, 0.02%)</title><rect x="1164.5" y="181" width="0.2" height="15.0" fill="rgb(226,154,25)" rx="2" ry="2" />
<text  x="1167.49" y="191.5" ></text>
</g>
<g >
<title>read_stream_next_buffer (452,500,000 samples, 2.27%)</title><rect x="1140.0" y="245" width="26.8" height="15.0" fill="rgb(230,13,40)" rx="2" ry="2" />
<text  x="1143.01" y="255.5" >r..</text>
</g>
<g >
<title>LockBuffer (5,500,000 samples, 0.03%)</title><rect x="1104.6" y="245" width="0.4" height="15.0" fill="rgb(226,8,12)" rx="2" ry="2" />
<text  x="1107.63" y="255.5" ></text>
</g>
<g >
<title>pg_database_encoding_max_length (28,500,000 samples, 0.14%)</title><rect x="950.1" y="277" width="1.7" height="15.0" fill="rgb(232,207,38)" rx="2" ry="2" />
<text  x="953.12" y="287.5" ></text>
</g>
<g >
<title>[postgres] (19,908,500,000 samples, 99.99%)</title><rect x="10.1" y="421" width="1179.9" height="15.0" fill="rgb(244,79,25)" rx="2" ry="2" />
<text  x="13.12" y="431.5" >[postgres]</text>
</g>
<g >
<title>StartReadBuffer (406,500,000 samples, 2.04%)</title><rect x="1140.8" y="229" width="24.1" height="15.0" fill="rgb(254,190,25)" rx="2" ry="2" />
<text  x="1143.81" y="239.5" >S..</text>
</g>
<g >
<title>tick_sched_handle (7,000,000 samples, 0.04%)</title><rect x="949.4" y="149" width="0.4" height="15.0" fill="rgb(236,66,1)" rx="2" ry="2" />
<text  x="952.41" y="159.5" ></text>
</g>
<g >
<title>UnpinBufferNoOwner (18,500,000 samples, 0.09%)</title><rect x="1071.4" y="245" width="1.1" height="15.0" fill="rgb(226,163,29)" rx="2" ry="2" />
<text  x="1074.41" y="255.5" ></text>
</g>
<g >
<title>tts_buffer_heap_getsomeattrs (996,000,000 samples, 5.00%)</title><rect x="959.5" y="261" width="59.0" height="15.0" fill="rgb(231,116,31)" rx="2" ry="2" />
<text  x="962.49" y="271.5" >tts_bu..</text>
</g>
<g >
<title>handle_mm_fault (3,000,000 samples, 0.02%)</title><rect x="1164.5" y="149" width="0.2" height="15.0" fill="rgb(233,89,32)" rx="2" ry="2" />
<text  x="1167.49" y="159.5" ></text>
</g>
<g >
<title>retbleed_return_thunk (2,000,000 samples, 0.01%)</title><rect x="1139.4" y="213" width="0.2" height="15.0" fill="rgb(206,144,38)" rx="2" ry="2" />
<text  x="1142.45" y="223.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (7,500,000 samples, 0.04%)</title><rect x="1137.6" y="165" width="0.5" height="15.0" fill="rgb(226,15,44)" rx="2" ry="2" />
<text  x="1140.64" y="175.5" ></text>
</g>
<g >
<title>xas_descend (3,500,000 samples, 0.02%)</title><rect x="1136.3" y="37" width="0.2" height="15.0" fill="rgb(208,224,23)" rx="2" ry="2" />
<text  x="1139.31" y="47.5" ></text>
</g>
<g >
<title>SeqNext (2,221,000,000 samples, 11.15%)</title><rect x="1035.3" y="293" width="131.6" height="15.0" fill="rgb(211,50,54)" rx="2" ry="2" />
<text  x="1038.29" y="303.5" >SeqNext</text>
</g>
<g >
<title>bpcharlen (14,721,000,000 samples, 73.94%)</title><rect x="77.7" y="277" width="872.4" height="15.0" fill="rgb(225,119,22)" rx="2" ry="2" />
<text  x="80.68" y="287.5" >bpcharlen</text>
</g>
<g >
<title>__libc_start_call_main (19,908,500,000 samples, 99.99%)</title><rect x="10.1" y="485" width="1179.9" height="15.0" fill="rgb(227,160,22)" rx="2" ry="2" />
<text  x="13.12" y="495.5" >__libc_start_call_main</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (12,000,000 samples, 0.06%)</title><rect x="949.3" y="213" width="0.7" height="15.0" fill="rgb(232,63,33)" rx="2" ry="2" />
<text  x="952.29" y="223.5" ></text>
</g>
<g >
<title>tick_sched_timer (8,500,000 samples, 0.04%)</title><rect x="949.3" y="165" width="0.5" height="15.0" fill="rgb(205,91,21)" rx="2" ry="2" />
<text  x="952.32" y="175.5" ></text>
</g>
<g >
<title>all (19,910,500,000 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(225,178,38)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>LWLockAttemptLock (4,000,000 samples, 0.02%)</title><rect x="1118.5" y="229" width="0.2" height="15.0" fill="rgb(219,208,37)" rx="2" ry="2" />
<text  x="1121.47" y="239.5" ></text>
</g>
<g >
<title>next_uptodate_page (108,500,000 samples, 0.54%)</title><rect x="1129.3" y="69" width="6.4" height="15.0" fill="rgb(223,219,5)" rx="2" ry="2" />
<text  x="1132.28" y="79.5" ></text>
</g>
<g >
<title>page_add_file_rmap (2,500,000 samples, 0.01%)</title><rect x="1135.7" y="69" width="0.2" height="15.0" fill="rgb(245,157,24)" rx="2" ry="2" />
<text  x="1138.71" y="79.5" ></text>
</g>
<g >
<title>sync_regs (4,000,000 samples, 0.02%)</title><rect x="1139.6" y="213" width="0.2" height="15.0" fill="rgb(214,119,15)" rx="2" ry="2" />
<text  x="1142.57" y="223.5" ></text>
</g>
<g >
<title>MemoryContextReset (35,000,000 samples, 0.18%)</title><rect x="1187.7" y="309" width="2.1" height="15.0" fill="rgb(237,150,26)" rx="2" ry="2" />
<text  x="1190.75" y="319.5" ></text>
</g>
<g >
<title>pg_mbstrlen_with_len (3,216,500,000 samples, 16.15%)</title><rect x="110.9" y="261" width="190.7" height="15.0" fill="rgb(218,103,16)" rx="2" ry="2" />
<text  x="113.93" y="271.5" >pg_mbstrlen_with_len</text>
</g>
<g >
<title>LWLockAcquire (2,500,000 samples, 0.01%)</title><rect x="1161.8" y="213" width="0.2" height="15.0" fill="rgb(234,23,25)" rx="2" ry="2" />
<text  x="1164.82" y="223.5" ></text>
</g>
<g >
<title>ExecInterpExpr (16,881,000,000 samples, 84.78%)</title><rect x="21.1" y="293" width="1000.4" height="15.0" fill="rgb(215,180,3)" rx="2" ry="2" />
<text  x="24.08" y="303.5" >ExecInterpExpr</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (14,000,000 samples, 0.07%)</title><rect x="949.3" y="229" width="0.8" height="15.0" fill="rgb(225,172,52)" rx="2" ry="2" />
<text  x="952.29" y="239.5" ></text>
</g>
<g >
<title>next_uptodate_page (2,500,000 samples, 0.01%)</title><rect x="1164.5" y="53" width="0.2" height="15.0" fill="rgb(237,212,9)" rx="2" ry="2" />
<text  x="1167.52" y="63.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,500,000 samples, 0.06%)</title><rect x="949.3" y="197" width="0.7" height="15.0" fill="rgb(205,179,37)" rx="2" ry="2" />
<text  x="952.29" y="207.5" ></text>
</g>
<g >
<title>ExecStoreBufferHeapTuple (350,500,000 samples, 1.76%)</title><rect x="1051.8" y="261" width="20.7" height="15.0" fill="rgb(249,127,13)" rx="2" ry="2" />
<text  x="1054.76" y="271.5" ></text>
</g>
<g >
<title>LWLockAcquire (3,500,000 samples, 0.02%)</title><rect x="1118.3" y="229" width="0.2" height="15.0" fill="rgb(212,139,22)" rx="2" ry="2" />
<text  x="1121.26" y="239.5" ></text>
</g>
<g >
<title>ExecScanFetch (21,000,000 samples, 0.11%)</title><rect x="1186.5" y="309" width="1.2" height="15.0" fill="rgb(222,222,44)" rx="2" ry="2" />
<text  x="1189.50" y="319.5" ></text>
</g>
<g >
<title>SeqNext (3,000,000 samples, 0.02%)</title><rect x="1189.8" y="309" width="0.2" height="15.0" fill="rgb(206,76,38)" rx="2" ry="2" />
<text  x="1192.82" y="319.5" ></text>
</g>
<g >
<title>update_load_avg (3,000,000 samples, 0.02%)</title><rect x="949.5" y="85" width="0.2" height="15.0" fill="rgb(206,91,19)" rx="2" ry="2" />
<text  x="952.50" y="95.5" ></text>
</g>
<g >
<title>handle_mm_fault (235,000,000 samples, 1.18%)</title><rect x="1123.7" y="165" width="13.9" height="15.0" fill="rgb(236,159,37)" rx="2" ry="2" />
<text  x="1126.71" y="175.5" ></text>
</g>
<g >
<title>xas_find (12,000,000 samples, 0.06%)</title><rect x="1135.9" y="69" width="0.7" height="15.0" fill="rgb(213,60,54)" rx="2" ry="2" />
<text  x="1138.92" y="79.5" ></text>
</g>
<g >
<title>find_vma (7,000,000 samples, 0.04%)</title><rect x="1137.7" y="149" width="0.4" height="15.0" fill="rgb(224,105,20)" rx="2" ry="2" />
<text  x="1140.67" y="159.5" ></text>
</g>
<g >
<title>pg_detoast_datum_packed (67,000,000 samples, 0.34%)</title><rect x="951.8" y="277" width="4.0" height="15.0" fill="rgb(250,36,34)" rx="2" ry="2" />
<text  x="954.81" y="287.5" ></text>
</g>
<g >
<title>alloc_pages (3,500,000 samples, 0.02%)</title><rect x="1136.9" y="69" width="0.2" height="15.0" fill="rgb(242,22,20)" rx="2" ry="2" />
<text  x="1139.87" y="79.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,000,000 samples, 0.01%)</title><rect x="301.4" y="197" width="0.2" height="15.0" fill="rgb(205,1,19)" rx="2" ry="2" />
<text  x="304.44" y="207.5" ></text>
</g>
<g >
<title>hash_bytes (22,000,000 samples, 0.11%)</title><rect x="1165.0" y="229" width="1.3" height="15.0" fill="rgb(243,225,43)" rx="2" ry="2" />
<text  x="1167.96" y="239.5" ></text>
</g>
<g >
<title>LWLockRelease (4,000,000 samples, 0.02%)</title><rect x="1104.4" y="245" width="0.2" height="15.0" fill="rgb(220,152,6)" rx="2" ry="2" />
<text  x="1107.39" y="255.5" ></text>
</g>
<g >
<title>heap_getnextslot (101,000,000 samples, 0.51%)</title><rect x="1169.7" y="293" width="6.0" height="15.0" fill="rgb(221,50,53)" rx="2" ry="2" />
<text  x="1172.73" y="303.5" ></text>
</g>
<g >
<title>ResourceOwnerForget (10,000,000 samples, 0.05%)</title><rect x="1105.3" y="229" width="0.6" height="15.0" fill="rgb(206,84,39)" rx="2" ry="2" />
<text  x="1108.31" y="239.5" ></text>
</g>
<g >
<title>do_fault (2,500,000 samples, 0.01%)</title><rect x="1164.5" y="101" width="0.2" height="15.0" fill="rgb(217,45,12)" rx="2" ry="2" />
<text  x="1167.52" y="111.5" ></text>
</g>
<g >
<title>__handle_mm_fault (224,000,000 samples, 1.13%)</title><rect x="1124.0" y="149" width="13.3" height="15.0" fill="rgb(229,186,45)" rx="2" ry="2" />
<text  x="1127.04" y="159.5" ></text>
</g>
<g >
<title>do_user_addr_fault (258,500,000 samples, 1.30%)</title><rect x="1123.6" y="181" width="15.3" height="15.0" fill="rgb(251,68,31)" rx="2" ry="2" />
<text  x="1126.56" y="191.5" ></text>
</g>
<g >
<title>alloc_page_interleave (2,500,000 samples, 0.01%)</title><rect x="1136.9" y="53" width="0.2" height="15.0" fill="rgb(212,211,8)" rx="2" ry="2" />
<text  x="1139.93" y="63.5" ></text>
</g>
<g >
<title>main (19,908,500,000 samples, 99.99%)</title><rect x="10.1" y="469" width="1179.9" height="15.0" fill="rgb(231,212,41)" rx="2" ry="2" />
<text  x="13.12" y="479.5" >main</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,000,000 samples, 0.01%)</title><rect x="301.4" y="245" width="0.2" height="15.0" fill="rgb(247,144,47)" rx="2" ry="2" />
<text  x="304.44" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,000,000 samples, 0.01%)</title><rect x="301.4" y="181" width="0.2" height="15.0" fill="rgb(243,204,30)" rx="2" ry="2" />
<text  x="304.44" y="191.5" ></text>
</g>
<g >
<title>GetPrivateRefCountEntry (4,000,000 samples, 0.02%)</title><rect x="1070.2" y="229" width="0.2" height="15.0" fill="rgb(242,154,22)" rx="2" ry="2" />
<text  x="1073.20" y="239.5" ></text>
</g>
<g >
<title>ResourceOwnerRemember (2,500,000 samples, 0.01%)</title><rect x="1072.9" y="261" width="0.1" height="15.0" fill="rgb(220,154,38)" rx="2" ry="2" />
<text  x="1075.89" y="271.5" ></text>
</g>
<g >
<title>slot_getsomeattrs_int (28,500,000 samples, 0.14%)</title><rect x="1184.8" y="293" width="1.7" height="15.0" fill="rgb(254,223,5)" rx="2" ry="2" />
<text  x="1187.81" y="303.5" ></text>
</g>
<g >
<title>ServerLoop (19,908,500,000 samples, 99.99%)</title><rect x="10.1" y="437" width="1179.9" height="15.0" fill="rgb(207,10,54)" rx="2" ry="2" />
<text  x="13.12" y="447.5" >ServerLoop</text>
</g>
<g >
<title>GetPrivateRefCountEntry (10,000,000 samples, 0.05%)</title><rect x="1071.9" y="229" width="0.6" height="15.0" fill="rgb(205,3,31)" rx="2" ry="2" />
<text  x="1074.91" y="239.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3,000,000 samples, 0.02%)</title><rect x="1164.5" y="165" width="0.2" height="15.0" fill="rgb(233,222,42)" rx="2" ry="2" />
<text  x="1167.49" y="175.5" ></text>
</g>
</g>
</svg>
