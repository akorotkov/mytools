<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>__sysvec_apic_timer_interrupt (2,500,000 samples, 0.01%)</title><rect x="310.4" y="213" width="0.2" height="15.0" fill="rgb(229,0,15)" rx="2" ry="2" />
<text  x="313.40" y="223.5" ></text>
</g>
<g >
<title>__libc_start_call_main (19,895,500,000 samples, 100.00%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(211,61,7)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >__libc_start_call_main</text>
</g>
<g >
<title>ResourceOwnerRememberBuffer (5,000,000 samples, 0.03%)</title><rect x="1086.7" y="245" width="0.3" height="15.0" fill="rgb(220,212,32)" rx="2" ry="2" />
<text  x="1089.74" y="255.5" ></text>
</g>
<g >
<title>LockBuffer (3,000,000 samples, 0.02%)</title><rect x="1144.9" y="229" width="0.1" height="15.0" fill="rgb(213,9,4)" rx="2" ry="2" />
<text  x="1147.87" y="239.5" ></text>
</g>
<g >
<title>ServerLoop (19,895,500,000 samples, 100.00%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(229,223,30)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >ServerLoop</text>
</g>
<g >
<title>xas_find (17,000,000 samples, 0.09%)</title><rect x="1042.3" y="101" width="1.1" height="15.0" fill="rgb(219,186,42)" rx="2" ry="2" />
<text  x="1045.35" y="111.5" ></text>
</g>
<g >
<title>xas_load (9,500,000 samples, 0.05%)</title><rect x="1042.7" y="85" width="0.6" height="15.0" fill="rgb(244,6,9)" rx="2" ry="2" />
<text  x="1045.70" y="95.5" ></text>
</g>
<g >
<title>PortalRun (19,895,500,000 samples, 100.00%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(227,154,22)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >PortalRun</text>
</g>
<g >
<title>irqentry_exit (6,000,000 samples, 0.03%)</title><rect x="1045.3" y="213" width="0.4" height="15.0" fill="rgb(206,89,33)" rx="2" ry="2" />
<text  x="1048.34" y="223.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (266,000,000 samples, 1.34%)</title><rect x="1030.0" y="245" width="15.8" height="15.0" fill="rgb(221,103,36)" rx="2" ry="2" />
<text  x="1032.98" y="255.5" ></text>
</g>
<g >
<title>GetPrivateRefCountEntry (10,500,000 samples, 0.05%)</title><rect x="1168.9" y="213" width="0.6" height="15.0" fill="rgb(242,103,10)" rx="2" ry="2" />
<text  x="1171.89" y="223.5" ></text>
</g>
<g >
<title>next_uptodate_page (12,000,000 samples, 0.06%)</title><rect x="1172.7" y="69" width="0.7" height="15.0" fill="rgb(209,130,33)" rx="2" ry="2" />
<text  x="1175.71" y="79.5" ></text>
</g>
<g >
<title>ExecInterpExpr (33,500,000 samples, 0.17%)</title><rect x="10.0" y="309" width="2.0" height="15.0" fill="rgb(252,91,53)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (6,500,000 samples, 0.03%)</title><rect x="959.7" y="181" width="0.4" height="15.0" fill="rgb(212,91,50)" rx="2" ry="2" />
<text  x="962.70" y="191.5" ></text>
</g>
<g >
<title>xas_descend (4,500,000 samples, 0.02%)</title><rect x="1043.0" y="69" width="0.2" height="15.0" fill="rgb(207,110,7)" rx="2" ry="2" />
<text  x="1045.97" y="79.5" ></text>
</g>
<g >
<title>MemoryContextReset (23,000,000 samples, 0.12%)</title><rect x="1051.6" y="293" width="1.4" height="15.0" fill="rgb(229,92,45)" rx="2" ry="2" />
<text  x="1054.60" y="303.5" ></text>
</g>
<g >
<title>handle_pte_fault (22,000,000 samples, 0.11%)</title><rect x="1172.2" y="133" width="1.3" height="15.0" fill="rgb(226,23,40)" rx="2" ry="2" />
<text  x="1175.21" y="143.5" ></text>
</g>
<g >
<title>PostgresMain (19,895,500,000 samples, 100.00%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(215,140,18)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >PostgresMain</text>
</g>
<g >
<title>mem_cgroup_from_task (2,500,000 samples, 0.01%)</title><rect x="1045.2" y="197" width="0.1" height="15.0" fill="rgb(227,112,42)" rx="2" ry="2" />
<text  x="1048.17" y="207.5" ></text>
</g>
<g >
<title>PinBuffer (18,000,000 samples, 0.09%)</title><rect x="1166.1" y="197" width="1.1" height="15.0" fill="rgb(217,47,19)" rx="2" ry="2" />
<text  x="1169.10" y="207.5" ></text>
</g>
<g >
<title>update_process_times (3,000,000 samples, 0.02%)</title><rect x="959.9" y="133" width="0.2" height="15.0" fill="rgb(216,10,28)" rx="2" ry="2" />
<text  x="962.91" y="143.5" ></text>
</g>
<g >
<title>do_user_addr_fault (4,500,000 samples, 0.02%)</title><rect x="1166.9" y="149" width="0.3" height="15.0" fill="rgb(218,216,41)" rx="2" ry="2" />
<text  x="1169.90" y="159.5" ></text>
</g>
<g >
<title>LWLockAcquire (2,500,000 samples, 0.01%)</title><rect x="1164.3" y="197" width="0.1" height="15.0" fill="rgb(214,212,51)" rx="2" ry="2" />
<text  x="1167.29" y="207.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (5,000,000 samples, 0.03%)</title><rect x="1045.4" y="197" width="0.3" height="15.0" fill="rgb(242,189,1)" rx="2" ry="2" />
<text  x="1048.40" y="207.5" ></text>
</g>
<g >
<title>heapgetpage (821,000,000 samples, 4.13%)</title><rect x="1124.9" y="245" width="48.7" height="15.0" fill="rgb(249,158,16)" rx="2" ry="2" />
<text  x="1127.91" y="255.5" >heap..</text>
</g>
<g >
<title>exc_page_fault (248,000,000 samples, 1.25%)</title><rect x="1031.0" y="229" width="14.8" height="15.0" fill="rgb(222,93,39)" rx="2" ry="2" />
<text  x="1034.05" y="239.5" ></text>
</g>
<g >
<title>ReadBufferExtended (395,000,000 samples, 1.99%)</title><rect x="1145.0" y="229" width="23.5" height="15.0" fill="rgb(214,113,5)" rx="2" ry="2" />
<text  x="1148.04" y="239.5" >R..</text>
</g>
<g >
<title>hrtimer_interrupt (7,500,000 samples, 0.04%)</title><rect x="959.7" y="197" width="0.4" height="15.0" fill="rgb(210,57,14)" rx="2" ry="2" />
<text  x="962.70" y="207.5" ></text>
</g>
<g >
<title>all (19,895,500,000 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(216,102,15)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>exc_page_fault (4,500,000 samples, 0.02%)</title><rect x="1166.9" y="165" width="0.3" height="15.0" fill="rgb(231,11,7)" rx="2" ry="2" />
<text  x="1169.90" y="175.5" ></text>
</g>
<g >
<title>_compound_head (2,500,000 samples, 0.01%)</title><rect x="1034.5" y="101" width="0.2" height="15.0" fill="rgb(254,18,10)" rx="2" ry="2" />
<text  x="1037.55" y="111.5" ></text>
</g>
<g >
<title>main (19,895,500,000 samples, 100.00%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(213,168,25)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >main</text>
</g>
<g >
<title>heapgettup_pagemode (1,449,000,000 samples, 7.28%)</title><rect x="1088.0" y="261" width="86.0" height="15.0" fill="rgb(212,18,8)" rx="2" ry="2" />
<text  x="1091.05" y="271.5" >heapgettup..</text>
</g>
<g >
<title>percpu_counter_add_batch (2,500,000 samples, 0.01%)</title><rect x="1042.2" y="101" width="0.1" height="15.0" fill="rgb(253,45,41)" rx="2" ry="2" />
<text  x="1045.20" y="111.5" ></text>
</g>
<g >
<title>tts_buffer_heap_getsomeattrs (2,000,000 samples, 0.01%)</title><rect x="960.3" y="261" width="0.1" height="15.0" fill="rgb(246,88,16)" rx="2" ry="2" />
<text  x="963.29" y="271.5" ></text>
</g>
<g >
<title>tts_buffer_heap_getsomeattrs (3,000,000 samples, 0.02%)</title><rect x="1173.8" y="245" width="0.2" height="15.0" fill="rgb(210,169,29)" rx="2" ry="2" />
<text  x="1176.81" y="255.5" ></text>
</g>
<g >
<title>tick_sched_handle (3,000,000 samples, 0.02%)</title><rect x="959.9" y="149" width="0.2" height="15.0" fill="rgb(249,22,51)" rx="2" ry="2" />
<text  x="962.91" y="159.5" ></text>
</g>
<g >
<title>exec_simple_query (19,895,500,000 samples, 100.00%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(234,227,5)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >exec_simple_query</text>
</g>
<g >
<title>percpu_counter_add_batch (18,500,000 samples, 0.09%)</title><rect x="1036.3" y="85" width="1.1" height="15.0" fill="rgb(249,141,12)" rx="2" ry="2" />
<text  x="1039.30" y="95.5" ></text>
</g>
<g >
<title>pg_utf_mblen (10,954,000,000 samples, 55.06%)</title><rect x="310.6" y="261" width="649.7" height="15.0" fill="rgb(224,5,39)" rx="2" ry="2" />
<text  x="313.61" y="271.5" >pg_utf_mblen</text>
</g>
<g >
<title>LWLockAttemptLock (15,000,000 samples, 0.08%)</title><rect x="1164.4" y="197" width="0.9" height="15.0" fill="rgb(224,122,16)" rx="2" ry="2" />
<text  x="1167.44" y="207.5" ></text>
</g>
<g >
<title>pg_mbstrlen_with_len (20,000,000 samples, 0.10%)</title><rect x="964.4" y="277" width="1.1" height="15.0" fill="rgb(238,229,40)" rx="2" ry="2" />
<text  x="967.36" y="287.5" ></text>
</g>
<g >
<title>find_vma (7,000,000 samples, 0.04%)</title><rect x="1044.4" y="181" width="0.4" height="15.0" fill="rgb(214,125,27)" rx="2" ry="2" />
<text  x="1047.36" y="191.5" ></text>
</g>
<g >
<title>do_fault (198,500,000 samples, 1.00%)</title><rect x="1032.2" y="149" width="11.8" height="15.0" fill="rgb(246,152,6)" rx="2" ry="2" />
<text  x="1035.24" y="159.5" ></text>
</g>
<g >
<title>sync_regs (5,500,000 samples, 0.03%)</title><rect x="1045.9" y="245" width="0.4" height="15.0" fill="rgb(244,121,49)" rx="2" ry="2" />
<text  x="1048.94" y="255.5" ></text>
</g>
<g >
<title>pg_detoast_datum_packed (39,000,000 samples, 0.20%)</title><rect x="962.0" y="277" width="2.4" height="15.0" fill="rgb(214,68,48)" rx="2" ry="2" />
<text  x="965.04" y="287.5" ></text>
</g>
<g >
<title>PortalRunSelect (19,895,500,000 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(235,52,1)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >PortalRunSelect</text>
</g>
<g >
<title>do_user_addr_fault (237,500,000 samples, 1.19%)</title><rect x="1031.3" y="213" width="14.0" height="15.0" fill="rgb(208,35,18)" rx="2" ry="2" />
<text  x="1034.26" y="223.5" ></text>
</g>
<g >
<title>heap_getnextslot (82,000,000 samples, 0.41%)</title><rect x="1176.7" y="293" width="4.9" height="15.0" fill="rgb(231,53,10)" rx="2" ry="2" />
<text  x="1179.74" y="303.5" ></text>
</g>
<g >
<title>ResourceArrayRemove (5,000,000 samples, 0.03%)</title><rect x="1087.7" y="213" width="0.3" height="15.0" fill="rgb(209,226,19)" rx="2" ry="2" />
<text  x="1090.66" y="223.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (4,000,000 samples, 0.02%)</title><rect x="973.5" y="229" width="0.3" height="15.0" fill="rgb(225,115,41)" rx="2" ry="2" />
<text  x="976.52" y="239.5" ></text>
</g>
<g >
<title>handle_mm_fault (23,500,000 samples, 0.12%)</title><rect x="1172.1" y="165" width="1.4" height="15.0" fill="rgb(245,48,38)" rx="2" ry="2" />
<text  x="1175.12" y="175.5" ></text>
</g>
<g >
<title>MemoryContextReset (62,500,000 samples, 0.31%)</title><rect x="1186.3" y="309" width="3.7" height="15.0" fill="rgb(221,139,20)" rx="2" ry="2" />
<text  x="1189.29" y="319.5" ></text>
</g>
<g >
<title>error_entry (2,000,000 samples, 0.01%)</title><rect x="1045.8" y="245" width="0.1" height="15.0" fill="rgb(215,3,40)" rx="2" ry="2" />
<text  x="1048.76" y="255.5" ></text>
</g>
<g >
<title>do_user_addr_fault (25,000,000 samples, 0.13%)</title><rect x="1172.1" y="181" width="1.5" height="15.0" fill="rgb(218,89,24)" rx="2" ry="2" />
<text  x="1175.12" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3,500,000 samples, 0.02%)</title><rect x="310.4" y="229" width="0.2" height="15.0" fill="rgb(214,115,5)" rx="2" ry="2" />
<text  x="313.40" y="239.5" ></text>
</g>
<g >
<title>standard_ExecutorRun (19,895,500,000 samples, 100.00%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(242,62,5)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >standard_ExecutorRun</text>
</g>
<g >
<title>ExecStoreBufferHeapTuple (20,500,000 samples, 0.10%)</title><rect x="1059.7" y="277" width="1.2" height="15.0" fill="rgb(217,58,42)" rx="2" ry="2" />
<text  x="1062.67" y="287.5" ></text>
</g>
<g >
<title>slot_getsomeattrs_int (1,361,000,000 samples, 6.84%)</title><rect x="965.5" y="277" width="80.8" height="15.0" fill="rgb(247,140,17)" rx="2" ry="2" />
<text  x="968.54" y="287.5" >slot_gets..</text>
</g>
<g >
<title>mt_find (5,500,000 samples, 0.03%)</title><rect x="1044.5" y="165" width="0.3" height="15.0" fill="rgb(232,126,42)" rx="2" ry="2" />
<text  x="1047.45" y="175.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (4,500,000 samples, 0.02%)</title><rect x="1166.9" y="181" width="0.3" height="15.0" fill="rgb(253,162,45)" rx="2" ry="2" />
<text  x="1169.90" y="191.5" ></text>
</g>
<g >
<title>hash_search_with_hash_value (293,500,000 samples, 1.48%)</title><rect x="1146.7" y="181" width="17.4" height="15.0" fill="rgb(213,9,12)" rx="2" ry="2" />
<text  x="1149.73" y="191.5" ></text>
</g>
<g >
<title>GetPrivateRefCountEntry (4,000,000 samples, 0.02%)</title><rect x="1087.4" y="229" width="0.3" height="15.0" fill="rgb(250,89,12)" rx="2" ry="2" />
<text  x="1090.42" y="239.5" ></text>
</g>
<g >
<title>xas_move_index (2,000,000 samples, 0.01%)</title><rect x="1043.4" y="101" width="0.1" height="15.0" fill="rgb(214,134,46)" rx="2" ry="2" />
<text  x="1046.36" y="111.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (7,500,000 samples, 0.04%)</title><rect x="1044.3" y="197" width="0.5" height="15.0" fill="rgb(235,74,2)" rx="2" ry="2" />
<text  x="1047.33" y="207.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2,000,000 samples, 0.01%)</title><rect x="1173.8" y="229" width="0.1" height="15.0" fill="rgb(227,151,11)" rx="2" ry="2" />
<text  x="1176.81" y="239.5" ></text>
</g>
<g >
<title>do_read_fault (4,500,000 samples, 0.02%)</title><rect x="1166.9" y="69" width="0.3" height="15.0" fill="rgb(215,78,20)" rx="2" ry="2" />
<text  x="1169.90" y="79.5" ></text>
</g>
<g >
<title>pte_alloc_one (4,000,000 samples, 0.02%)</title><rect x="1043.6" y="117" width="0.2" height="15.0" fill="rgb(206,182,27)" rx="2" ry="2" />
<text  x="1046.59" y="127.5" ></text>
</g>
<g >
<title>handle_mm_fault (218,000,000 samples, 1.10%)</title><rect x="1031.4" y="197" width="12.9" height="15.0" fill="rgb(232,137,39)" rx="2" ry="2" />
<text  x="1034.41" y="207.5" ></text>
</g>
<g >
<title>do_read_fault (193,500,000 samples, 0.97%)</title><rect x="1032.4" y="133" width="11.5" height="15.0" fill="rgb(205,43,32)" rx="2" ry="2" />
<text  x="1035.41" y="143.5" ></text>
</g>
<g >
<title>LWLockRelease (10,500,000 samples, 0.05%)</title><rect x="1144.2" y="229" width="0.7" height="15.0" fill="rgb(244,91,18)" rx="2" ry="2" />
<text  x="1147.24" y="239.5" ></text>
</g>
<g >
<title>pg_mbstrlen_with_len (3,345,500,000 samples, 16.82%)</title><rect x="112.2" y="261" width="198.4" height="15.0" fill="rgb(222,146,48)" rx="2" ry="2" />
<text  x="115.19" y="271.5" >pg_mbstrlen_with_len</text>
</g>
<g >
<title>IncrBufferRefCount (3,000,000 samples, 0.02%)</title><rect x="1086.5" y="245" width="0.2" height="15.0" fill="rgb(211,127,31)" rx="2" ry="2" />
<text  x="1089.53" y="255.5" ></text>
</g>
<g >
<title>bpcharlen (14,826,000,000 samples, 74.52%)</title><rect x="81.1" y="277" width="879.3" height="15.0" fill="rgb(229,55,34)" rx="2" ry="2" />
<text  x="84.08" y="287.5" >bpcharlen</text>
</g>
<g >
<title>next_uptodate_page (80,500,000 samples, 0.40%)</title><rect x="1037.4" y="101" width="4.8" height="15.0" fill="rgb(230,142,51)" rx="2" ry="2" />
<text  x="1040.40" y="111.5" ></text>
</g>
<g >
<title>handle_mm_fault (4,500,000 samples, 0.02%)</title><rect x="1166.9" y="133" width="0.3" height="15.0" fill="rgb(209,193,13)" rx="2" ry="2" />
<text  x="1169.90" y="143.5" ></text>
</g>
<g >
<title>LWLockAcquire (8,500,000 samples, 0.04%)</title><rect x="1143.6" y="229" width="0.6" height="15.0" fill="rgb(209,205,43)" rx="2" ry="2" />
<text  x="1146.65" y="239.5" ></text>
</g>
<g >
<title>ExecInterpExpr (17,375,000,000 samples, 87.33%)</title><rect x="18.2" y="293" width="1030.5" height="15.0" fill="rgb(216,22,27)" rx="2" ry="2" />
<text  x="21.16" y="303.5" >ExecInterpExpr</text>
</g>
<g >
<title>hash_bytes (19,000,000 samples, 0.10%)</title><rect x="1167.3" y="213" width="1.1" height="15.0" fill="rgb(223,41,36)" rx="2" ry="2" />
<text  x="1170.28" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,500,000 samples, 0.05%)</title><rect x="959.6" y="245" width="0.7" height="15.0" fill="rgb(230,193,34)" rx="2" ry="2" />
<text  x="962.64" y="255.5" ></text>
</g>
<g >
<title>mtree_range_walk (3,500,000 samples, 0.02%)</title><rect x="1044.6" y="149" width="0.2" height="15.0" fill="rgb(213,104,0)" rx="2" ry="2" />
<text  x="1047.57" y="159.5" ></text>
</g>
<g >
<title>ResourceArrayRemove (3,500,000 samples, 0.02%)</title><rect x="1169.6" y="197" width="0.2" height="15.0" fill="rgb(215,37,45)" rx="2" ry="2" />
<text  x="1172.63" y="207.5" ></text>
</g>
<g >
<title>LWLockRelease (13,000,000 samples, 0.07%)</title><rect x="1165.3" y="197" width="0.8" height="15.0" fill="rgb(247,5,44)" rx="2" ry="2" />
<text  x="1168.33" y="207.5" ></text>
</g>
<g >
<title>filemap_map_pages (182,500,000 samples, 0.92%)</title><rect x="1032.7" y="117" width="10.8" height="15.0" fill="rgb(214,119,27)" rx="2" ry="2" />
<text  x="1035.65" y="127.5" ></text>
</g>
<g >
<title>ss_report_location (2,500,000 samples, 0.01%)</title><rect x="1173.6" y="245" width="0.2" height="15.0" fill="rgb(249,155,8)" rx="2" ry="2" />
<text  x="1176.63" y="255.5" ></text>
</g>
<g >
<title>handle_pte_fault (202,000,000 samples, 1.02%)</title><rect x="1032.2" y="165" width="12.0" height="15.0" fill="rgb(244,93,25)" rx="2" ry="2" />
<text  x="1035.18" y="175.5" ></text>
</g>
<g >
<title>heapgetpage (4,000,000 samples, 0.02%)</title><rect x="973.5" y="261" width="0.3" height="15.0" fill="rgb(253,224,43)" rx="2" ry="2" />
<text  x="976.52" y="271.5" ></text>
</g>
<g >
<title>count_memcg_events.constprop.0 (2,000,000 samples, 0.01%)</title><rect x="1044.2" y="181" width="0.1" height="15.0" fill="rgb(220,157,16)" rx="2" ry="2" />
<text  x="1047.16" y="191.5" ></text>
</g>
<g >
<title>__alloc_pages (3,000,000 samples, 0.02%)</title><rect x="1043.6" y="69" width="0.2" height="15.0" fill="rgb(247,163,37)" rx="2" ry="2" />
<text  x="1046.59" y="79.5" ></text>
</g>
<g >
<title>filemap_map_pages (20,000,000 samples, 0.10%)</title><rect x="1172.3" y="85" width="1.2" height="15.0" fill="rgb(216,187,54)" rx="2" ry="2" />
<text  x="1175.30" y="95.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4,000,000 samples, 0.02%)</title><rect x="310.4" y="245" width="0.2" height="15.0" fill="rgb(252,109,15)" rx="2" ry="2" />
<text  x="313.37" y="255.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (5,000,000 samples, 0.03%)</title><rect x="1045.4" y="181" width="0.3" height="15.0" fill="rgb(252,92,43)" rx="2" ry="2" />
<text  x="1048.40" y="191.5" ></text>
</g>
<g >
<title>ExecStoreBufferHeapTuple (369,500,000 samples, 1.86%)</title><rect x="1066.0" y="261" width="22.0" height="15.0" fill="rgb(250,66,41)" rx="2" ry="2" />
<text  x="1069.04" y="271.5" >E..</text>
</g>
<g >
<title>ResourceOwnerForgetBuffer (5,000,000 samples, 0.03%)</title><rect x="1087.7" y="229" width="0.3" height="15.0" fill="rgb(213,105,40)" rx="2" ry="2" />
<text  x="1090.66" y="239.5" ></text>
</g>
<g >
<title>do_read_fault (21,000,000 samples, 0.11%)</title><rect x="1172.3" y="101" width="1.2" height="15.0" fill="rgb(209,31,23)" rx="2" ry="2" />
<text  x="1175.27" y="111.5" ></text>
</g>
<g >
<title>IOContextForStrategy (2,000,000 samples, 0.01%)</title><rect x="1164.2" y="197" width="0.1" height="15.0" fill="rgb(208,79,17)" rx="2" ry="2" />
<text  x="1167.17" y="207.5" ></text>
</g>
<g >
<title>alloc_pages (3,000,000 samples, 0.02%)</title><rect x="1043.6" y="101" width="0.2" height="15.0" fill="rgb(232,7,22)" rx="2" ry="2" />
<text  x="1046.59" y="111.5" ></text>
</g>
<g >
<title>ReadBuffer_common (365,500,000 samples, 1.84%)</title><rect x="1145.5" y="213" width="21.7" height="15.0" fill="rgb(227,87,38)" rx="2" ry="2" />
<text  x="1148.55" y="223.5" >R..</text>
</g>
<g >
<title>UnpinBuffer (19,500,000 samples, 0.10%)</title><rect x="1168.7" y="229" width="1.1" height="15.0" fill="rgb(220,52,45)" rx="2" ry="2" />
<text  x="1171.68" y="239.5" ></text>
</g>
<g >
<title>BufTableLookup (300,000,000 samples, 1.51%)</title><rect x="1146.3" y="197" width="17.8" height="15.0" fill="rgb(236,210,50)" rx="2" ry="2" />
<text  x="1149.35" y="207.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (8,000,000 samples, 0.04%)</title><rect x="959.7" y="213" width="0.4" height="15.0" fill="rgb(226,125,0)" rx="2" ry="2" />
<text  x="962.67" y="223.5" ></text>
</g>
<g >
<title>bpcharlen (43,500,000 samples, 0.22%)</title><rect x="1174.2" y="293" width="2.5" height="15.0" fill="rgb(237,23,33)" rx="2" ry="2" />
<text  x="1177.16" y="303.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (2,000,000 samples, 0.01%)</title><rect x="959.8" y="149" width="0.1" height="15.0" fill="rgb(233,174,27)" rx="2" ry="2" />
<text  x="962.79" y="159.5" ></text>
</g>
<g >
<title>ExecScan (19,780,500,000 samples, 99.42%)</title><rect x="12.0" y="309" width="1173.2" height="15.0" fill="rgb(248,3,42)" rx="2" ry="2" />
<text  x="14.99" y="319.5" >ExecScan</text>
</g>
<g >
<title>do_fault (4,500,000 samples, 0.02%)</title><rect x="1166.9" y="85" width="0.3" height="15.0" fill="rgb(213,123,51)" rx="2" ry="2" />
<text  x="1169.90" y="95.5" ></text>
</g>
<g >
<title>do_set_pte (4,000,000 samples, 0.02%)</title><rect x="1172.5" y="69" width="0.2" height="15.0" fill="rgb(212,38,35)" rx="2" ry="2" />
<text  x="1175.47" y="79.5" ></text>
</g>
<g >
<title>next_uptodate_page (3,000,000 samples, 0.02%)</title><rect x="1167.0" y="37" width="0.1" height="15.0" fill="rgb(231,170,23)" rx="2" ry="2" />
<text  x="1169.96" y="47.5" ></text>
</g>
<g >
<title>__handle_mm_fault (207,500,000 samples, 1.04%)</title><rect x="1031.9" y="181" width="12.3" height="15.0" fill="rgb(229,5,17)" rx="2" ry="2" />
<text  x="1034.85" y="191.5" ></text>
</g>
<g >
<title>SeqNext (2,042,000,000 samples, 10.26%)</title><rect x="1053.0" y="293" width="121.1" height="15.0" fill="rgb(213,82,34)" rx="2" ry="2" />
<text  x="1055.96" y="303.5" >SeqNext</text>
</g>
<g >
<title>filemap_map_pages (4,000,000 samples, 0.02%)</title><rect x="1166.9" y="53" width="0.2" height="15.0" fill="rgb(229,77,6)" rx="2" ry="2" />
<text  x="1169.90" y="63.5" ></text>
</g>
<g >
<title>do_set_pte (45,000,000 samples, 0.23%)</title><rect x="1034.7" y="101" width="2.7" height="15.0" fill="rgb(238,137,21)" rx="2" ry="2" />
<text  x="1037.73" y="111.5" ></text>
</g>
<g >
<title>filemap_map_pages (2,000,000 samples, 0.01%)</title><rect x="1043.9" y="133" width="0.1" height="15.0" fill="rgb(223,6,5)" rx="2" ry="2" />
<text  x="1046.89" y="143.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,000,000 samples, 0.05%)</title><rect x="959.7" y="229" width="0.6" height="15.0" fill="rgb(222,151,47)" rx="2" ry="2" />
<text  x="962.67" y="239.5" ></text>
</g>
<g >
<title>do_fault (22,000,000 samples, 0.11%)</title><rect x="1172.2" y="117" width="1.3" height="15.0" fill="rgb(228,163,52)" rx="2" ry="2" />
<text  x="1175.21" y="127.5" ></text>
</g>
<g >
<title>page_add_file_rmap (10,000,000 samples, 0.05%)</title><rect x="1035.7" y="85" width="0.6" height="15.0" fill="rgb(221,70,37)" rx="2" ry="2" />
<text  x="1038.71" y="95.5" ></text>
</g>
<g >
<title>ExecScanFetch (19,000,000 samples, 0.10%)</title><rect x="1185.2" y="309" width="1.1" height="15.0" fill="rgb(253,195,15)" rx="2" ry="2" />
<text  x="1188.17" y="319.5" ></text>
</g>
<g >
<title>mas_walk (4,500,000 samples, 0.02%)</title><rect x="1044.9" y="181" width="0.2" height="15.0" fill="rgb(223,115,52)" rx="2" ry="2" />
<text  x="1047.87" y="191.5" ></text>
</g>
<g >
<title>CheckForSerializableConflictOutNeeded (16,000,000 samples, 0.08%)</title><rect x="1123.7" y="245" width="0.9" height="15.0" fill="rgb(239,225,40)" rx="2" ry="2" />
<text  x="1126.66" y="255.5" ></text>
</g>
<g >
<title>slot_getsomeattrs_int (14,500,000 samples, 0.07%)</title><rect x="1184.3" y="293" width="0.9" height="15.0" fill="rgb(229,42,0)" rx="2" ry="2" />
<text  x="1187.31" y="303.5" ></text>
</g>
<g >
<title>mtree_range_walk (2,500,000 samples, 0.01%)</title><rect x="1045.0" y="165" width="0.1" height="15.0" fill="rgb(241,91,6)" rx="2" ry="2" />
<text  x="1047.99" y="175.5" ></text>
</g>
<g >
<title>lock_vma_under_rcu (6,500,000 samples, 0.03%)</title><rect x="1044.8" y="197" width="0.4" height="15.0" fill="rgb(215,161,21)" rx="2" ry="2" />
<text  x="1047.78" y="207.5" ></text>
</g>
<g >
<title>GetPrivateRefCountEntry (2,000,000 samples, 0.01%)</title><rect x="1166.7" y="181" width="0.1" height="15.0" fill="rgb(238,219,3)" rx="2" ry="2" />
<text  x="1169.66" y="191.5" ></text>
</g>
<g >
<title>RecoveryInProgress (2,000,000 samples, 0.01%)</title><rect x="1168.5" y="229" width="0.1" height="15.0" fill="rgb(208,178,5)" rx="2" ry="2" />
<text  x="1171.47" y="239.5" ></text>
</g>
<g >
<title>int4lt (45,500,000 samples, 0.23%)</title><rect x="1181.6" y="293" width="2.7" height="15.0" fill="rgb(251,156,3)" rx="2" ry="2" />
<text  x="1184.61" y="303.5" ></text>
</g>
<g >
<title>heap_getnextslot (1,908,000,000 samples, 9.59%)</title><rect x="1060.9" y="277" width="113.2" height="15.0" fill="rgb(207,116,9)" rx="2" ry="2" />
<text  x="1063.91" y="287.5" >heap_getnexts..</text>
</g>
<g >
<title>__handle_mm_fault (4,500,000 samples, 0.02%)</title><rect x="1166.9" y="117" width="0.3" height="15.0" fill="rgb(241,197,13)" rx="2" ry="2" />
<text  x="1169.90" y="127.5" ></text>
</g>
<g >
<title>__count_memcg_events (2,000,000 samples, 0.01%)</title><rect x="1044.2" y="165" width="0.1" height="15.0" fill="rgb(213,226,21)" rx="2" ry="2" />
<text  x="1047.16" y="175.5" ></text>
</g>
<g >
<title>UnpinBuffer (15,500,000 samples, 0.08%)</title><rect x="1087.0" y="245" width="1.0" height="15.0" fill="rgb(253,27,52)" rx="2" ry="2" />
<text  x="1090.04" y="255.5" ></text>
</g>
<g >
<title>ResourceOwnerForgetBuffer (4,000,000 samples, 0.02%)</title><rect x="1169.6" y="213" width="0.2" height="15.0" fill="rgb(214,170,1)" rx="2" ry="2" />
<text  x="1172.60" y="223.5" ></text>
</g>
<g >
<title>alloc_page_interleave (3,000,000 samples, 0.02%)</title><rect x="1043.6" y="85" width="0.2" height="15.0" fill="rgb(207,132,52)" rx="2" ry="2" />
<text  x="1046.59" y="95.5" ></text>
</g>
<g >
<title>tts_buffer_heap_getsomeattrs (1,222,500,000 samples, 6.14%)</title><rect x="973.8" y="261" width="72.5" height="15.0" fill="rgb(213,11,21)" rx="2" ry="2" />
<text  x="976.76" y="271.5" >tts_buff..</text>
</g>
<g >
<title>tick_do_update_jiffies64 (2,000,000 samples, 0.01%)</title><rect x="959.8" y="133" width="0.1" height="15.0" fill="rgb(239,185,54)" rx="2" ry="2" />
<text  x="962.79" y="143.5" ></text>
</g>
<g >
<title>__handle_mm_fault (22,500,000 samples, 0.11%)</title><rect x="1172.2" y="149" width="1.3" height="15.0" fill="rgb(209,144,36)" rx="2" ry="2" />
<text  x="1175.18" y="159.5" ></text>
</g>
<g >
<title>pg_database_encoding_max_length (27,500,000 samples, 0.14%)</title><rect x="960.4" y="277" width="1.6" height="15.0" fill="rgb(212,169,40)" rx="2" ry="2" />
<text  x="963.41" y="287.5" ></text>
</g>
<g >
<title>postgres (19,895,500,000 samples, 100.00%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(212,24,42)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >postgres</text>
</g>
<g >
<title>__memcmp_avx2_movbe (6,500,000 samples, 0.03%)</title><rect x="1146.3" y="181" width="0.4" height="15.0" fill="rgb(206,210,18)" rx="2" ry="2" />
<text  x="1149.35" y="191.5" ></text>
</g>
<g >
<title>update_wall_time (2,000,000 samples, 0.01%)</title><rect x="959.8" y="117" width="0.1" height="15.0" fill="rgb(230,97,32)" rx="2" ry="2" />
<text  x="962.79" y="127.5" ></text>
</g>
<g >
<title>heap_page_prune_opt (4,000,000 samples, 0.02%)</title><rect x="973.5" y="245" width="0.3" height="15.0" fill="rgb(212,45,34)" rx="2" ry="2" />
<text  x="976.52" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (26,000,000 samples, 0.13%)</title><rect x="1172.1" y="213" width="1.5" height="15.0" fill="rgb(208,121,15)" rx="2" ry="2" />
<text  x="1175.06" y="223.5" ></text>
</g>
<g >
<title>exc_page_fault (25,500,000 samples, 0.13%)</title><rect x="1172.1" y="197" width="1.5" height="15.0" fill="rgb(247,81,31)" rx="2" ry="2" />
<text  x="1175.09" y="207.5" ></text>
</g>
<g >
<title>tts_buffer_heap_getsomeattrs (40,500,000 samples, 0.20%)</title><rect x="1046.3" y="277" width="2.4" height="15.0" fill="rgb(229,185,43)" rx="2" ry="2" />
<text  x="1049.26" y="287.5" ></text>
</g>
<g >
<title>pte_offset_map_nolock (2,500,000 samples, 0.01%)</title><rect x="1044.0" y="149" width="0.2" height="15.0" fill="rgb(222,145,43)" rx="2" ry="2" />
<text  x="1047.01" y="159.5" ></text>
</g>
<g >
<title>tick_sched_timer (5,500,000 samples, 0.03%)</title><rect x="959.8" y="165" width="0.3" height="15.0" fill="rgb(254,177,19)" rx="2" ry="2" />
<text  x="962.76" y="175.5" ></text>
</g>
<g >
<title>handle_pte_fault (4,500,000 samples, 0.02%)</title><rect x="1166.9" y="101" width="0.3" height="15.0" fill="rgb(217,117,20)" rx="2" ry="2" />
<text  x="1169.90" y="111.5" ></text>
</g>
<g >
<title>PostmasterMain (19,895,500,000 samples, 100.00%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(231,27,17)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >PostmasterMain</text>
</g>
<g >
<title>heap_page_prune_opt (63,500,000 samples, 0.32%)</title><rect x="1169.8" y="229" width="3.8" height="15.0" fill="rgb(248,2,42)" rx="2" ry="2" />
<text  x="1172.83" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,500,000 samples, 0.01%)</title><rect x="310.4" y="197" width="0.2" height="15.0" fill="rgb(253,175,19)" rx="2" ry="2" />
<text  x="313.40" y="207.5" ></text>
</g>
<g >
<title>ExecScanFetch (49,500,000 samples, 0.25%)</title><rect x="1048.7" y="293" width="2.9" height="15.0" fill="rgb(254,198,49)" rx="2" ry="2" />
<text  x="1051.66" y="303.5" ></text>
</g>
</g>
</svg>
