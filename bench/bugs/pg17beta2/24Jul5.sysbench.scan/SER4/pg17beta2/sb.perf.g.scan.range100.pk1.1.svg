<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>hash_bytes (11,500,000 samples, 0.06%)</title><rect x="1170.4" y="229" width="0.7" height="15.0" fill="rgb(250,217,2)" rx="2" ry="2" />
<text  x="1173.38" y="239.5" ></text>
</g>
<g >
<title>ExecStoreBufferHeapTuple (336,500,000 samples, 1.69%)</title><rect x="1059.8" y="261" width="19.9" height="15.0" fill="rgb(218,173,5)" rx="2" ry="2" />
<text  x="1062.81" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2,000,000 samples, 0.01%)</title><rect x="1166.7" y="149" width="0.1" height="15.0" fill="rgb(216,207,21)" rx="2" ry="2" />
<text  x="1169.72" y="159.5" ></text>
</g>
<g >
<title>[postgres] (19,965,500,000 samples, 99.99%)</title><rect x="10.1" y="421" width="1179.9" height="15.0" fill="rgb(216,67,34)" rx="2" ry="2" />
<text  x="13.09" y="431.5" >[postgres]</text>
</g>
<g >
<title>GetPrivateRefCountEntry (2,000,000 samples, 0.01%)</title><rect x="1077.2" y="229" width="0.1" height="15.0" fill="rgb(216,136,0)" rx="2" ry="2" />
<text  x="1080.21" y="239.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (24,500,000 samples, 0.12%)</title><rect x="1134.1" y="53" width="1.5" height="15.0" fill="rgb(254,25,23)" rx="2" ry="2" />
<text  x="1137.12" y="63.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,000,000 samples, 0.01%)</title><rect x="1169.9" y="149" width="0.2" height="15.0" fill="rgb(220,226,33)" rx="2" ry="2" />
<text  x="1172.94" y="159.5" ></text>
</g>
<g >
<title>exec_simple_query (19,965,500,000 samples, 99.99%)</title><rect x="10.1" y="373" width="1179.9" height="15.0" fill="rgb(240,0,11)" rx="2" ry="2" />
<text  x="13.09" y="383.5" >exec_simple_query</text>
</g>
<g >
<title>exit_to_user_mode_prepare (4,000,000 samples, 0.02%)</title><rect x="1145.5" y="149" width="0.3" height="15.0" fill="rgb(215,218,24)" rx="2" ry="2" />
<text  x="1148.53" y="159.5" ></text>
</g>
<g >
<title>GetPrivateRefCountEntry (9,000,000 samples, 0.05%)</title><rect x="1079.2" y="229" width="0.5" height="15.0" fill="rgb(251,93,41)" rx="2" ry="2" />
<text  x="1082.16" y="239.5" ></text>
</g>
<g >
<title>alloc_pages (4,500,000 samples, 0.02%)</title><rect x="1143.2" y="69" width="0.3" height="15.0" fill="rgb(232,110,25)" rx="2" ry="2" />
<text  x="1146.19" y="79.5" ></text>
</g>
<g >
<title>ServerLoop (19,965,500,000 samples, 99.99%)</title><rect x="10.1" y="437" width="1179.9" height="15.0" fill="rgb(217,5,10)" rx="2" ry="2" />
<text  x="13.09" y="447.5" >ServerLoop</text>
</g>
<g >
<title>page_add_file_rmap (6,000,000 samples, 0.03%)</title><rect x="1133.8" y="53" width="0.3" height="15.0" fill="rgb(241,55,32)" rx="2" ry="2" />
<text  x="1136.77" y="63.5" ></text>
</g>
<g >
<title>pg_mbstrlen_with_len (37,000,000 samples, 0.19%)</title><rect x="890.1" y="277" width="2.2" height="15.0" fill="rgb(234,212,2)" rx="2" ry="2" />
<text  x="893.08" y="287.5" ></text>
</g>
<g >
<title>mtree_range_walk (3,500,000 samples, 0.02%)</title><rect x="1144.5" y="117" width="0.2" height="15.0" fill="rgb(242,39,21)" rx="2" ry="2" />
<text  x="1147.49" y="127.5" ></text>
</g>
<g >
<title>LWLockRelease (11,500,000 samples, 0.06%)</title><rect x="1168.3" y="213" width="0.7" height="15.0" fill="rgb(207,229,41)" rx="2" ry="2" />
<text  x="1171.28" y="223.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2,000,000 samples, 0.01%)</title><rect x="1166.7" y="181" width="0.1" height="15.0" fill="rgb(210,226,4)" rx="2" ry="2" />
<text  x="1169.72" y="191.5" ></text>
</g>
<g >
<title>ReleaseBuffer (8,500,000 samples, 0.04%)</title><rect x="1079.8" y="261" width="0.5" height="15.0" fill="rgb(225,122,46)" rx="2" ry="2" />
<text  x="1082.78" y="271.5" ></text>
</g>
<g >
<title>heap_getnextslot (2,014,500,000 samples, 10.09%)</title><rect x="1052.7" y="277" width="119.0" height="15.0" fill="rgb(235,132,49)" rx="2" ry="2" />
<text  x="1055.69" y="287.5" >heap_getnextslot</text>
</g>
<g >
<title>ResourceOwnerEnlarge (2,000,000 samples, 0.01%)</title><rect x="1170.1" y="213" width="0.1" height="15.0" fill="rgb(232,45,30)" rx="2" ry="2" />
<text  x="1173.11" y="223.5" ></text>
</g>
<g >
<title>PostgresMain (19,965,500,000 samples, 99.99%)</title><rect x="10.1" y="389" width="1179.9" height="15.0" fill="rgb(208,34,45)" rx="2" ry="2" />
<text  x="13.09" y="399.5" >PostgresMain</text>
</g>
<g >
<title>ResourceOwnerEnlarge (4,500,000 samples, 0.02%)</title><rect x="1077.3" y="229" width="0.3" height="15.0" fill="rgb(243,25,1)" rx="2" ry="2" />
<text  x="1080.33" y="239.5" ></text>
</g>
<g >
<title>filemap_map_pages (2,000,000 samples, 0.01%)</title><rect x="1169.9" y="69" width="0.2" height="15.0" fill="rgb(223,75,10)" rx="2" ry="2" />
<text  x="1172.94" y="79.5" ></text>
</g>
<g >
<title>ExecScan (19,886,000,000 samples, 99.59%)</title><rect x="12.2" y="309" width="1175.2" height="15.0" fill="rgb(213,2,31)" rx="2" ry="2" />
<text  x="15.22" y="319.5" >ExecScan</text>
</g>
<g >
<title>LWLockRelease (7,500,000 samples, 0.04%)</title><rect x="1109.5" y="245" width="0.4" height="15.0" fill="rgb(211,59,41)" rx="2" ry="2" />
<text  x="1112.45" y="255.5" ></text>
</g>
<g >
<title>next_uptodate_page (2,500,000 samples, 0.01%)</title><rect x="1143.0" y="85" width="0.2" height="15.0" fill="rgb(206,55,27)" rx="2" ry="2" />
<text  x="1146.05" y="95.5" ></text>
</g>
<g >
<title>PinBuffer (18,500,000 samples, 0.09%)</title><rect x="1169.0" y="213" width="1.1" height="15.0" fill="rgb(229,176,2)" rx="2" ry="2" />
<text  x="1171.96" y="223.5" ></text>
</g>
<g >
<title>hash_search_with_hash_value (304,000,000 samples, 1.52%)</title><rect x="1148.9" y="197" width="17.9" height="15.0" fill="rgb(218,120,14)" rx="2" ry="2" />
<text  x="1151.87" y="207.5" ></text>
</g>
<g >
<title>tts_buffer_heap_getsomeattrs (2,393,000,000 samples, 11.98%)</title><rect x="894.5" y="261" width="141.4" height="15.0" fill="rgb(208,64,10)" rx="2" ry="2" />
<text  x="897.48" y="271.5" >tts_buffer_heap_g..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,500,000 samples, 0.06%)</title><rect x="881.3" y="245" width="0.7" height="15.0" fill="rgb(233,229,5)" rx="2" ry="2" />
<text  x="884.30" y="255.5" ></text>
</g>
<g >
<title>bpcharlen (13,740,000,000 samples, 68.81%)</title><rect x="70.0" y="277" width="812.0" height="15.0" fill="rgb(207,24,25)" rx="2" ry="2" />
<text  x="72.98" y="287.5" >bpcharlen</text>
</g>
<g >
<title>ResourceOwnerRemember (2,500,000 samples, 0.01%)</title><rect x="1080.3" y="261" width="0.1" height="15.0" fill="rgb(214,165,45)" rx="2" ry="2" />
<text  x="1083.29" y="271.5" ></text>
</g>
<g >
<title>count_memcg_events.constprop.0 (3,500,000 samples, 0.02%)</title><rect x="1143.8" y="149" width="0.3" height="15.0" fill="rgb(209,159,25)" rx="2" ry="2" />
<text  x="1146.84" y="159.5" ></text>
</g>
<g >
<title>UnpinBufferNoOwner (17,000,000 samples, 0.09%)</title><rect x="1078.7" y="245" width="1.0" height="15.0" fill="rgb(210,169,43)" rx="2" ry="2" />
<text  x="1081.69" y="255.5" ></text>
</g>
<g >
<title>irqentry_exit (5,500,000 samples, 0.03%)</title><rect x="1145.5" y="181" width="0.3" height="15.0" fill="rgb(235,39,43)" rx="2" ry="2" />
<text  x="1148.47" y="191.5" ></text>
</g>
<g >
<title>ExecInterpExpr (36,000,000 samples, 0.18%)</title><rect x="10.1" y="309" width="2.1" height="15.0" fill="rgb(209,47,13)" rx="2" ry="2" />
<text  x="13.09" y="319.5" ></text>
</g>
<g >
<title>PortalRunSelect (19,965,500,000 samples, 99.99%)</title><rect x="10.1" y="341" width="1179.9" height="15.0" fill="rgb(244,149,52)" rx="2" ry="2" />
<text  x="13.09" y="351.5" >PortalRunSelect</text>
</g>
<g >
<title>MemoryContextReset (32,000,000 samples, 0.16%)</title><rect x="1043.0" y="293" width="1.9" height="15.0" fill="rgb(233,227,22)" rx="2" ry="2" />
<text  x="1045.97" y="303.5" ></text>
</g>
<g >
<title>ExecStoreBufferHeapTuple (20,000,000 samples, 0.10%)</title><rect x="1051.5" y="277" width="1.2" height="15.0" fill="rgb(209,218,26)" rx="2" ry="2" />
<text  x="1054.50" y="287.5" ></text>
</g>
<g >
<title>next_uptodate_page (2,000,000 samples, 0.01%)</title><rect x="1169.9" y="53" width="0.2" height="15.0" fill="rgb(248,70,12)" rx="2" ry="2" />
<text  x="1172.94" y="63.5" ></text>
</g>
<g >
<title>LWLockAttemptLock (4,500,000 samples, 0.02%)</title><rect x="1124.3" y="229" width="0.3" height="15.0" fill="rgb(254,45,28)" rx="2" ry="2" />
<text  x="1127.31" y="239.5" ></text>
</g>
<g >
<title>bpcharlen (48,500,000 samples, 0.24%)</title><rect x="1172.2" y="293" width="2.8" height="15.0" fill="rgb(209,99,0)" rx="2" ry="2" />
<text  x="1175.15" y="303.5" ></text>
</g>
<g >
<title>main (19,965,500,000 samples, 99.99%)</title><rect x="10.1" y="469" width="1179.9" height="15.0" fill="rgb(231,60,38)" rx="2" ry="2" />
<text  x="13.09" y="479.5" >main</text>
</g>
<g >
<title>slot_getsomeattrs_int (2,430,500,000 samples, 12.17%)</title><rect x="892.3" y="277" width="143.6" height="15.0" fill="rgb(219,16,9)" rx="2" ry="2" />
<text  x="895.27" y="287.5" >slot_getsomeattrs_..</text>
</g>
<g >
<title>do_read_fault (2,000,000 samples, 0.01%)</title><rect x="1169.9" y="85" width="0.2" height="15.0" fill="rgb(233,76,35)" rx="2" ry="2" />
<text  x="1172.94" y="95.5" ></text>
</g>
<g >
<title>int4lt (136,500,000 samples, 0.68%)</title><rect x="1179.3" y="293" width="8.1" height="15.0" fill="rgb(252,116,27)" rx="2" ry="2" />
<text  x="1182.33" y="303.5" ></text>
</g>
<g >
<title>do_read_fault (225,000,000 samples, 1.13%)</title><rect x="1130.3" y="101" width="13.3" height="15.0" fill="rgb(234,149,30)" rx="2" ry="2" />
<text  x="1133.31" y="111.5" ></text>
</g>
<g >
<title>ResourceOwnerForget (6,000,000 samples, 0.03%)</title><rect x="1110.4" y="229" width="0.4" height="15.0" fill="rgb(253,10,9)" rx="2" ry="2" />
<text  x="1113.40" y="239.5" ></text>
</g>
<g >
<title>PortalRun (19,965,500,000 samples, 99.99%)</title><rect x="10.1" y="357" width="1179.9" height="15.0" fill="rgb(232,189,7)" rx="2" ry="2" />
<text  x="13.09" y="367.5" >PortalRun</text>
</g>
<g >
<title>lock_vma_under_rcu (7,500,000 samples, 0.04%)</title><rect x="1144.8" y="165" width="0.4" height="15.0" fill="rgb(217,195,0)" rx="2" ry="2" />
<text  x="1147.76" y="175.5" ></text>
</g>
<g >
<title>find_vma (10,000,000 samples, 0.05%)</title><rect x="1144.1" y="149" width="0.6" height="15.0" fill="rgb(241,165,43)" rx="2" ry="2" />
<text  x="1147.14" y="159.5" ></text>
</g>
<g >
<title>tts_buffer_heap_getsomeattrs (34,000,000 samples, 0.17%)</title><rect x="1035.9" y="277" width="2.0" height="15.0" fill="rgb(235,10,17)" rx="2" ry="2" />
<text  x="1038.90" y="287.5" ></text>
</g>
<g >
<title>pte_offset_map_nolock (2,000,000 samples, 0.01%)</title><rect x="1143.7" y="117" width="0.1" height="15.0" fill="rgb(210,217,45)" rx="2" ry="2" />
<text  x="1146.70" y="127.5" ></text>
</g>
<g >
<title>scheduler_tick (4,000,000 samples, 0.02%)</title><rect x="881.4" y="117" width="0.3" height="15.0" fill="rgb(231,154,0)" rx="2" ry="2" />
<text  x="884.42" y="127.5" ></text>
</g>
<g >
<title>sync_regs (3,000,000 samples, 0.02%)</title><rect x="1146.1" y="213" width="0.2" height="15.0" fill="rgb(226,194,21)" rx="2" ry="2" />
<text  x="1149.12" y="223.5" ></text>
</g>
<g >
<title>heap_prepare_pagescan (590,000,000 samples, 2.95%)</title><rect x="1111.4" y="245" width="34.9" height="15.0" fill="rgb(248,219,38)" rx="2" ry="2" />
<text  x="1114.43" y="255.5" >he..</text>
</g>
<g >
<title>pte_alloc_one (5,000,000 samples, 0.03%)</title><rect x="1143.2" y="85" width="0.3" height="15.0" fill="rgb(218,123,41)" rx="2" ry="2" />
<text  x="1146.19" y="95.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2,000,000 samples, 0.01%)</title><rect x="1169.9" y="165" width="0.2" height="15.0" fill="rgb(253,1,3)" rx="2" ry="2" />
<text  x="1172.94" y="175.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (7,000,000 samples, 0.04%)</title><rect x="881.3" y="181" width="0.4" height="15.0" fill="rgb(254,106,39)" rx="2" ry="2" />
<text  x="884.30" y="191.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,000,000 samples, 0.01%)</title><rect x="1130.2" y="101" width="0.1" height="15.0" fill="rgb(244,85,49)" rx="2" ry="2" />
<text  x="1133.19" y="111.5" ></text>
</g>
<g >
<title>ReleaseBuffer (16,500,000 samples, 0.08%)</title><rect x="1077.6" y="245" width="1.0" height="15.0" fill="rgb(254,58,12)" rx="2" ry="2" />
<text  x="1080.60" y="255.5" ></text>
</g>
<g >
<title>IOContextForStrategy (2,500,000 samples, 0.01%)</title><rect x="1166.9" y="213" width="0.1" height="15.0" fill="rgb(225,116,23)" rx="2" ry="2" />
<text  x="1169.86" y="223.5" ></text>
</g>
<g >
<title>heapgettup_pagemode (6,500,000 samples, 0.03%)</title><rect x="1171.7" y="277" width="0.4" height="15.0" fill="rgb(210,12,13)" rx="2" ry="2" />
<text  x="1174.74" y="287.5" ></text>
</g>
<g >
<title>postgres (19,967,000,000 samples, 100.00%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(208,147,7)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >postgres</text>
</g>
<g >
<title>xas_descend (2,500,000 samples, 0.01%)</title><rect x="1142.6" y="37" width="0.1" height="15.0" fill="rgb(217,217,40)" rx="2" ry="2" />
<text  x="1145.57" y="47.5" ></text>
</g>
<g >
<title>__libc_start_call_main (19,965,500,000 samples, 99.99%)</title><rect x="10.1" y="485" width="1179.9" height="15.0" fill="rgb(209,42,18)" rx="2" ry="2" />
<text  x="13.09" y="495.5" >__libc_start_call_main</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (8,000,000 samples, 0.04%)</title><rect x="881.3" y="213" width="0.5" height="15.0" fill="rgb(225,125,51)" rx="2" ry="2" />
<text  x="884.30" y="223.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (314,500,000 samples, 1.58%)</title><rect x="1127.2" y="213" width="18.6" height="15.0" fill="rgb(236,77,26)" rx="2" ry="2" />
<text  x="1130.24" y="223.5" ></text>
</g>
<g >
<title>GetPrivateRefCountEntry (6,000,000 samples, 0.03%)</title><rect x="1111.0" y="229" width="0.4" height="15.0" fill="rgb(212,165,37)" rx="2" ry="2" />
<text  x="1114.05" y="239.5" ></text>
</g>
<g >
<title>mt_find (7,500,000 samples, 0.04%)</title><rect x="1144.3" y="133" width="0.4" height="15.0" fill="rgb(217,221,46)" rx="2" ry="2" />
<text  x="1147.26" y="143.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (8,000,000 samples, 0.04%)</title><rect x="881.3" y="197" width="0.5" height="15.0" fill="rgb(221,227,27)" rx="2" ry="2" />
<text  x="884.30" y="207.5" ></text>
</g>
<g >
<title>exc_page_fault (288,000,000 samples, 1.44%)</title><rect x="1128.8" y="197" width="17.0" height="15.0" fill="rgb(233,156,33)" rx="2" ry="2" />
<text  x="1131.80" y="207.5" ></text>
</g>
<g >
<title>LockBuffer (3,000,000 samples, 0.02%)</title><rect x="1109.9" y="245" width="0.2" height="15.0" fill="rgb(216,122,22)" rx="2" ry="2" />
<text  x="1112.89" y="255.5" ></text>
</g>
<g >
<title>PostmasterMain (19,965,500,000 samples, 99.99%)</title><rect x="10.1" y="453" width="1179.9" height="15.0" fill="rgb(238,112,39)" rx="2" ry="2" />
<text  x="13.09" y="463.5" >PostmasterMain</text>
</g>
<g >
<title>__alloc_pages (3,500,000 samples, 0.02%)</title><rect x="1143.3" y="37" width="0.2" height="15.0" fill="rgb(220,85,49)" rx="2" ry="2" />
<text  x="1146.25" y="47.5" ></text>
</g>
<g >
<title>all (19,967,000,000 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(223,2,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>heapgettup_pagemode (1,543,000,000 samples, 7.73%)</title><rect x="1080.5" y="261" width="91.2" height="15.0" fill="rgb(225,207,35)" rx="2" ry="2" />
<text  x="1083.46" y="271.5" >heapgettup..</text>
</g>
<g >
<title>pg_mbstrlen_with_len (2,501,500,000 samples, 12.53%)</title><rect x="83.5" y="261" width="147.9" height="15.0" fill="rgb(209,32,37)" rx="2" ry="2" />
<text  x="86.55" y="271.5" >pg_mbstrlen_with_len</text>
</g>
<g >
<title>heap_getnextslot (73,000,000 samples, 0.37%)</title><rect x="1175.0" y="293" width="4.3" height="15.0" fill="rgb(240,168,11)" rx="2" ry="2" />
<text  x="1178.02" y="303.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (2,000,000 samples, 0.01%)</title><rect x="1143.9" y="117" width="0.1" height="15.0" fill="rgb(223,219,6)" rx="2" ry="2" />
<text  x="1146.90" y="127.5" ></text>
</g>
<g >
<title>UnpinBufferNoOwner (11,000,000 samples, 0.06%)</title><rect x="1110.8" y="245" width="0.6" height="15.0" fill="rgb(219,5,48)" rx="2" ry="2" />
<text  x="1113.75" y="255.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (4,500,000 samples, 0.02%)</title><rect x="1145.5" y="165" width="0.3" height="15.0" fill="rgb(220,40,23)" rx="2" ry="2" />
<text  x="1148.53" y="175.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8,500,000 samples, 0.04%)</title><rect x="1148.4" y="197" width="0.5" height="15.0" fill="rgb(227,2,3)" rx="2" ry="2" />
<text  x="1151.37" y="207.5" ></text>
</g>
<g >
<title>do_user_addr_fault (276,500,000 samples, 1.38%)</title><rect x="1129.1" y="181" width="16.4" height="15.0" fill="rgb(227,150,31)" rx="2" ry="2" />
<text  x="1132.13" y="191.5" ></text>
</g>
<g >
<title>handle_pte_fault (232,500,000 samples, 1.16%)</title><rect x="1130.1" y="133" width="13.7" height="15.0" fill="rgb(225,56,3)" rx="2" ry="2" />
<text  x="1133.08" y="143.5" ></text>
</g>
<g >
<title>tick_sched_timer (7,000,000 samples, 0.04%)</title><rect x="881.3" y="165" width="0.4" height="15.0" fill="rgb(221,219,4)" rx="2" ry="2" />
<text  x="884.30" y="175.5" ></text>
</g>
<g >
<title>pg_detoast_datum_packed (40,500,000 samples, 0.20%)</title><rect x="887.7" y="277" width="2.4" height="15.0" fill="rgb(226,92,33)" rx="2" ry="2" />
<text  x="890.69" y="287.5" ></text>
</g>
<g >
<title>mtree_range_walk (4,500,000 samples, 0.02%)</title><rect x="1144.9" y="133" width="0.3" height="15.0" fill="rgb(216,77,40)" rx="2" ry="2" />
<text  x="1147.94" y="143.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,000,000 samples, 0.01%)</title><rect x="1169.9" y="133" width="0.2" height="15.0" fill="rgb(238,20,44)" rx="2" ry="2" />
<text  x="1172.94" y="143.5" ></text>
</g>
<g >
<title>heap_scan_stream_read_next_serial (9,000,000 samples, 0.05%)</title><rect x="1171.1" y="229" width="0.5" height="15.0" fill="rgb(205,96,8)" rx="2" ry="2" />
<text  x="1174.06" y="239.5" ></text>
</g>
<g >
<title>heap_scan_stream_read_next_serial (2,000,000 samples, 0.01%)</title><rect x="1146.3" y="245" width="0.1" height="15.0" fill="rgb(253,59,21)" rx="2" ry="2" />
<text  x="1149.30" y="255.5" ></text>
</g>
<g >
<title>[postgres] (19,965,500,000 samples, 99.99%)</title><rect x="10.1" y="405" width="1179.9" height="15.0" fill="rgb(237,217,54)" rx="2" ry="2" />
<text  x="13.09" y="415.5" >[postgres]</text>
</g>
<g >
<title>ResourceOwnerForget (15,000,000 samples, 0.08%)</title><rect x="1077.7" y="229" width="0.9" height="15.0" fill="rgb(212,71,22)" rx="2" ry="2" />
<text  x="1080.69" y="239.5" ></text>
</g>
<g >
<title>tick_sched_handle (5,000,000 samples, 0.03%)</title><rect x="881.4" y="149" width="0.3" height="15.0" fill="rgb(246,146,3)" rx="2" ry="2" />
<text  x="884.39" y="159.5" ></text>
</g>
<g >
<title>ExecScanFetch (85,500,000 samples, 0.43%)</title><rect x="1037.9" y="293" width="5.1" height="15.0" fill="rgb(234,169,44)" rx="2" ry="2" />
<text  x="1040.91" y="303.5" ></text>
</g>
<g >
<title>ExecScanFetch (13,000,000 samples, 0.07%)</title><rect x="1187.4" y="309" width="0.8" height="15.0" fill="rgb(248,152,2)" rx="2" ry="2" />
<text  x="1190.43" y="319.5" ></text>
</g>
<g >
<title>task_tick_fair (3,000,000 samples, 0.02%)</title><rect x="881.5" y="101" width="0.1" height="15.0" fill="rgb(237,41,0)" rx="2" ry="2" />
<text  x="884.45" y="111.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,500,000 samples, 0.06%)</title><rect x="881.3" y="229" width="0.7" height="15.0" fill="rgb(210,177,4)" rx="2" ry="2" />
<text  x="884.30" y="239.5" ></text>
</g>
<g >
<title>LWLockAttemptLock (20,500,000 samples, 0.10%)</title><rect x="1167.1" y="213" width="1.2" height="15.0" fill="rgb(228,49,19)" rx="2" ry="2" />
<text  x="1170.07" y="223.5" ></text>
</g>
<g >
<title>exc_page_fault (2,000,000 samples, 0.01%)</title><rect x="1169.9" y="181" width="0.2" height="15.0" fill="rgb(205,195,5)" rx="2" ry="2" />
<text  x="1172.94" y="191.5" ></text>
</g>
<g >
<title>heap_page_prune_opt (366,500,000 samples, 1.84%)</title><rect x="1124.6" y="229" width="21.7" height="15.0" fill="rgb(252,152,34)" rx="2" ry="2" />
<text  x="1127.64" y="239.5" >h..</text>
</g>
<g >
<title>alloc_page_interleave (3,500,000 samples, 0.02%)</title><rect x="1143.3" y="53" width="0.2" height="15.0" fill="rgb(241,124,26)" rx="2" ry="2" />
<text  x="1146.25" y="63.5" ></text>
</g>
<g >
<title>exc_page_fault (2,000,000 samples, 0.01%)</title><rect x="1166.7" y="165" width="0.1" height="15.0" fill="rgb(253,3,11)" rx="2" ry="2" />
<text  x="1169.72" y="175.5" ></text>
</g>
<g >
<title>StartReadBuffer (389,500,000 samples, 1.95%)</title><rect x="1147.3" y="229" width="23.0" height="15.0" fill="rgb(251,206,27)" rx="2" ry="2" />
<text  x="1150.30" y="239.5" >S..</text>
</g>
<g >
<title>update_process_times (5,000,000 samples, 0.03%)</title><rect x="881.4" y="133" width="0.3" height="15.0" fill="rgb(236,63,52)" rx="2" ry="2" />
<text  x="884.39" y="143.5" ></text>
</g>
<g >
<title>handle_mm_fault (251,000,000 samples, 1.26%)</title><rect x="1129.3" y="165" width="14.8" height="15.0" fill="rgb(243,147,38)" rx="2" ry="2" />
<text  x="1132.31" y="175.5" ></text>
</g>
<g >
<title>error_entry (4,500,000 samples, 0.02%)</title><rect x="1145.8" y="213" width="0.3" height="15.0" fill="rgb(221,18,50)" rx="2" ry="2" />
<text  x="1148.82" y="223.5" ></text>
</g>
<g >
<title>standard_ExecutorRun (19,965,500,000 samples, 99.99%)</title><rect x="10.1" y="325" width="1179.9" height="15.0" fill="rgb(216,56,0)" rx="2" ry="2" />
<text  x="13.09" y="335.5" >standard_ExecutorRun</text>
</g>
<g >
<title>irqentry_exit (2,000,000 samples, 0.01%)</title><rect x="881.9" y="213" width="0.1" height="15.0" fill="rgb(217,98,9)" rx="2" ry="2" />
<text  x="884.87" y="223.5" ></text>
</g>
<g >
<title>pg_database_encoding_max_length (96,500,000 samples, 0.48%)</title><rect x="882.0" y="277" width="5.7" height="15.0" fill="rgb(224,20,22)" rx="2" ry="2" />
<text  x="884.98" y="287.5" ></text>
</g>
<g >
<title>xas_find (13,000,000 samples, 0.07%)</title><rect x="1142.1" y="69" width="0.8" height="15.0" fill="rgb(240,96,22)" rx="2" ry="2" />
<text  x="1145.10" y="79.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,000,000 samples, 0.01%)</title><rect x="231.3" y="245" width="0.1" height="15.0" fill="rgb(244,77,37)" rx="2" ry="2" />
<text  x="234.26" y="255.5" ></text>
</g>
<g >
<title>do_fault (2,000,000 samples, 0.01%)</title><rect x="1169.9" y="101" width="0.2" height="15.0" fill="rgb(242,70,13)" rx="2" ry="2" />
<text  x="1172.94" y="111.5" ></text>
</g>
<g >
<title>LWLockAcquire (5,000,000 samples, 0.03%)</title><rect x="1124.0" y="229" width="0.3" height="15.0" fill="rgb(228,183,34)" rx="2" ry="2" />
<text  x="1127.02" y="239.5" ></text>
</g>
<g >
<title>do_set_pte (55,000,000 samples, 0.28%)</title><rect x="1132.3" y="69" width="3.3" height="15.0" fill="rgb(207,196,16)" rx="2" ry="2" />
<text  x="1135.32" y="79.5" ></text>
</g>
<g >
<title>do_fault (228,500,000 samples, 1.14%)</title><rect x="1130.2" y="117" width="13.5" height="15.0" fill="rgb(252,166,30)" rx="2" ry="2" />
<text  x="1133.19" y="127.5" ></text>
</g>
<g >
<title>xas_load (10,500,000 samples, 0.05%)</title><rect x="1142.2" y="53" width="0.6" height="15.0" fill="rgb(230,53,53)" rx="2" ry="2" />
<text  x="1145.19" y="63.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (3,500,000 samples, 0.02%)</title><rect x="1145.2" y="165" width="0.2" height="15.0" fill="rgb(206,213,2)" rx="2" ry="2" />
<text  x="1148.20" y="175.5" ></text>
</g>
<g >
<title>ReleaseBuffer (11,500,000 samples, 0.06%)</title><rect x="1110.1" y="245" width="0.7" height="15.0" fill="rgb(233,214,10)" rx="2" ry="2" />
<text  x="1113.07" y="255.5" ></text>
</g>
<g >
<title>IncrBufferRefCount (8,000,000 samples, 0.04%)</title><rect x="1077.1" y="245" width="0.5" height="15.0" fill="rgb(244,112,45)" rx="2" ry="2" />
<text  x="1080.12" y="255.5" ></text>
</g>
<g >
<title>ExecInterpExpr (17,197,000,000 samples, 86.13%)</title><rect x="21.6" y="293" width="1016.3" height="15.0" fill="rgb(254,118,5)" rx="2" ry="2" />
<text  x="24.61" y="303.5" >ExecInterpExpr</text>
</g>
<g >
<title>MemoryContextReset (29,500,000 samples, 0.15%)</title><rect x="1188.2" y="309" width="1.7" height="15.0" fill="rgb(220,43,6)" rx="2" ry="2" />
<text  x="1191.20" y="319.5" ></text>
</g>
<g >
<title>read_stream_next_buffer (425,500,000 samples, 2.13%)</title><rect x="1146.5" y="245" width="25.2" height="15.0" fill="rgb(221,99,16)" rx="2" ry="2" />
<text  x="1149.50" y="255.5" >r..</text>
</g>
<g >
<title>mas_walk (4,500,000 samples, 0.02%)</title><rect x="1144.9" y="149" width="0.3" height="15.0" fill="rgb(223,25,37)" rx="2" ry="2" />
<text  x="1147.94" y="159.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,000,000 samples, 0.01%)</title><rect x="1169.9" y="117" width="0.2" height="15.0" fill="rgb(236,122,26)" rx="2" ry="2" />
<text  x="1172.94" y="127.5" ></text>
</g>
<g >
<title>SeqNext (2,153,500,000 samples, 10.79%)</title><rect x="1044.9" y="293" width="127.2" height="15.0" fill="rgb(239,212,40)" rx="2" ry="2" />
<text  x="1047.86" y="303.5" >SeqNext</text>
</g>
<g >
<title>lock_mm_and_find_vma (10,500,000 samples, 0.05%)</title><rect x="1144.1" y="165" width="0.7" height="15.0" fill="rgb(230,104,14)" rx="2" ry="2" />
<text  x="1147.14" y="175.5" ></text>
</g>
<g >
<title>pg_utf_mblen_private (11,009,000,000 samples, 55.14%)</title><rect x="231.4" y="261" width="650.6" height="15.0" fill="rgb(205,222,37)" rx="2" ry="2" />
<text  x="234.38" y="271.5" >pg_utf_mblen_private</text>
</g>
<g >
<title>GetPrivateRefCountEntry (2,500,000 samples, 0.01%)</title><rect x="1169.8" y="197" width="0.1" height="15.0" fill="rgb(248,99,53)" rx="2" ry="2" />
<text  x="1172.79" y="207.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2,000,000 samples, 0.01%)</title><rect x="1169.9" y="197" width="0.2" height="15.0" fill="rgb(212,45,13)" rx="2" ry="2" />
<text  x="1172.94" y="207.5" ></text>
</g>
<g >
<title>__count_memcg_events (3,000,000 samples, 0.02%)</title><rect x="1143.8" y="133" width="0.2" height="15.0" fill="rgb(216,169,47)" rx="2" ry="2" />
<text  x="1146.84" y="143.5" ></text>
</g>
<g >
<title>next_uptodate_page (108,000,000 samples, 0.54%)</title><rect x="1135.6" y="69" width="6.4" height="15.0" fill="rgb(206,223,48)" rx="2" ry="2" />
<text  x="1138.57" y="79.5" ></text>
</g>
<g >
<title>__handle_mm_fault (240,500,000 samples, 1.20%)</title><rect x="1129.6" y="149" width="14.2" height="15.0" fill="rgb(221,60,4)" rx="2" ry="2" />
<text  x="1132.63" y="159.5" ></text>
</g>
<g >
<title>BufTableLookup (312,500,000 samples, 1.57%)</title><rect x="1148.4" y="213" width="18.4" height="15.0" fill="rgb(224,23,32)" rx="2" ry="2" />
<text  x="1151.37" y="223.5" ></text>
</g>
<g >
<title>filemap_map_pages (211,000,000 samples, 1.06%)</title><rect x="1130.5" y="85" width="12.5" height="15.0" fill="rgb(214,179,40)" rx="2" ry="2" />
<text  x="1133.52" y="95.5" ></text>
</g>
</g>
</svg>
