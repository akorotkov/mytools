<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>lock_vma_under_rcu (12,500,000 samples, 0.04%)</title><rect x="1021.6" y="229" width="0.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1024.60" y="239.5" ></text>
</g>
<g >
<title>next_uptodate_page (3,500,000 samples, 0.01%)</title><rect x="1161.8" y="69" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1164.85" y="79.5" ></text>
</g>
<g >
<title>LWLockAttemptLock (8,000,000 samples, 0.03%)</title><rect x="1133.2" y="261" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1136.22" y="271.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (4,000,000 samples, 0.01%)</title><rect x="1016.5" y="133" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1019.48" y="143.5" ></text>
</g>
<g >
<title>xas_find (42,000,000 samples, 0.13%)</title><rect x="1016.6" y="133" width="1.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1019.63" y="143.5" ></text>
</g>
<g >
<title>IncrBufferRefCount (10,500,000 samples, 0.03%)</title><rect x="1078.5" y="277" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1081.54" y="287.5" ></text>
</g>
<g >
<title>clear_page_erms (3,000,000 samples, 0.01%)</title><rect x="1018.9" y="69" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1021.94" y="79.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7,000,000 samples, 0.02%)</title><rect x="434.3" y="261" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="437.32" y="271.5" ></text>
</g>
<g >
<title>find_vma (3,000,000 samples, 0.01%)</title><rect x="1173.7" y="181" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1176.68" y="191.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (9,500,000 samples, 0.03%)</title><rect x="1161.7" y="213" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1164.68" y="223.5" ></text>
</g>
<g >
<title>all (31,203,500,000 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>heap_page_prune_opt (246,000,000 samples, 0.79%)</title><rect x="1164.7" y="261" width="9.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1167.72" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (6,500,000 samples, 0.02%)</title><rect x="1158.4" y="165" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1161.39" y="175.5" ></text>
</g>
<g >
<title>tick_sched_handle (3,500,000 samples, 0.01%)</title><rect x="434.4" y="181" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="437.36" y="191.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (3,000,000 samples, 0.01%)</title><rect x="993.5" y="229" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="996.53" y="239.5" ></text>
</g>
<g >
<title>ss_report_location (5,000,000 samples, 0.02%)</title><rect x="1174.0" y="277" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1177.02" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (6,500,000 samples, 0.02%)</title><rect x="434.3" y="229" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="437.34" y="239.5" ></text>
</g>
<g >
<title>LWLockRelease (6,500,000 samples, 0.02%)</title><rect x="1160.6" y="229" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1163.58" y="239.5" ></text>
</g>
<g >
<title>exec_simple_query (31,203,000,000 samples, 100.00%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="13.02" y="415.5" >exec_simple_query</text>
</g>
<g >
<title>filemap_map_pages (68,500,000 samples, 0.22%)</title><rect x="1170.8" y="117" width="2.6" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1173.83" y="127.5" ></text>
</g>
<g >
<title>heapgetpage (7,000,000 samples, 0.02%)</title><rect x="943.5" y="293" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="946.46" y="303.5" ></text>
</g>
<g >
<title>bpcharlen (71,500,000 samples, 0.23%)</title><rect x="1174.7" y="325" width="2.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1177.74" y="335.5" ></text>
</g>
<g >
<title>PostgresMain (31,203,000,000 samples, 100.00%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="13.02" y="431.5" >PostgresMain</text>
</g>
<g >
<title>exit_to_user_mode_prepare (8,500,000 samples, 0.03%)</title><rect x="1022.3" y="213" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1025.28" y="223.5" ></text>
</g>
<g >
<title>MemoryContextReset (8,000,000 samples, 0.03%)</title><rect x="1189.3" y="341" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1192.30" y="351.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (3,000,000 samples, 0.01%)</title><rect x="1173.7" y="197" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1176.68" y="207.5" ></text>
</g>
<g >
<title>exc_page_fault (799,500,000 samples, 2.56%)</title><rect x="992.5" y="261" width="30.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="995.54" y="271.5" >ex..</text>
</g>
<g >
<title>LWLockAcquire (5,500,000 samples, 0.02%)</title><rect x="1133.0" y="261" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1136.01" y="271.5" ></text>
</g>
<g >
<title>alloc_page_interleave (9,000,000 samples, 0.03%)</title><rect x="1018.8" y="117" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1021.79" y="127.5" ></text>
</g>
<g >
<title>do_fault (76,500,000 samples, 0.25%)</title><rect x="1170.8" y="149" width="2.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1173.75" y="159.5" ></text>
</g>
<g >
<title>ExecInterpExpr (90,000,000 samples, 0.29%)</title><rect x="10.0" y="341" width="3.4" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="13.02" y="351.5" ></text>
</g>
<g >
<title>IOContextForStrategy (7,500,000 samples, 0.02%)</title><rect x="1158.7" y="229" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1161.69" y="239.5" ></text>
</g>
<g >
<title>down_read_trylock (4,000,000 samples, 0.01%)</title><rect x="993.7" y="229" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="996.68" y="239.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (7,000,000 samples, 0.02%)</title><rect x="1158.4" y="197" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1161.37" y="207.5" ></text>
</g>
<g >
<title>do_fault (6,000,000 samples, 0.02%)</title><rect x="1158.4" y="101" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1161.40" y="111.5" ></text>
</g>
<g >
<title>ExecScan (31,086,000,000 samples, 99.62%)</title><rect x="13.4" y="341" width="1175.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="16.42" y="351.5" >ExecScan</text>
</g>
<g >
<title>ExecStoreBufferHeapTuple (628,000,000 samples, 2.01%)</title><rect x="1056.2" y="293" width="23.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1059.22" y="303.5" >E..</text>
</g>
<g >
<title>scheduler_tick (3,500,000 samples, 0.01%)</title><rect x="434.4" y="149" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="437.36" y="159.5" ></text>
</g>
<g >
<title>hash_bytes (24,500,000 samples, 0.08%)</title><rect x="1162.2" y="245" width="0.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1165.17" y="255.5" ></text>
</g>
<g >
<title>mt_find (10,500,000 samples, 0.03%)</title><rect x="1021.2" y="197" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1024.19" y="207.5" ></text>
</g>
<g >
<title>filemap_map_pages (6,000,000 samples, 0.02%)</title><rect x="1158.4" y="69" width="0.2" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1161.40" y="79.5" ></text>
</g>
<g >
<title>heapgettup_pagemode (2,497,000,000 samples, 8.00%)</title><rect x="1080.2" y="293" width="94.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1083.20" y="303.5" >heapgettup_..</text>
</g>
<g >
<title>heap_getnextslot (248,500,000 samples, 0.80%)</title><rect x="1177.4" y="325" width="9.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1180.44" y="335.5" ></text>
</g>
<g >
<title>ResourceOwnerRememberBuffer (3,500,000 samples, 0.01%)</title><rect x="1161.5" y="213" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1164.54" y="223.5" ></text>
</g>
<g >
<title>ReadBufferExtended (764,000,000 samples, 2.45%)</title><rect x="1134.2" y="261" width="28.9" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1137.22" y="271.5" >Re..</text>
</g>
<g >
<title>alloc_pages (9,500,000 samples, 0.03%)</title><rect x="1018.8" y="133" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1021.77" y="143.5" ></text>
</g>
<g >
<title>__pte_offset_map_lock (5,000,000 samples, 0.02%)</title><rect x="1001.8" y="133" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1004.75" y="143.5" ></text>
</g>
<g >
<title>tts_buffer_heap_getsomeattrs (11,000,000 samples, 0.04%)</title><rect x="1174.2" y="277" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1177.21" y="287.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (864,500,000 samples, 2.77%)</title><rect x="990.2" y="277" width="32.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="993.24" y="287.5" >as..</text>
</g>
<g >
<title>pg_mbstrlen_with_len (6,500,000 samples, 0.02%)</title><rect x="941.0" y="309" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="943.96" y="319.5" ></text>
</g>
<g >
<title>PostmasterMain (31,203,000,000 samples, 100.00%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.02" y="463.5" >PostmasterMain</text>
</g>
<g >
<title>sync_regs (5,500,000 samples, 0.02%)</title><rect x="1023.5" y="277" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1026.48" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6,000,000 samples, 0.02%)</title><rect x="1158.4" y="133" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1161.40" y="143.5" ></text>
</g>
<g >
<title>pg_database_encoding_max_length (60,000,000 samples, 0.19%)</title><rect x="935.6" y="309" width="2.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="938.57" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (14,500,000 samples, 0.05%)</title><rect x="934.9" y="261" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="937.95" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle (4,500,000 samples, 0.01%)</title><rect x="935.2" y="181" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="938.18" y="191.5" ></text>
</g>
<g >
<title>page_add_file_rmap (3,000,000 samples, 0.01%)</title><rect x="1172.0" y="85" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1174.96" y="95.5" ></text>
</g>
<g >
<title>tick_sched_timer (7,500,000 samples, 0.02%)</title><rect x="935.1" y="197" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="938.06" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3,500,000 samples, 0.01%)</title><rect x="1002.0" y="133" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1004.98" y="143.5" ></text>
</g>
<g >
<title>__alloc_pages (8,500,000 samples, 0.03%)</title><rect x="1018.8" y="101" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1021.79" y="111.5" ></text>
</g>
<g >
<title>SeqNext (3,631,000,000 samples, 11.64%)</title><rect x="1037.4" y="325" width="137.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1040.41" y="335.5" >SeqNext</text>
</g>
<g >
<title>__memcmp_avx2_movbe (13,500,000 samples, 0.04%)</title><rect x="1135.7" y="213" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1138.66" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4,000,000 samples, 0.01%)</title><rect x="434.3" y="213" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="437.34" y="223.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (3,000,000 samples, 0.01%)</title><rect x="935.1" y="181" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="938.06" y="191.5" ></text>
</g>
<g >
<title>heap_getnextslot (3,328,000,000 samples, 10.67%)</title><rect x="1048.9" y="309" width="125.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1051.85" y="319.5" >heap_getnextslot</text>
</g>
<g >
<title>ExecInterpExpr (26,596,500,000 samples, 85.24%)</title><rect x="20.5" y="325" width="1005.8" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="23.48" y="335.5" >ExecInterpExpr</text>
</g>
<g >
<title>MemoryContextReset (199,000,000 samples, 0.64%)</title><rect x="1029.9" y="325" width="7.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1032.89" y="335.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (45,000,000 samples, 0.14%)</title><rect x="1006.9" y="117" width="1.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1009.87" y="127.5" ></text>
</g>
<g >
<title>ReadBuffer_common (719,500,000 samples, 2.31%)</title><rect x="1134.9" y="245" width="27.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1137.90" y="255.5" >R..</text>
</g>
<g >
<title>page_add_file_rmap (12,500,000 samples, 0.04%)</title><rect x="1006.4" y="117" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1009.40" y="127.5" ></text>
</g>
<g >
<title>ResourceArrayRemove (12,500,000 samples, 0.04%)</title><rect x="1164.2" y="229" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1167.21" y="239.5" ></text>
</g>
<g >
<title>handle_mm_fault (711,500,000 samples, 2.28%)</title><rect x="993.8" y="229" width="26.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="996.83" y="239.5" >h..</text>
</g>
<g >
<title>ResourceOwnerForgetBuffer (14,000,000 samples, 0.04%)</title><rect x="1164.2" y="245" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1167.15" y="255.5" ></text>
</g>
<g >
<title>PinBuffer (32,000,000 samples, 0.10%)</title><rect x="1160.8" y="229" width="1.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1163.82" y="239.5" ></text>
</g>
<g >
<title>pg_utf_mblen (13,246,500,000 samples, 42.45%)</title><rect x="434.6" y="293" width="500.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="437.58" y="303.5" >pg_utf_mblen</text>
</g>
<g >
<title>bpcharlen (22,867,500,000 samples, 73.29%)</title><rect x="70.8" y="309" width="864.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="73.81" y="319.5" >bpcharlen</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (7,000,000 samples, 0.02%)</title><rect x="434.3" y="245" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="437.32" y="255.5" ></text>
</g>
<g >
<title>xas_move_index (3,500,000 samples, 0.01%)</title><rect x="1018.1" y="117" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1021.09" y="127.5" ></text>
</g>
<g >
<title>exc_page_fault (9,500,000 samples, 0.03%)</title><rect x="1161.7" y="197" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1164.68" y="207.5" ></text>
</g>
<g >
<title>UnpinBuffer (39,500,000 samples, 0.13%)</title><rect x="1163.2" y="261" width="1.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1166.19" y="271.5" ></text>
</g>
<g >
<title>do_set_pte (4,500,000 samples, 0.01%)</title><rect x="996.4" y="149" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="999.38" y="159.5" ></text>
</g>
<g >
<title>next_uptodate_page (196,500,000 samples, 0.63%)</title><rect x="1008.9" y="133" width="7.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1011.86" y="143.5" ></text>
</g>
<g >
<title>do_user_addr_fault (93,000,000 samples, 0.30%)</title><rect x="1170.4" y="213" width="3.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1173.45" y="223.5" ></text>
</g>
<g >
<title>LWLockRelease (14,000,000 samples, 0.04%)</title><rect x="1133.5" y="261" width="0.6" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1136.52" y="271.5" ></text>
</g>
<g >
<title>UnpinBuffer (22,500,000 samples, 0.07%)</title><rect x="1079.1" y="277" width="0.9" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1082.10" y="287.5" ></text>
</g>
<g >
<title>do_fault (642,500,000 samples, 2.06%)</title><rect x="995.5" y="181" width="24.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="998.49" y="191.5" >d..</text>
</g>
<g >
<title>handle_mm_fault (9,000,000 samples, 0.03%)</title><rect x="1161.7" y="165" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1164.68" y="175.5" ></text>
</g>
<g >
<title>PortalRun (31,203,000,000 samples, 100.00%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="13.02" y="399.5" >PortalRun</text>
</g>
<g >
<title>access_error (3,000,000 samples, 0.01%)</title><rect x="992.9" y="245" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="995.90" y="255.5" ></text>
</g>
<g >
<title>ss_search (3,000,000 samples, 0.01%)</title><rect x="1174.1" y="261" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1177.10" y="271.5" ></text>
</g>
<g >
<title>pte_alloc_one (12,000,000 samples, 0.04%)</title><rect x="1018.8" y="149" width="0.4" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1021.77" y="159.5" ></text>
</g>
<g >
<title>update_process_times (3,500,000 samples, 0.01%)</title><rect x="434.4" y="165" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="437.36" y="175.5" ></text>
</g>
<g >
<title>do_user_addr_fault (773,000,000 samples, 2.48%)</title><rect x="993.0" y="245" width="29.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="996.02" y="255.5" >do..</text>
</g>
<g >
<title>__count_memcg_events (8,000,000 samples, 0.03%)</title><rect x="1020.2" y="197" width="0.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1023.22" y="207.5" ></text>
</g>
<g >
<title>filemap_map_pages (8,000,000 samples, 0.03%)</title><rect x="1161.7" y="85" width="0.3" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1164.69" y="95.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7,500,000 samples, 0.02%)</title><rect x="434.3" y="277" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="437.30" y="287.5" ></text>
</g>
<g >
<title>xas_descend (8,500,000 samples, 0.03%)</title><rect x="1017.7" y="101" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1020.69" y="111.5" ></text>
</g>
<g >
<title>ServerLoop (31,203,000,000 samples, 100.00%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="13.02" y="447.5" >ServerLoop</text>
</g>
<g >
<title>handle_mm_fault (6,000,000 samples, 0.02%)</title><rect x="1158.4" y="149" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1161.40" y="159.5" ></text>
</g>
<g >
<title>do_fault (8,500,000 samples, 0.03%)</title><rect x="1161.7" y="117" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1164.68" y="127.5" ></text>
</g>
<g >
<title>exc_page_fault (95,000,000 samples, 0.30%)</title><rect x="1170.4" y="229" width="3.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1173.41" y="239.5" ></text>
</g>
<g >
<title>handle_mm_fault (80,500,000 samples, 0.26%)</title><rect x="1170.6" y="197" width="3.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1173.64" y="207.5" ></text>
</g>
<g >
<title>standard_ExecutorRun (31,203,000,000 samples, 100.00%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="13.02" y="367.5" >standard_ExecutorRun</text>
</g>
<g >
<title>folio_test_hugetlb (3,000,000 samples, 0.01%)</title><rect x="1173.4" y="117" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1176.42" y="127.5" ></text>
</g>
<g >
<title>tts_buffer_heap_getsomeattrs (2,113,500,000 samples, 6.77%)</title><rect x="943.8" y="293" width="79.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="946.76" y="303.5" >tts_buffe..</text>
</g>
<g >
<title>count_memcg_events.constprop.0 (12,000,000 samples, 0.04%)</title><rect x="1020.1" y="213" width="0.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1023.09" y="223.5" ></text>
</g>
<g >
<title>heapgetpage (1,749,000,000 samples, 5.61%)</title><rect x="1107.9" y="277" width="66.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1110.88" y="287.5" >heapget..</text>
</g>
<g >
<title>pte_offset_map_nolock (7,000,000 samples, 0.02%)</title><rect x="1019.8" y="181" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1022.81" y="191.5" ></text>
</g>
<g >
<title>LWLockAttemptLock (37,000,000 samples, 0.12%)</title><rect x="1159.2" y="229" width="1.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1162.18" y="239.5" ></text>
</g>
<g >
<title>error_entry (5,000,000 samples, 0.02%)</title><rect x="1023.0" y="277" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1025.98" y="287.5" ></text>
</g>
<g >
<title>update_process_times (4,000,000 samples, 0.01%)</title><rect x="935.2" y="165" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="938.19" y="175.5" ></text>
</g>
<g >
<title>find_vma (15,500,000 samples, 0.05%)</title><rect x="1021.0" y="213" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1024.00" y="223.5" ></text>
</g>
<g >
<title>__irqentry_text_end (6,000,000 samples, 0.02%)</title><rect x="990.0" y="277" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="993.01" y="287.5" ></text>
</g>
<g >
<title>next_uptodate_page (22,500,000 samples, 0.07%)</title><rect x="1172.3" y="101" width="0.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1175.34" y="111.5" ></text>
</g>
<g >
<title>int4lt (56,000,000 samples, 0.18%)</title><rect x="1186.8" y="325" width="2.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1189.84" y="335.5" ></text>
</g>
<g >
<title>handle_pte_fault (78,500,000 samples, 0.25%)</title><rect x="1170.7" y="165" width="3.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1173.69" y="175.5" ></text>
</g>
<g >
<title>LWLockAcquire (5,500,000 samples, 0.02%)</title><rect x="1159.0" y="229" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1161.97" y="239.5" ></text>
</g>
<g >
<title>filemap_map_pages (3,500,000 samples, 0.01%)</title><rect x="1019.6" y="165" width="0.2" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1022.64" y="175.5" ></text>
</g>
<g >
<title>xas_load (3,000,000 samples, 0.01%)</title><rect x="1173.3" y="85" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1176.29" y="95.5" ></text>
</g>
<g >
<title>mtree_range_walk (3,500,000 samples, 0.01%)</title><rect x="1021.9" y="197" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1024.94" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (79,500,000 samples, 0.25%)</title><rect x="1170.7" y="181" width="3.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1173.66" y="191.5" ></text>
</g>
<g >
<title>filemap_map_pages (575,500,000 samples, 1.84%)</title><rect x="996.6" y="149" width="21.7" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="999.55" y="159.5" >f..</text>
</g>
<g >
<title>asm_exc_page_fault (9,000,000 samples, 0.03%)</title><rect x="1174.2" y="261" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1177.21" y="271.5" ></text>
</g>
<g >
<title>main (31,203,000,000 samples, 100.00%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.02" y="479.5" >main</text>
</g>
<g >
<title>xas_load (20,500,000 samples, 0.07%)</title><rect x="1017.3" y="117" width="0.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1020.31" y="127.5" ></text>
</g>
<g >
<title>folio_test_hugetlb (9,000,000 samples, 0.03%)</title><rect x="1018.4" y="149" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1021.35" y="159.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (9,000,000 samples, 0.03%)</title><rect x="1022.3" y="229" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1025.28" y="239.5" ></text>
</g>
<g >
<title>heap_page_prune_opt (7,000,000 samples, 0.02%)</title><rect x="943.5" y="277" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="946.46" y="287.5" ></text>
</g>
<g >
<title>xas_find (5,500,000 samples, 0.02%)</title><rect x="1173.2" y="101" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1176.19" y="111.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (6,000,000 samples, 0.02%)</title><rect x="943.5" y="261" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="946.48" y="271.5" ></text>
</g>
<g >
<title>ResourceArrayRemove (4,500,000 samples, 0.01%)</title><rect x="1079.8" y="245" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1082.78" y="255.5" ></text>
</g>
<g >
<title>ExecScanFetch (96,000,000 samples, 0.31%)</title><rect x="1026.3" y="325" width="3.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1029.26" y="335.5" ></text>
</g>
<g >
<title>handle_pte_fault (655,500,000 samples, 2.10%)</title><rect x="995.3" y="197" width="24.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="998.30" y="207.5" >h..</text>
</g>
<g >
<title>xas_find (3,000,000 samples, 0.01%)</title><rect x="1158.5" y="53" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1161.52" y="63.5" ></text>
</g>
<g >
<title>tts_buffer_heap_getsomeattrs (68,000,000 samples, 0.22%)</title><rect x="1023.7" y="309" width="2.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1026.68" y="319.5" ></text>
</g>
<g >
<title>CheckForSerializableConflictOutNeeded (22,000,000 samples, 0.07%)</title><rect x="1106.7" y="277" width="0.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1109.73" y="287.5" ></text>
</g>
<g >
<title>hash_search_with_hash_value (595,000,000 samples, 1.91%)</title><rect x="1136.2" y="213" width="22.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1139.17" y="223.5" >h..</text>
</g>
<g >
<title>do_set_pte (170,000,000 samples, 0.54%)</title><rect x="1002.1" y="133" width="6.5" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1005.15" y="143.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (6,500,000 samples, 0.02%)</title><rect x="1172.1" y="85" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1175.08" y="95.5" ></text>
</g>
<g >
<title>BufTableLookup (608,500,000 samples, 1.95%)</title><rect x="1135.7" y="229" width="23.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1138.66" y="239.5" >B..</text>
</g>
<g >
<title>exc_page_fault (7,000,000 samples, 0.02%)</title><rect x="1158.4" y="181" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1161.37" y="191.5" ></text>
</g>
<g >
<title>do_read_fault (628,500,000 samples, 2.01%)</title><rect x="995.9" y="165" width="23.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="998.87" y="175.5" >d..</text>
</g>
<g >
<title>tick_sched_timer (4,000,000 samples, 0.01%)</title><rect x="434.3" y="197" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="437.34" y="207.5" ></text>
</g>
<g >
<title>__libc_start_call_main (31,203,000,000 samples, 100.00%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="13.02" y="495.5" >__libc_start_call_main</text>
</g>
<g >
<title>error_return (3,000,000 samples, 0.01%)</title><rect x="1023.2" y="277" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1026.17" y="287.5" ></text>
</g>
<g >
<title>LockBuffer (4,500,000 samples, 0.01%)</title><rect x="1134.1" y="261" width="0.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="1137.05" y="271.5" ></text>
</g>
<g >
<title>ExecStoreBufferHeapTuple (26,000,000 samples, 0.08%)</title><rect x="1047.9" y="309" width="1.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1050.87" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (8,500,000 samples, 0.03%)</title><rect x="1161.7" y="149" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1164.68" y="159.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (95,500,000 samples, 0.31%)</title><rect x="1170.4" y="245" width="3.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1173.39" y="255.5" ></text>
</g>
<g >
<title>SeqNext (10,500,000 samples, 0.03%)</title><rect x="1189.6" y="341" width="0.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1192.60" y="351.5" ></text>
</g>
<g >
<title>__handle_mm_fault (682,500,000 samples, 2.19%)</title><rect x="994.3" y="213" width="25.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="997.28" y="223.5" >_..</text>
</g>
<g >
<title>ExecScanFetch (8,500,000 samples, 0.03%)</title><rect x="1189.0" y="341" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1191.98" y="351.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3,500,000 samples, 0.01%)</title><rect x="1018.9" y="85" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1021.94" y="95.5" ></text>
</g>
<g >
<title>irqentry_exit (9,500,000 samples, 0.03%)</title><rect x="1022.3" y="245" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1025.27" y="255.5" ></text>
</g>
<g >
<title>mas_walk (7,000,000 samples, 0.02%)</title><rect x="1021.8" y="213" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1024.81" y="223.5" ></text>
</g>
<g >
<title>do_set_pte (21,500,000 samples, 0.07%)</title><rect x="1171.5" y="101" width="0.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1174.51" y="111.5" ></text>
</g>
<g >
<title>handle_pte_fault (6,000,000 samples, 0.02%)</title><rect x="1158.4" y="117" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1161.40" y="127.5" ></text>
</g>
<g >
<title>do_read_fault (6,000,000 samples, 0.02%)</title><rect x="1158.4" y="85" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.40" y="95.5" ></text>
</g>
<g >
<title>do_user_addr_fault (9,000,000 samples, 0.03%)</title><rect x="1161.7" y="181" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1164.68" y="191.5" ></text>
</g>
<g >
<title>handle_pte_fault (8,500,000 samples, 0.03%)</title><rect x="1161.7" y="133" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1164.68" y="143.5" ></text>
</g>
<g >
<title>do_read_fault (8,500,000 samples, 0.03%)</title><rect x="1161.7" y="101" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.68" y="111.5" ></text>
</g>
<g >
<title>do_read_fault (76,000,000 samples, 0.24%)</title><rect x="1170.8" y="133" width="2.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1173.77" y="143.5" ></text>
</g>
<g >
<title>pg_detoast_datum_packed (82,500,000 samples, 0.26%)</title><rect x="937.8" y="309" width="3.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="940.84" y="319.5" ></text>
</g>
<g >
<title>xas_load (3,000,000 samples, 0.01%)</title><rect x="1158.5" y="37" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1161.52" y="47.5" ></text>
</g>
<g >
<title>native_set_pte (6,000,000 samples, 0.02%)</title><rect x="1008.6" y="133" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1011.63" y="143.5" ></text>
</g>
<g >
<title>postgres (31,203,500,000 samples, 100.00%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >postgres</text>
</g>
<g >
<title>pg_mbstrlen_with_len (8,607,000,000 samples, 27.58%)</title><rect x="109.1" y="293" width="325.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="112.10" y="303.5" >pg_mbstrlen_with_len</text>
</g>
<g >
<title>slot_getsomeattrs_int (2,181,000,000 samples, 6.99%)</title><rect x="941.2" y="309" width="82.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="944.21" y="319.5" >slot_gets..</text>
</g>
<g >
<title>ResourceOwnerRememberBuffer (4,000,000 samples, 0.01%)</title><rect x="1079.0" y="277" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1081.95" y="287.5" ></text>
</g>
<g >
<title>PortalRunSelect (31,203,000,000 samples, 100.00%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="13.02" y="383.5" >PortalRunSelect</text>
</g>
<g >
<title>GetPrivateRefCountEntry (18,500,000 samples, 0.06%)</title><rect x="1163.4" y="245" width="0.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1166.43" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (15,000,000 samples, 0.05%)</title><rect x="934.9" y="277" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="937.93" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (13,000,000 samples, 0.04%)</title><rect x="935.0" y="229" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="937.97" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (9,500,000 samples, 0.03%)</title><rect x="935.0" y="213" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="937.99" y="223.5" ></text>
</g>
<g >
<title>GetPrivateRefCountEntry (4,500,000 samples, 0.01%)</title><rect x="1161.3" y="213" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1164.28" y="223.5" ></text>
</g>
<g >
<title>ResourceOwnerForgetBuffer (6,000,000 samples, 0.02%)</title><rect x="1079.7" y="261" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1082.73" y="271.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (8,500,000 samples, 0.03%)</title><rect x="1019.3" y="149" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1022.26" y="159.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (23,000,000 samples, 0.07%)</title><rect x="1020.7" y="229" width="0.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1023.73" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (13,500,000 samples, 0.04%)</title><rect x="935.0" y="245" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="937.97" y="255.5" ></text>
</g>
</g>
</svg>
