diff -u --recursive x/mysql-5.7.1-m11/sql/sql_acl.cc mysql-5.7.1-m11/sql/sql_acl.cc
--- a/mysql-5.7.1-m11/sql/sql_acl.cc	2013-06-27 13:30:31.000000000 +0000
+++ b/mysql-5.7.1-m11/sql/sql_acl.cc	2024-08-20 17:59:03.249102527 +0000
@@ -2991,7 +2991,7 @@
     }    
     
     /* No value for plugin field means default plugin is used */
-    if (combo->plugin.str == NULL || combo->plugin.str == '\0')
+    if (combo->plugin.str == NULL || combo->plugin.str[0] == '\0')
     {
       combo->plugin.str= default_auth_plugin_name.str;
       combo->plugin.length= default_auth_plugin_name.length;
diff -u --recursive x/mysql-5.7.1-m11/storage/innobase/include/page0types.h mysql-5.7.1-m11/storage/innobase/include/page0types.h
--- a/mysql-5.7.1-m11/storage/innobase/include/page0types.h	2013-06-27 13:30:30.000000000 +0000
+++ b/mysql-5.7.1-m11/storage/innobase/include/page0types.h	2024-08-20 17:48:33.034377759 +0000
@@ -26,7 +26,7 @@
 #ifndef page0types_h
 #define page0types_h
 
-using namespace std;
+//using namespace std;
 
 #include <map>
 
@@ -108,7 +108,7 @@
 };
 
 /** Compression statistics types */
-typedef map<index_id_t, page_zip_stat_t>	page_zip_stat_per_index_t;
+typedef std::map<index_id_t, page_zip_stat_t>	page_zip_stat_per_index_t;
 
 /** Statistics on compression, indexed by page_zip_des_t::ssize - 1 */
 extern page_zip_stat_t				page_zip_stat[PAGE_ZIP_SSIZE_MAX];
diff -u --recursive x/mysql-5.7.1-m11/storage/innobase/include/univ.i mysql-5.7.1-m11/storage/innobase/include/univ.i
--- a/mysql-5.7.1-m11/storage/innobase/include/univ.i	2013-06-27 13:30:30.000000000 +0000
+++ b/mysql-5.7.1-m11/storage/innobase/include/univ.i	2024-08-20 17:35:15.027259426 +0000
@@ -427,7 +427,8 @@
 */
 
 /* Note that inside MySQL 'byte' is defined as char on Linux! */
-#define byte			unsigned char
+//#define byte			unsigned char
+using byte = unsigned char;
 
 /* Another basic type we use is unsigned long integer which should be equal to
 the word size of the machine, that is on a 32-bit platform 32 bits, and on a
diff -u --recursive x/mysql-5.7.1-m11/storage/innobase/row/row0log.cc mysql-5.7.1-m11/storage/innobase/row/row0log.cc
--- a/mysql-5.7.1-m11/storage/innobase/row/row0log.cc	2013-06-27 13:30:30.000000000 +0000
+++ b/mysql-5.7.1-m11/storage/innobase/row/row0log.cc	2024-08-20 17:54:20.547278164 +0000
@@ -2204,7 +2204,7 @@
 		posix_fadvise(index->online_log->fd,
 			      ofs, srv_sort_buf_size, POSIX_FADV_DONTNEED);
 #endif /* POSIX_FADV_DONTNEED */
-#ifdef FALLOC_FL_PUNCH_HOLE
+#if 0 // FALLOC_FL_PUNCH_HOLE
 		/* Try to deallocate the space for the file on disk.
 		This should work on ext4 on Linux 2.6.39 and later,
 		and be ignored when the operation is unsupported. */
@@ -2986,7 +2986,7 @@
 		posix_fadvise(index->online_log->fd,
 			      ofs, srv_sort_buf_size, POSIX_FADV_DONTNEED);
 #endif /* POSIX_FADV_DONTNEED */
-#ifdef FALLOC_FL_PUNCH_HOLE
+#if 0 // FALLOC_FL_PUNCH_HOLE
 		/* Try to deallocate the space for the file on disk.
 		This should work on ext4 on Linux 2.6.39 and later,
 		and be ignored when the operation is unsupported. */
diff -u --recursive x/mysql-5.7.1-m11/storage/innobase/srv/srv0mon.cc mysql-5.7.1-m11/storage/innobase/srv/srv0mon.cc
--- a/mysql-5.7.1-m11/storage/innobase/srv/srv0mon.cc	2013-06-27 13:30:30.000000000 +0000
+++ b/mysql-5.7.1-m11/storage/innobase/srv/srv0mon.cc	2024-08-20 17:57:55.382741154 +0000
@@ -41,8 +41,8 @@
 /* Macro to standardize the counter names for counters in the
 "monitor_buf_page" module as they have very structured defines */
 #define	MONITOR_BUF_PAGE(name, description, code, op, op_code)	\
-	{"buffer_page_"op"_"name, "buffer_page_io",		\
-	 "Number of "description" Pages "op,			\
+	{"buffer_page_" op "_" name, "buffer_page_io",		\
+	 "Number of " description " Pages " op,			\
 	 MONITOR_GROUP_MODULE, MONITOR_DEFAULT_START,		\
 	 MONITOR_##code##_##op_code}
 
