<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:1233.1-12: warning: POSIX Yacc does not support %pure-parser [-Wyacc]
 1233 | %pure-parser                                    /* We have threads */
      | ^~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:1233.1-12: warning: deprecated directive: ‘%pure-parser’, use ‘%define api.pure’ [-Wdeprecated]
 1233 | %pure-parser                                    /* We have threads */
      | ^~~~~~~~~~~~
      | %define api.pure
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:1238.1-7: warning: POSIX Yacc does not support %expect [-Wyacc]
 1238 | %expect 183
      | ^~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:1945.9-13: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
<command-line>: warning: ISO C99 requires whitespace after the macro name
 1945 |         IDENT IDENT_QUOTED TEXT_STRING DECIMAL_NUM FLOAT_NUM NUM LONG...
      |         ^~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:1945.15-26: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 1945 |         IDENT IDENT_QUOTED TEXT_STRING DECIMAL_NUM FLOAT_NUM NUM LONG...
      |               ^~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:1945.28-38: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 1945 |         IDENT IDENT_QUOTED TEXT_STRING DECIMAL_NUM FLOAT_NUM NUM LONG...
      |                            ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:1945.40-50: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 1945 |         IDENT IDENT_QUOTED TEXT_STRING DECIMAL_NUM FLOAT_NUM NUM LONG...
      |                                        ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:1945.52-60: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 1945 |         IDENT IDENT_QUOTED TEXT_STRING DECIMAL_NUM FLOAT_NUM NUM LONG...
      |                                                    ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:1945.62-64: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 1945 |         IDENT IDENT_QUOTED TEXT_STRING DECIMAL_NUM FLOAT_NUM NUM LONG...
      |                                                              ^~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:1945.66-73: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 1945 |         IDENT IDENT_QUOTED TEXT_STRING DECIMAL_NUM FLOAT_NUM NUM LONG...
      |                                                                  ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:1945.75-81: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 1945 | ...LONG_NUM HEX_NUM
      |             ^~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:1946.9-20: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 1946 |         LEX_HOSTNAME ULONGLONG_NUM field_ident select_alias ident ide...
      |         ^~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:1946.22-34: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 1946 |         LEX_HOSTNAME ULONGLONG_NUM field_ident select_alias ident ide...
      |                      ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:1948.9-20: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 1948 |         NCHAR_STRING opt_component key_cache_name
      |         ^~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:1949.22-28: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 1949 |         sp_opt_label BIN_NUM label_ident TEXT_STRING_filesystem ident...
      |                      ^~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2090.9-26: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2090 |         UNDERSCORE_CHARSET
      |         ^~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2159.1-12: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2159 | END_OF_INPUT
      | ^~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2194.9-11: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2194 |         '-' '+' '*' '/' '%' '(' ')'
      |         ^~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2194.13-15: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2194 |         '-' '+' '*' '/' '%' '(' ')'
      |             ^~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2194.17-19: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2194 |         '-' '+' '*' '/' '%' '(' ')'
      |                 ^~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2194.21-23: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2194 |         '-' '+' '*' '/' '%' '(' ')'
      |                     ^~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2194.25-27: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2194 |         '-' '+' '*' '/' '%' '(' ')'
      |                         ^~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2194.29-31: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2194 |         '-' '+' '*' '/' '%' '(' ')'
      |                             ^~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2194.33-35: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2194 |         '-' '+' '*' '/' '%' '(' ')'
      |                                 ^~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2195.9-11: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2195 |         ',' '!' '{' '}' '&' '|' AND_SYM OR_SYM OR_OR_SYM BETWEEN_SYM ...
      |         ^~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2195.13-15: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2195 |         ',' '!' '{' '}' '&' '|' AND_SYM OR_SYM OR_OR_SYM BETWEEN_SYM ...
      |             ^~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2195.17-19: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2195 |         ',' '!' '{' '}' '&' '|' AND_SYM OR_SYM OR_OR_SYM BETWEEN_SYM ...
      |                 ^~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2195.21-23: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2195 |         ',' '!' '{' '}' '&' '|' AND_SYM OR_SYM OR_OR_SYM BETWEEN_SYM ...
      |                     ^~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2195.25-27: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2195 |         ',' '!' '{' '}' '&' '|' AND_SYM OR_SYM OR_OR_SYM BETWEEN_SYM ...
      |                         ^~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2195.29-31: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2195 |         ',' '!' '{' '}' '&' '|' AND_SYM OR_SYM OR_OR_SYM BETWEEN_SYM ...
      |                             ^~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2195.33-39: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2195 |         ',' '!' '{' '}' '&' '|' AND_SYM OR_SYM OR_OR_SYM BETWEEN_SYM ...
      |                                 ^~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2195.41-46: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2195 |         ',' '!' '{' '}' '&' '|' AND_SYM OR_SYM OR_OR_SYM BETWEEN_SYM ...
      |                                         ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2195.48-56: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2195 |         ',' '!' '{' '}' '&' '|' AND_SYM OR_SYM OR_OR_SYM BETWEEN_SYM ...
      |                                                ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2195.58-68: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2195 |         ',' '!' '{' '}' '&' '|' AND_SYM OR_SYM OR_OR_SYM BETWEEN_SYM ...
      |                                                          ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2195.70-77: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2195 |         ',' '!' '{' '}' '&' '|' AND_SYM OR_SYM OR_OR_SYM BETWEEN_SYM ...
      |                                                                      ^
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2196.9-16: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2196 |         THEN_SYM WHEN_SYM DIV_SYM MOD_SYM OR2_SYM AND_AND_SYM DELETE_...
      |         ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2196.18-25: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2196 |         THEN_SYM WHEN_SYM DIV_SYM MOD_SYM OR2_SYM AND_AND_SYM DELETE_...
      |                  ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2196.27-33: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2196 |         THEN_SYM WHEN_SYM DIV_SYM MOD_SYM OR2_SYM AND_AND_SYM DELETE_...
      |                           ^~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2196.35-41: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2196 |         THEN_SYM WHEN_SYM DIV_SYM MOD_SYM OR2_SYM AND_AND_SYM DELETE_...
      |                                   ^~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2196.43-49: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2196 |         THEN_SYM WHEN_SYM DIV_SYM MOD_SYM OR2_SYM AND_AND_SYM DELETE_...
      |                                           ^~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2196.51-61: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2196 |         THEN_SYM WHEN_SYM DIV_SYM MOD_SYM OR2_SYM AND_AND_SYM DELETE_...
      |                                                   ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2196.63-72: warning: POSIX yacc reserves %type to nonterminals [-Wyacc]
 2196 |         THEN_SYM WHEN_SYM DIV_SYM MOD_SYM OR2_SYM AND_AND_SYM DELETE_...
      |                                                               ^~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c: In function ‘my_uni_utf8_no_range’:
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:5549:65: warning: this statement may fall through [-Wimplicit-fallthrough=]
 5549 |     case 3: r[2]= (uchar) (0x80 | (wc & 0x3f)); wc= wc >> 6; wc |= 0x800;
      |                                                              ~~~^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:5550:5: note: here
 5550 |     case 2: r[1]= (uchar) (0x80 | (wc & 0x3f)); wc= wc >> 6; wc |= 0xc0;
      |     ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:5550:65: warning: this statement may fall through [-Wimplicit-fallthrough=]
 5550 |     case 2: r[1]= (uchar) (0x80 | (wc & 0x3f)); wc= wc >> 6; wc |= 0xc0;
      |                                                              ~~~^~~~~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:5551:5: note: here
 5551 |     case 1: r[0]= (uchar) wc;
      |     ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c: In function ‘my_uni_utf8’:
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:5520:67: warning: this statement may fall through [-Wimplicit-fallthrough=]
 5520 |     case 3: r[2] = (uchar) (0x80 | (wc & 0x3f)); wc = wc >> 6; wc |= 0x800;
      |                                                                ~~~^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:5521:5: note: here
 5521 |     case 2: r[1] = (uchar) (0x80 | (wc & 0x3f)); wc = wc >> 6; wc |= 0xc0;
      |     ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:5521:67: warning: this statement may fall through [-Wimplicit-fallthrough=]
 5521 |     case 2: r[1] = (uchar) (0x80 | (wc & 0x3f)); wc = wc >> 6; wc |= 0xc0;
      |                                                                ~~~^~~~~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:5522:5: note: here
 5522 |     case 1: r[0] = (uchar) wc;
      |     ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c: In function ‘my_wc_mb_utf8mb4_no_range’:
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:8097:65: warning: this statement may fall through [-Wimplicit-fallthrough=]
 8097 |     case 4: r[3]= (uchar) (0x80 | (wc & 0x3f)); wc= wc >> 6; wc |= 0x10000;
      |                                                              ~~~^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:8098:5: note: here
 8098 |     case 3: r[2]= (uchar) (0x80 | (wc & 0x3f)); wc= wc >> 6; wc |= 0x800;
      |     ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:8098:65: warning: this statement may fall through [-Wimplicit-fallthrough=]
 8098 |     case 3: r[2]= (uchar) (0x80 | (wc & 0x3f)); wc= wc >> 6; wc |= 0x800;
      |                                                              ~~~^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:8099:5: note: here
 8099 |     case 2: r[1]= (uchar) (0x80 | (wc & 0x3f)); wc= wc >> 6; wc |= 0xc0;
      |     ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:8099:65: warning: this statement may fall through [-Wimplicit-fallthrough=]
 8099 |     case 2: r[1]= (uchar) (0x80 | (wc & 0x3f)); wc= wc >> 6; wc |= 0xc0;
      |                                                              ~~~^~~~~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:8100:5: note: here
 8100 |     case 1: r[0]= (uchar) wc;
      |     ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c: In function ‘my_wc_mb_utf8mb4’:
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:8065:67: warning: this statement may fall through [-Wimplicit-fallthrough=]
 8065 |     case 4: r[3] = (uchar) (0x80 | (wc & 0x3f)); wc = wc >> 6; wc |= 0x10000;
      |                                                                ~~~^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:8066:5: note: here
 8066 |     case 3: r[2] = (uchar) (0x80 | (wc & 0x3f)); wc = wc >> 6; wc |= 0x800;
      |     ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:8066:67: warning: this statement may fall through [-Wimplicit-fallthrough=]
 8066 |     case 3: r[2] = (uchar) (0x80 | (wc & 0x3f)); wc = wc >> 6; wc |= 0x800;
      |                                                                ~~~^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:8067:5: note: here
 8067 |     case 2: r[1] = (uchar) (0x80 | (wc & 0x3f)); wc = wc >> 6; wc |= 0xc0;
      |     ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:8067:67: warning: this statement may fall through [-Wimplicit-fallthrough=]
 8067 |     case 2: r[1] = (uchar) (0x80 | (wc & 0x3f)); wc = wc >> 6; wc |= 0xc0;
      |                                                                ~~~^~~~~~~
/home/mdcallag/git/fbmysql-56.56/strings/ctype-utf8.c:8068:5: note: here
 8068 |     case 1: r[0] = (uchar) wc;
      |     ^~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c: In function ‘count_trailing_zeroes’:
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:266:38: warning: this statement may fall through [-Wimplicit-fallthrough=]
  266 |   case 0: if ((val % 1) != 0) break; ++ret;
      |                                      ^~~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:267:3: note: here
  267 |   case 1: if ((val % 10) != 0) break; ++ret;
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:267:39: warning: this statement may fall through [-Wimplicit-fallthrough=]
  267 |   case 1: if ((val % 10) != 0) break; ++ret;
      |                                       ^~~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:268:3: note: here
  268 |   case 2: if ((val % 100) != 0) break; ++ret;
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:268:40: warning: this statement may fall through [-Wimplicit-fallthrough=]
  268 |   case 2: if ((val % 100) != 0) break; ++ret;
      |                                        ^~~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:269:3: note: here
  269 |   case 3: if ((val % 1000) != 0) break; ++ret;
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:269:41: warning: this statement may fall through [-Wimplicit-fallthrough=]
  269 |   case 3: if ((val % 1000) != 0) break; ++ret;
      |                                         ^~~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:270:3: note: here
  270 |   case 4: if ((val % 10000) != 0) break; ++ret;
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:270:42: warning: this statement may fall through [-Wimplicit-fallthrough=]
  270 |   case 4: if ((val % 10000) != 0) break; ++ret;
      |                                          ^~~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:271:3: note: here
  271 |   case 5: if ((val % 100000) != 0) break; ++ret;
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:271:43: warning: this statement may fall through [-Wimplicit-fallthrough=]
  271 |   case 5: if ((val % 100000) != 0) break; ++ret;
      |                                           ^~~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:272:3: note: here
  272 |   case 6: if ((val % 1000000) != 0) break; ++ret;
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:272:44: warning: this statement may fall through [-Wimplicit-fallthrough=]
  272 |   case 6: if ((val % 1000000) != 0) break; ++ret;
      |                                            ^~~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:273:3: note: here
  273 |   case 7: if ((val % 10000000) != 0) break; ++ret;
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:273:45: warning: this statement may fall through [-Wimplicit-fallthrough=]
  273 |   case 7: if ((val % 10000000) != 0) break; ++ret;
      |                                             ^~~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:274:3: note: here
  274 |   case 8: if ((val % 100000000) != 0) break; ++ret;
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:274:46: warning: this statement may fall through [-Wimplicit-fallthrough=]
  274 |   case 8: if ((val % 100000000) != 0) break; ++ret;
      |                                              ^~~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:275:3: note: here
  275 |   case 9: if ((val % 1000000000) != 0) break; ++ret;
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c: In function ‘count_leading_zeroes’:
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:233:41: warning: this statement may fall through [-Wimplicit-fallthrough=]
  233 |   case 9: if (val >= 1000000000) break; ++ret;
      |                                         ^~~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:234:3: note: here
  234 |   case 8: if (val >= 100000000) break; ++ret;
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:234:40: warning: this statement may fall through [-Wimplicit-fallthrough=]
  234 |   case 8: if (val >= 100000000) break; ++ret;
      |                                        ^~~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:235:3: note: here
  235 |   case 7: if (val >= 10000000) break; ++ret;
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:235:39: warning: this statement may fall through [-Wimplicit-fallthrough=]
  235 |   case 7: if (val >= 10000000) break; ++ret;
      |                                       ^~~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:236:3: note: here
  236 |   case 6: if (val >= 1000000) break; ++ret;
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:236:38: warning: this statement may fall through [-Wimplicit-fallthrough=]
  236 |   case 6: if (val >= 1000000) break; ++ret;
      |                                      ^~~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:237:3: note: here
  237 |   case 5: if (val >= 100000) break; ++ret;
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:237:37: warning: this statement may fall through [-Wimplicit-fallthrough=]
  237 |   case 5: if (val >= 100000) break; ++ret;
      |                                     ^~~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:238:3: note: here
  238 |   case 4: if (val >= 10000) break; ++ret;
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:238:36: warning: this statement may fall through [-Wimplicit-fallthrough=]
  238 |   case 4: if (val >= 10000) break; ++ret;
      |                                    ^~~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:239:3: note: here
  239 |   case 3: if (val >= 1000) break; ++ret;
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:239:35: warning: this statement may fall through [-Wimplicit-fallthrough=]
  239 |   case 3: if (val >= 1000) break; ++ret;
      |                                   ^~~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:240:3: note: here
  240 |   case 2: if (val >= 100) break; ++ret;
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:240:34: warning: this statement may fall through [-Wimplicit-fallthrough=]
  240 |   case 2: if (val >= 100) break; ++ret;
      |                                  ^~~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:241:3: note: here
  241 |   case 1: if (val >= 10) break; ++ret;
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:241:33: warning: this statement may fall through [-Wimplicit-fallthrough=]
  241 |   case 1: if (val >= 10) break; ++ret;
      |                                 ^~~~~
/home/mdcallag/git/fbmysql-56.56/strings/decimal.c:242:3: note: here
  242 |   case 0: if (val >= 1) break; ++ret;
      |   ^~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/strings/dtoa.c: In function ‘dtoa’:
/home/mdcallag/git/fbmysql-56.56/strings/dtoa.c:2370:14: warning: this statement may fall through [-Wimplicit-fallthrough=]
 2370 |     leftright= 0;
      |     ~~~~~~~~~^~~
/home/mdcallag/git/fbmysql-56.56/strings/dtoa.c:2372:3: note: here
 2372 |   case 4:
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/dtoa.c:2378:14: warning: this statement may fall through [-Wimplicit-fallthrough=]
 2378 |     leftright= 0;
      |     ~~~~~~~~~^~~
/home/mdcallag/git/fbmysql-56.56/strings/dtoa.c:2380:3: note: here
 2380 |   case 5:
      |   ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/dtoa.c: In function ‘my_strtod_int’:
/home/mdcallag/git/fbmysql-56.56/strings/dtoa.c:1380:11: warning: this statement may fall through [-Wimplicit-fallthrough=]
 1380 |       sign= 1;
      |       ~~~~^~~
/home/mdcallag/git/fbmysql-56.56/strings/dtoa.c:1382:5: note: here
 1382 |     case '+':
      |     ^~~~
/home/mdcallag/git/fbmysql-56.56/strings/dtoa.c:1477:14: warning: this statement may fall through [-Wimplicit-fallthrough=]
 1477 |         esign= 1;
      |         ~~~~~^~~
/home/mdcallag/git/fbmysql-56.56/strings/dtoa.c:1478:7: note: here
 1478 |       case '+':
      |       ^~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy: warning: fix-its can be applied.  Rerun with option '--update'. [-Wother]
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/mysys/lf_alloc-pin.c: In function ‘_lf_pinbox_put_pins’:
/home/mdcallag/git/fbmysql-56.56/mysys/lf_alloc-pin.c:221:7: warning: ‘pthread_yield’ is deprecated: pthread_yield is deprecated, use sched_yield instead [-Wdeprecated-declarations]
  221 |       pthread_yield();
      |       ^~~~~~~~~~~~~
In file included from /usr/include/features.h:486,
                 from /usr/include/pthread.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/include/my_global.h:266,
                 from /home/mdcallag/git/fbmysql-56.56/include/lf.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/mysys/lf_alloc-pin.c:99:
/usr/include/pthread.h:479:12: note: declared here
  479 | extern int __REDIRECT_NTH (pthread_yield, (void), sched_yield)
      |            ^~~~~~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/mysys/my_rdtsc.c: In function ‘my_timer_milliseconds’:
/home/mdcallag/git/fbmysql-56.56/mysys/my_rdtsc.c:332:3: warning: ‘ftime’ is deprecated: Use gettimeofday or clock_gettime instead [-Wdeprecated-declarations]
  332 |   ftime(&ft);
      |   ^~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/mysys/my_rdtsc.c:82:
/usr/include/x86_64-linux-gnu/sys/timeb.h:29:12: note: declared here
   29 | extern int ftime (struct timeb *__timebuf)
      |            ^~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/extra/replace.c: In function ‘static_get_options’:
/home/mdcallag/git/fbmysql-56.56/extra/replace.c:175:16: warning: this statement may fall through [-Wimplicit-fallthrough=]
  175 |         version=1;
      |         ~~~~~~~^~
/home/mdcallag/git/fbmysql-56.56/extra/replace.c:176:7: note: here
  176 |       case 'I':
      |       ^~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/storage/heap/hp_create.c: In function ‘heap_create’:
/home/mdcallag/git/fbmysql-56.56/storage/heap/hp_create.c:91:31: warning: this statement may fall through [-Wimplicit-fallthrough=]
   91 |           keyinfo->seg[j].type= HA_KEYTYPE_VARTEXT1;
      |           ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/heap/hp_create.c:93:9: note: here
   93 |         case HA_KEYTYPE_VARTEXT1:
      |         ^~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/storage/heap/hp_extra.c: In function ‘heap_extra’:
/home/mdcallag/git/fbmysql-56.56/storage/heap/hp_extra.c:36:5: warning: this statement may fall through [-Wimplicit-fallthrough=]
   36 |     heap_reset(info);
      |     ^~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/heap/hp_extra.c:37:3: note: here
   37 |   case HA_EXTRA_NO_READCHECK:
      |   ^~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/csv/ha_tina.cc:46:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/csv/ha_tina.cc:46:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/storage/blackhole/ha_blackhole.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/storage/blackhole/ha_blackhole.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/federated/ha_federated.cc:376:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/federated/ha_federated.cc:376:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/csv/ha_tina.cc:46:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/storage/blackhole/ha_blackhole.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/federated/ha_federated.cc:376:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/csv/ha_tina.cc:46:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/csv/ha_tina.cc:46:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/csv/ha_tina.cc:46:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/storage/blackhole/ha_blackhole.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/storage/blackhole/ha_blackhole.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/storage/blackhole/ha_blackhole.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/csv/ha_tina.cc:46:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/storage/blackhole/ha_blackhole.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/federated/ha_federated.cc:376:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/federated/ha_federated.cc:376:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/federated/ha_federated.cc:376:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/federated/ha_federated.cc:376:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/archive/ha_archive.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/archive/ha_archive.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/archive/ha_archive.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/archive/ha_archive.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/archive/ha_archive.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/archive/ha_archive.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/archive/ha_archive.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/heap/ha_heap.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/heap/ha_heap.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/heap/ha_heap.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/heap/ha_heap.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/heap/ha_heap.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/heap/ha_heap.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/heap/ha_heap.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/heap/ha_heap.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/heap/ha_heap.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/heap/ha_heap.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/heap/ha_heap.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/heap/ha_heap.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/heap/ha_heap.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/heap/ha_heap.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/storage/blackhole/ha_blackhole.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:49,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/federated/ha_federated.cc:376:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/blackhole/ha_blackhole.cc: In member function ‘virtual int ha_blackhole::info(uint)’:
/home/mdcallag/git/fbmysql-56.56/storage/blackhole/ha_blackhole.cc:190:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class ha_statistics’; use assignment or value-initialization instead [-Wclass-memaccess]
  190 |   memset(&stats, 0, sizeof(stats));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/storage/blackhole/ha_blackhole.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/handler.h:1864:7: note: ‘class ha_statistics’ declared here
 1864 | class ha_statistics
      |       ^~~~~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/storage/federated/ha_federated.cc:378:
/home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.h: In constructor ‘field_str::field_str(Item*, select_analyse*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.h:119:20: warning: cast between incompatible function types from ‘void (*)(String*)’ to ‘tree_element_free’ {aka ‘void (*)(void*, TREE_FREE, const void*)’} [-Wcast-function-type]
  119 |                 0, (tree_element_free) free_string, NULL); };
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/storage/heap/ha_heap.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/heap/ha_heap.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/storage/myisammrg/ha_myisammrg.cc:90:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/storage/myisammrg/ha_myisammrg.cc:90:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/storage/myisammrg/ha_myisammrg.cc:90:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/storage/myisammrg/ha_myisammrg.cc:90:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/storage/myisammrg/ha_myisammrg.cc:90:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/storage/myisammrg/ha_myisammrg.cc:90:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/storage/myisammrg/ha_myisammrg.cc:90:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/myisam/ha_myisam.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/storage/myisam/ha_myisam.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/storage/myisam/ha_myisam.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/storage/myisam/ha_myisam.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/myisam/ha_myisam.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/myisam/ha_myisam.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/storage/myisam/ha_myisam.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/myisam/ha_myisam.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/myisam/ha_myisam.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/storage/myisam/ha_myisam.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/myisam/ha_myisam.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/storage/myisammrg/ha_myisammrg.cc:101:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/storage/myisam/ha_myisam.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/connection_control/security_context_wrapper.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/connection_control/security_context_wrapper.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/connection_control/security_context_wrapper.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/connection_control/security_context_wrapper.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/connection_control/security_context_wrapper.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/connection_control/security_context_wrapper.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/connection_control/security_context_wrapper.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/plugin/connection_control/security_context_wrapper.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/connection_control/connection_delay.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/connection_control/connection_delay.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/connection_control/connection_delay.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/connection_control/connection_delay.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/connection_control/connection_delay.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/connection_control/connection_delay.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/connection_control/connection_delay.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/plugin/connection_control/connection_delay.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/storage/myisam/mi_extra.c: In function ‘mi_extra’:
/home/mdcallag/git/fbmysql-56.56/storage/myisam/mi_extra.c:149:8: warning: this statement may fall through [-Wimplicit-fallthrough=]
  149 |     if (info->s->data_file_type != DYNAMIC_RECORD)
      |        ^
/home/mdcallag/git/fbmysql-56.56/storage/myisam/mi_extra.c:152:3: note: here
  152 |   case HA_EXTRA_NO_CACHE:
      |   ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master_plugin.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master_plugin.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master_plugin.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master_plugin.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master_plugin.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master_plugin.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master_plugin.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.cc: In member function ‘bool ReplSemiSyncMaster::update_whitelist(std::string&)’:
/home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.cc:703:19: warning: loop variable ‘uuid’ creates a copy from type ‘const std::__cxx11::basic_string<char>’ [-Wrange-loop-construct]
  703 |   for (const auto uuid : local_whitelist_set)
      |                   ^~~~
/home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master.cc:703:19: note: use reference type to prevent copying
  703 |   for (const auto uuid : local_whitelist_set)
      |                   ^~~~
      |                   &
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_master_plugin.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/storage/myisam/mi_panic.c: In function ‘mi_panic’:
/home/mdcallag/git/fbmysql-56.56/storage/myisam/mi_panic.c:63:10: warning: this statement may fall through [-Wimplicit-fallthrough=]
   63 |       if (info->lock_type != F_UNLCK && ! info->was_locked)
      |          ^
/home/mdcallag/git/fbmysql-56.56/storage/myisam/mi_panic.c:77:5: note: here
   77 |     case HA_PANIC_READ:                 /* Restore to before WRITE */
      |     ^~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave_plugin.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave_plugin.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave_plugin.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave_plugin.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave_plugin.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave_plugin.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/plugin/semisync/semisync_slave_plugin.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/storage/myisam/mi_write.c: In function ‘mi_init_bulk_insert’:
/home/mdcallag/git/fbmysql-56.56/storage/myisam/mi_write.c:1012:17: warning: cast between incompatible function types from ‘int (*)(uchar *, TREE_FREE,  bulk_insert_param *)’ {aka ‘int (*)(unsigned char *, TREE_FREE,  bulk_insert_param *)’} to ‘void (*)(void *, TREE_FREE,  const void *)’ [-Wcast-function-type]
 1012 |                 (tree_element_free) keys_free, (void *)params++);
      |                 ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/sql-common/client.c: In function ‘mysql_read_default_options’:
/home/mdcallag/git/fbmysql-56.56/sql-common/client.c:1894:29: warning: this statement may fall through [-Wimplicit-fallthrough=]
 1894 |           options->protocol = MYSQL_PROTOCOL_PIPE;
      |           ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql-common/client.c:1895:9: note: here
 1895 |         case OPT_connect_timeout:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/sql-common/client.c: In function ‘mysql_options’:
/home/mdcallag/git/fbmysql-56.56/sql-common/client.c:7169:36: warning: this statement may fall through [-Wimplicit-fallthrough=]
 7169 |     mysql->net.receive_buffer_size = *(uint*) arg;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql-common/client.c:7171:3: note: here
 7171 |   default:
      |   ^~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/ha_partition.cc:53:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/ha_partition.cc:53:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/ha_partition.cc:53:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/ha_partition.cc:53:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/ha_partition.cc:53:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/ha_partition.cc:53:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/ha_partition.cc:53:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/ha_partition.cc:53:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/ha_partition.cc: In member function ‘virtual void ha_partition::update_create_info(HA_CREATE_INFO*)’:
/home/mdcallag/git/fbmysql-56.56/sql/ha_partition.cc:2266:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 2266 |   memset(&dummy_info, 0, sizeof(dummy_info));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/ha_partition.cc:53:
/home/mdcallag/git/fbmysql-56.56/sql/handler.h:1204:16: note: ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} declared here
 1204 | typedef struct st_ha_create_information : public st_ha_create_information_base
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_misc.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_misc.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_misc.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_misc.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_misc.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_misc.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_misc.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/storage/innobase/buf/buf0dump.cc: In function ‘void buf_dump(ulint)’:
/home/mdcallag/git/fbmysql-56.56/storage/innobase/buf/buf0dump.cc:216:24: warning: ‘.incomplete’ directive output may be truncated writing 11 bytes into a region of size between 1 and 4000 [-Wformat-truncation=]
  216 |                     "%s.incomplete", full_filename);
      |                        ^~~~~~~~~~~
In file included from /usr/include/stdio.h:894,
                 from /home/mdcallag/git/fbmysql-56.56/include/my_global.h:309,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/univ.i:95,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/buf/buf0dump.cc:26:
/usr/include/x86_64-linux-gnu/bits/stdio2.h:71:35: note: ‘__builtin___snprintf_chk’ output between 12 and 4011 bytes into a destination of size 4000
   71 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
      |          ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   72 |                                    __glibc_objsize (__s), __fmt,
      |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   73 |                                    __va_arg_pack ());
      |                                    ~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_misc.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_state.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_state.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_state.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_state.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_state.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_state.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_state.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_state.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_cache.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_cache.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_cache.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_cache.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_cache.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_cache.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_cache.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_cache.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_tblmap.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_tblmap.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_execution.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_execution.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_execution.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_execution.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_execution.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_execution.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_execution.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_execution.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_mutex_cond_array.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_mutex_cond_array.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_mutex_cond_array.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_mutex_cond_array.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_mutex_cond_array.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_mutex_cond_array.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_mutex_cond_array.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_master.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_master.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_master.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_master.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_master.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_master.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_master.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_mutex_cond_array.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_master.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event_old.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event_old.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event_old.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event_old.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event_old.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event_old.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event_old.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /usr/include/boost/bind.hpp:30,
                 from /usr/include/boost/property_tree/json_parser/detail/parser.hpp:7,
                 from /usr/include/boost/property_tree/json_parser/detail/read.hpp:13,
                 from /usr/include/boost/property_tree/json_parser.hpp:16,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.cc:71:
/usr/include/boost/bind.hpp: At global scope:
/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
   36 | BOOST_PRAGMA_MESSAGE(
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event_old.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/log_event.cc: In member function ‘bool Log_event::schedule_dep(Relay_log_info*)’:
/home/mdcallag/git/fbmysql-56.56/sql/log_event.cc:3291:40: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
 3291 |       const auto id= tbe->get_table_id();
      |                                        ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/log_event.cc: In constructor ‘Rows_log_event::Rows_log_event(THD*, TABLE*, const Table_id&, const MY_BITMAP*, bool, Log_event_type, const uchar*)’:
/home/mdcallag/git/fbmysql-56.56/sql/log_event.cc:10290:5: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
10290 |     m_table_id(tid),
      |     ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/log_event.cc: In constructor ‘Table_map_log_event::Table_map_log_event(THD*, TABLE*, const Table_id&, bool)’:
/home/mdcallag/git/fbmysql-56.56/sql/log_event.cc:13828:5: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
13828 |     m_table_id(tid),
      |     ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /usr/include/string.h:535,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/data0type.ic:26,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/data0type.h:541,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/dict0mem.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/dict0dict.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/dict/dict0dict.cc:27:
In function ‘char* strncpy(char*, const char*, size_t)’,
    inlined from ‘dberr_t dict_table_rename_in_cache(dict_table_t*, const char*, ulint)’ at /home/mdcallag/git/fbmysql-56.56/storage/innobase/dict/dict0dict.cc:1854:11:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ output may be truncated copying 320 bytes from a string of length 654 [-Wstringop-truncation]
   95 |   return __builtin___strncpy_chk (__dest, __src, __len,
      |          ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
   96 |                                   __glibc_objsize (__dest));
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~
In function ‘char* strncpy(char*, const char*, size_t)’,
    inlined from ‘dberr_t dict_table_rename_in_cache(dict_table_t*, const char*, ulint)’ at /home/mdcallag/git/fbmysql-56.56/storage/innobase/dict/dict0dict.cc:1876:13:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ output may be truncated copying 320 bytes from a string of length 654 [-Wstringop-truncation]
   95 |   return __builtin___strncpy_chk (__dest, __src, __len,
      |          ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
   96 |                                   __glibc_objsize (__dest));
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~
In function ‘char* strncpy(char*, const char*, size_t)’,
    inlined from ‘dberr_t dict_table_rename_in_cache(dict_table_t*, const char*, ulint)’ at /home/mdcallag/git/fbmysql-56.56/storage/innobase/dict/dict0dict.cc:1915:12:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ specified bound 320 equals destination size [-Wstringop-truncation]
   95 |   return __builtin___strncpy_chk (__dest, __src, __len,
      |          ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
   96 |                                   __glibc_objsize (__dest));
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~
In function ‘char* strncpy(char*, const char*, size_t)’,
    inlined from ‘dberr_t dict_table_rename_in_cache(dict_table_t*, const char*, ulint)’ at /home/mdcallag/git/fbmysql-56.56/storage/innobase/dict/dict0dict.cc:1927:13:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ specified bound 320 equals destination size [-Wstringop-truncation]
   95 |   return __builtin___strncpy_chk (__dest, __src, __len,
      |          ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
   96 |                                   __glibc_objsize (__dest));
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~
In function ‘char* strncpy(char*, const char*, size_t)’,
    inlined from ‘dberr_t dict_create_add_foreign_id(ulint*, const char*, dict_foreign_t*)’ at /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/dict0crea.ic:71:11,
    inlined from ‘dberr_t dict_create_foreign_constraints_low(trx_t*, mem_heap_t*, charset_info_st*, const char*, const char*, ulint)’ at /home/mdcallag/git/fbmysql-56.56/storage/innobase/dict/dict0dict.cc:4603:37:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ specified bound 340 equals destination size [-Wstringop-truncation]
   95 |   return __builtin___strncpy_chk (__dest, __src, __len,
      |          ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
   96 |                                   __glibc_objsize (__dest));
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~
In function ‘char* strncpy(char*, const char*, size_t)’,
    inlined from ‘dberr_t dict_create_add_foreign_id(ulint*, const char*, dict_foreign_t*)’ at /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/dict0crea.ic:80:12,
    inlined from ‘dberr_t dict_create_foreign_constraints_low(trx_t*, mem_heap_t*, charset_info_st*, const char*, const char*, ulint)’ at /home/mdcallag/git/fbmysql-56.56/storage/innobase/dict/dict0dict.cc:4603:37:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ specified bound 340 equals destination size [-Wstringop-truncation]
   95 |   return __builtin___strncpy_chk (__dest, __src, __len,
      |          ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
   96 |                                   __glibc_objsize (__dest));
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:49,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /usr/include/boost/bind.hpp:30,
                 from /usr/include/boost/property_tree/json_parser/detail/parser.hpp:7,
                 from /usr/include/boost/property_tree/json_parser/detail/read.hpp:13,
                 from /usr/include/boost/property_tree/json_parser.hpp:16,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.cc:46:
/usr/include/boost/bind.hpp: At global scope:
/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
   36 | BOOST_PRAGMA_MESSAGE(
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_reporting.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_reporting.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_reporting.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_reporting.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_reporting.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_reporting.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_reporting.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:49,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_reporting.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_binlog.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_binlog.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_binlog.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_binlog.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_binlog.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_binlog.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_binlog.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_binlog.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/fil/fil0fil.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/fil/fil0fil.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/fil/fil0fil.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/fil/fil0fil.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/fil/fil0fil.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/fil/fil0fil.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/fil/fil0fil.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_filter.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_filter.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_filter.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_filter.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_filter.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_filter.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_filter.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record_old.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record_old.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record_old.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record_old.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record_old.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record_old.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record_old.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record_old.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_utility.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_utility.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_utility.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_utility.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_utility.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_utility.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_utility.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_utility.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_utility.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_utility.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_utility.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_utility.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_injector.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_injector.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_injector.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_injector.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_injector.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_injector.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_injector.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_file.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_file.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_file.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/dynamic_ids.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_handler.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_file.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_file.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_file.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/dynamic_ids.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_handler.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_file.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_file.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_file.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_injector.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event_wrapper.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event_wrapper.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event_wrapper.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event_wrapper.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event_wrapper.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event_wrapper.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event_wrapper.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/dynamic_ids.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_handler.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/dynamic_ids.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_handler.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event_wrapper.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/filesort_utils.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/filesort_utils.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_factory.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_factory.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_factory.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_factory.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_factory.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_factory.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_factory.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:49,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_factory.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mdl.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mdl.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mdl.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mdl.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mdl.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mdl.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mdl.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info_table_access.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/mdl.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave_commit_order_manager.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave_commit_order_manager.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave_commit_order_manager.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave_commit_order_manager.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave_commit_order_manager.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave_commit_order_manager.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave_commit_order_manager.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave_commit_order_manager.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave_commit_order_manager.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave_commit_order_manager.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave_commit_order_manager.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave_commit_order_manager.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave_commit_order_manager.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave_commit_order_manager.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_list.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_list.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_list.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_list.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_list.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_list.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_list.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave_commit_order_manager.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave_commit_order_manager.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/thr_malloc.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/thr_malloc.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/thr_malloc.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/thr_malloc.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/thr_malloc.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/thr_malloc.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/thr_malloc.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
fts0pars.y: In function ‘fts_lexer_t* fts_lexer_create(ulint, const unsigned char*, ulint)’:
fts0pars.y:244:24: warning: cast between incompatible function types from ‘int (*)(YYSTYPE*, yyscan_t)’ {aka ‘int (*)(YYSTYPE*, void*)’} to ‘fts_scan’ {aka ‘int (*)()’} [-Wcast-function-type]
fts0pars.y:253:24: warning: cast between incompatible function types from ‘int (*)(YYSTYPE*, yyscan_t)’ {aka ‘int (*)(YYSTYPE*, void*)’} to ‘fts_scan’ {aka ‘int (*)()’} [-Wcast-function-type]
fts0pars.y: In function ‘void fts_lexer_free(fts_lexer_t*)’:
fts0pars.y:267:28: warning: cast between incompatible function types from ‘int (*)(YYSTYPE*, yyscan_t)’ {aka ‘int (*)(YYSTYPE*, void*)’} to ‘fts_scan’ {aka ‘int (*)()’} [-Wcast-function-type]
fts0pars.y: In function ‘int fts_lexer(YYSTYPE*, fts_lexer_t*)’:
fts0pars.y:287:13: warning: cast between incompatible function types from ‘fts_scanner’ {aka ‘int (*)()’} to ‘fts_scanner_alt’ {aka ‘int (*)(YYSTYPE*, void*)’} [-Wcast-function-type]
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_info.h:12,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_info.cc:2:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_info.h:12,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_info.cc:2:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_info.h:12,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_info.cc:2:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_info.h:10,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_info.cc:2:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_info.h:12,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_info.cc:2:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_info.h:10,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_info.cc:2:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_info.h:12,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_info.cc:2:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/dependency_slave_worker.h:6,
                 from /home/mdcallag/git/fbmysql-56.56/sql/dependency_slave_worker.cc:3:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/dependency_slave_worker.h:6,
                 from /home/mdcallag/git/fbmysql-56.56/sql/dependency_slave_worker.cc:3:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/dependency_slave_worker.h:6,
                 from /home/mdcallag/git/fbmysql-56.56/sql/dependency_slave_worker.cc:3:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/dependency_slave_worker.h:6,
                 from /home/mdcallag/git/fbmysql-56.56/sql/dependency_slave_worker.cc:3:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/dependency_slave_worker.h:6,
                 from /home/mdcallag/git/fbmysql-56.56/sql/dependency_slave_worker.cc:3:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/dependency_slave_worker.h:6,
                 from /home/mdcallag/git/fbmysql-56.56/sql/dependency_slave_worker.cc:3:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/dependency_slave_worker.h:6,
                 from /home/mdcallag/git/fbmysql-56.56/sql/dependency_slave_worker.cc:3:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/thr_malloc.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_info.h:12,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid_info.cc:2:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli_pdb.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/dependency_slave_worker.h:6,
                 from /home/mdcallag/git/fbmysql-56.56/sql/dependency_slave_worker.cc:3:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/storage/myisam/myisamlog.c: In function ‘examine_log’:
/home/mdcallag/git/fbmysql-56.56/storage/myisam/myisamlog.c:332:13: warning: cast between incompatible function types from ‘void (*)(struct file_info *)’ to ‘void (*)(void *, TREE_FREE,  const void *)’ [-Wcast-function-type]
  332 |             (tree_element_free) file_info_free, NULL);
      |             ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/usr/bin/ar: creating /home/mdcallag/git/fbmysql-56.56/build.rel_o2nofp/libmysql/libfbmysqlclient.a
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/ha_innodb.cc:41:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/ha_innodb.cc:41:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/handler0alter.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/handler0alter.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/ha_innodb.cc:41:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/handler0alter.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/handler0alter.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/handler0alter.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/handler0alter.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/handler0alter.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/ha_innodb.cc:41:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/ha_innodb.cc:41:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/ha_innodb.cc:41:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/ha_innodb.cc:41:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/ha_innodb.cc:41:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/i_s.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/i_s.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/i_s.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/i_s.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/i_s.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/i_s.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/i_s.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /usr/include/string.h:535,
                 from /home/mdcallag/git/fbmysql-56.56/include/m_string.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/handler0alter.cc:24:
In function ‘char* strncpy(char*, const char*, size_t)’,
    inlined from ‘dberr_t dict_create_add_foreign_id(ulint*, const char*, dict_foreign_t*)’ at /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/dict0crea.ic:71:11:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ specified bound 340 equals destination size [-Wstringop-truncation]
   95 |   return __builtin___strncpy_chk (__dest, __src, __len,
      |          ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
   96 |                                   __glibc_objsize (__dest));
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~
In function ‘char* strncpy(char*, const char*, size_t)’,
    inlined from ‘dberr_t dict_create_add_foreign_id(ulint*, const char*, dict_foreign_t*)’ at /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/dict0crea.ic:80:12:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ specified bound 340 equals destination size [-Wstringop-truncation]
   95 |   return __builtin___strncpy_chk (__dest, __src, __len,
      |          ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
   96 |                                   __glibc_objsize (__dest));
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/i_s.cc: In function ‘int i_s_cmp_fill_low(THD*, TABLE_LIST*, Item*, ulint)’:
/home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/i_s.cc:1882:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct page_zip_stat_t’; use assignment or value-initialization instead [-Wclass-memaccess]
 1882 |                         memset(zip_stat, 0, sizeof *zip_stat);
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/btr0types.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/dict0mem.h:36,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/dict0dict.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/btr0pcur.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/handler/i_s.cc:38:
/home/mdcallag/git/fbmysql-56.56/storage/innobase/include/page0types.h:89:8: note: ‘struct page_zip_stat_t’ declared here
   89 | struct page_zip_stat_t {
      |        ^~~~~~~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/client/mysqldump.c: In function ‘print_xml_comment’:
/home/mdcallag/git/fbmysql-56.56/client/mysqldump.c:2329:10: warning: this statement may fall through [-Wimplicit-fallthrough=]
 2329 |       if (*(comment_string + 1) == '-')         /* Only one hyphen allowed. */
      |          ^
/home/mdcallag/git/fbmysql-56.56/client/mysqldump.c:2331:5: note: here
 2331 |     default:
      |     ^~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /usr/include/string.h:535,
                 from /home/mdcallag/git/fbmysql-56.56/include/m_string.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/client/client_priv.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/client/mysql_upgrade.c:18:
In function ‘strncpy’,
    inlined from ‘main’ at /home/mdcallag/git/fbmysql-56.56/client/mysql_upgrade.c:977:5:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:95:10: warning: ‘__builtin_strncpy’ specified bound 512 equals destination size [-Wstringop-truncation]
   95 |   return __builtin___strncpy_chk (__dest, __src, __len,
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   96 |                                   __glibc_objsize (__dest));
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/client/mysql_plugin.c: In function ‘get_default_values’:
/home/mdcallag/git/fbmysql-56.56/client/mysql_plugin.c:352:17: warning: ‘ mysqld > ’ directive output may be truncated writing 10 bytes into a region of size between 1 and 512 [-Wformat-truncation=]
  352 |              "%s mysqld > %s", tool_path, defaults_file);
      |                 ^~~~~~~~~~
In file included from /usr/include/stdio.h:894,
                 from /home/mdcallag/git/fbmysql-56.56/include/my_global.h:309,
                 from /home/mdcallag/git/fbmysql-56.56/include/m_string.h:25,
                 from /home/mdcallag/git/fbmysql-56.56/client/mysql_plugin.c:18:
/usr/include/x86_64-linux-gnu/bits/stdio2.h:71:10: note: ‘__builtin___snprintf_chk’ output between 11 and 1033 bytes into a destination of size 512
   71 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   72 |                                    __glibc_objsize (__s), __fmt,
      |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   73 |                                    __va_arg_pack ());
      |                                    ~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/client/mysql_plugin.c: In function ‘main’:
/home/mdcallag/git/fbmysql-56.56/client/mysql_plugin.c:1233:15: warning: ‘ --no-defaults --bootstrap -...’ directive output may be truncated writing 37 bytes into a region of size between 1 and 512 [-Wformat-truncation=]
 1233 |            "%s --no-defaults --bootstrap --datadir=%s --basedir=%s"
      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/stdio.h:894,
                 from /home/mdcallag/git/fbmysql-56.56/include/my_global.h:309,
                 from /home/mdcallag/git/fbmysql-56.56/include/m_string.h:25,
                 from /home/mdcallag/git/fbmysql-56.56/client/mysql_plugin.c:18:
/usr/include/x86_64-linux-gnu/bits/stdio2.h:71:10: note: ‘__builtin___snprintf_chk’ output 52 or more bytes (assuming 1074) into a destination of size 512
   71 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   72 |                                    __glibc_objsize (__s), __fmt,
      |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   73 |                                    __va_arg_pack ());
      |                                    ~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/client/mysqlbinlog.cc:54:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/rem/rem0rec.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/rem/rem0rec.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/rem/rem0rec.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/rem/rem0rec.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/rem/rem0rec.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/rem/rem0rec.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/rem/rem0rec.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /usr/include/boost/bind.hpp:30,
                 from /usr/include/boost/property_tree/json_parser/detail/parser.hpp:7,
                 from /usr/include/boost/property_tree/json_parser/detail/read.hpp:13,
                 from /usr/include/boost/property_tree/json_parser.hpp:16,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.cc:71,
                 from /home/mdcallag/git/fbmysql-56.56/client/mysqlbinlog.cc:4452:
/usr/include/boost/bind.hpp: At global scope:
/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
   36 | BOOST_PRAGMA_MESSAGE(
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/storage/innobase/rem/rem0rec.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/row/row0import.cc: In function ‘dberr_t row_import_for_mysql(dict_table_t*, row_prebuilt_t*)’:
/home/mdcallag/git/fbmysql-56.56/storage/innobase/row/row0import.cc:3531:15: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct row_import’; use assignment or value-initialization instead [-Wclass-memaccess]
 3531 |         memset(&cfg, 0x0, sizeof(cfg));
      |         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/row/row0import.cc:104:8: note: ‘struct row_import’ declared here
  104 | struct row_import {
      |        ^~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /usr/include/string.h:535,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/data0type.ic:26,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/data0type.h:541,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/data0data.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/row0mysql.h:31,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/row/row0mysql.cc:27:
In function ‘char* strncpy(char*, const char*, size_t)’,
    inlined from ‘dberr_t row_rename_table_for_mysql(const char*, const char*, trx_t*, bool)’ at /home/mdcallag/git/fbmysql-56.56/storage/innobase/row/row0mysql.cc:5011:10:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ specified bound 320 equals destination size [-Wstringop-truncation]
   95 |   return __builtin___strncpy_chk (__dest, __src, __len,
      |          ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
   96 |                                   __glibc_objsize (__dest));
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~
In function ‘char* strncpy(char*, const char*, size_t)’,
    inlined from ‘dberr_t row_rename_table_for_mysql(const char*, const char*, trx_t*, bool)’ at /home/mdcallag/git/fbmysql-56.56/storage/innobase/row/row0mysql.cc:5021:11:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ specified bound 320 equals destination size [-Wstringop-truncation]
   95 |   return __builtin___strncpy_chk (__dest, __src, __len,
      |          ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
   96 |                                   __glibc_objsize (__dest));
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~
In function ‘char* strncpy(char*, const char*, size_t)’,
    inlined from ‘dberr_t row_rename_table_for_mysql(const char*, const char*, trx_t*, bool)’ at /home/mdcallag/git/fbmysql-56.56/storage/innobase/row/row0mysql.cc:5031:10:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ specified bound 320 equals destination size [-Wstringop-truncation]
   95 |   return __builtin___strncpy_chk (__dest, __src, __len,
      |          ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
   96 |                                   __glibc_objsize (__dest));
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~
In function ‘char* strncpy(char*, const char*, size_t)’,
    inlined from ‘dberr_t row_rename_table_for_mysql(const char*, const char*, trx_t*, bool)’ at /home/mdcallag/git/fbmysql-56.56/storage/innobase/row/row0mysql.cc:5041:11:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ specified bound 320 equals destination size [-Wstringop-truncation]
   95 |   return __builtin___strncpy_chk (__dest, __src, __len,
      |          ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
   96 |                                   __glibc_objsize (__dest));
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/string.h:535,
                 from /home/mdcallag/git/fbmysql-56.56/include/m_string.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/include/my_bitmap.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_bitmap.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/srv/srv0start.cc:41:
In function ‘char* strncpy(char*, const char*, size_t)’,
    inlined from ‘void srv_get_meta_data_filename(dict_table_t*, char*, ulint)’ at /home/mdcallag/git/fbmysql-56.56/storage/innobase/srv/srv0start.cc:3399:10:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ specified bound depends on the length of the source argument [-Wstringop-truncation]
   95 |   return __builtin___strncpy_chk (__dest, __src, __len,
      |          ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
   96 |                                   __glibc_objsize (__dest));
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/ut0mem.h:258,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/mach0data.ic:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/mach0data.h:415,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/data0type.ic:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/data0type.h:541,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/data0data.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/que0types.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/include/pars0pars.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/storage/innobase/srv/srv0start.cc:42:
/home/mdcallag/git/fbmysql-56.56/storage/innobase/include/ut0mem.ic: In function ‘void srv_get_meta_data_filename(dict_table_t*, char*, ulint)’:
/home/mdcallag/git/fbmysql-56.56/storage/innobase/include/ut0mem.ic:86:22: note: length computed here
   86 |         return(strlen(str));
      |               ~~~~~~~^~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/infback.c: In function ‘innobase_z_inflateBack’:
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/infback.c:471:25: warning: this statement may fall through [-Wimplicit-fallthrough=]
  471 |             state->mode = LEN;
      |             ~~~~~~~~~~~~^~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/infback.c:473:9: note: here
  473 |         case LEN:
      |         ^~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c: In function ‘innobase_z_inflate’:
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:704:25: warning: this statement may fall through [-Wimplicit-fallthrough=]
  704 |             state->mode = EXLEN;
      |             ~~~~~~~~~~~~^~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:705:9: note: here
  705 |         case EXLEN:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:716:25: warning: this statement may fall through [-Wimplicit-fallthrough=]
  716 |             state->mode = EXTRA;
      |             ~~~~~~~~~~~~^~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:717:9: note: here
  717 |         case EXTRA:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:738:25: warning: this statement may fall through [-Wimplicit-fallthrough=]
  738 |             state->mode = NAME;
      |             ~~~~~~~~~~~~^~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:739:9: note: here
  739 |         case NAME:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:759:25: warning: this statement may fall through [-Wimplicit-fallthrough=]
  759 |             state->mode = COMMENT;
      |             ~~~~~~~~~~~~^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:760:9: note: here
  760 |         case COMMENT:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:779:25: warning: this statement may fall through [-Wimplicit-fallthrough=]
  779 |             state->mode = HCRC;
      |             ~~~~~~~~~~~~^~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:780:9: note: here
  780 |         case HCRC:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:802:25: warning: this statement may fall through [-Wimplicit-fallthrough=]
  802 |             state->mode = DICT;
      |             ~~~~~~~~~~~~^~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:803:9: note: here
  803 |         case DICT:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:809:25: warning: this statement may fall through [-Wimplicit-fallthrough=]
  809 |             state->mode = TYPE;
      |             ~~~~~~~~~~~~^~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:810:9: note: here
  810 |         case TYPE:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:811:16: warning: this statement may fall through [-Wimplicit-fallthrough=]
  811 |             if (flush == Z_BLOCK || flush == Z_TREES) goto inf_leave;
      |                ^
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:812:9: note: here
  812 |         case TYPEDO:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:861:16: warning: this statement may fall through [-Wimplicit-fallthrough=]
  861 |             if (flush == Z_TREES) goto inf_leave;
      |                ^
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:862:9: note: here
  862 |         case COPY_:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:863:25: warning: this statement may fall through [-Wimplicit-fallthrough=]
  863 |             state->mode = COPY;
      |             ~~~~~~~~~~~~^~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:864:9: note: here
  864 |         case COPY:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:1003:16: warning: this statement may fall through [-Wimplicit-fallthrough=]
 1003 |             if (flush == Z_TREES) goto inf_leave;
      |                ^
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:1004:9: note: here
 1004 |         case LEN_:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:1005:25: warning: this statement may fall through [-Wimplicit-fallthrough=]
 1005 |             state->mode = LEN;
      |             ~~~~~~~~~~~~^~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:1006:9: note: here
 1006 |         case LEN:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:1054:25: warning: this statement may fall through [-Wimplicit-fallthrough=]
 1054 |             state->mode = LENEXT;
      |             ~~~~~~~~~~~~^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:1055:9: note: here
 1055 |         case LENEXT:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:1064:25: warning: this statement may fall through [-Wimplicit-fallthrough=]
 1064 |             state->mode = DIST;
      |             ~~~~~~~~~~~~^~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:1065:9: note: here
 1065 |         case DIST:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:1091:25: warning: this statement may fall through [-Wimplicit-fallthrough=]
 1091 |             state->mode = DISTEXT;
      |             ~~~~~~~~~~~~^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:1092:9: note: here
 1092 |         case DISTEXT:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:1107:25: warning: this statement may fall through [-Wimplicit-fallthrough=]
 1107 |             state->mode = MATCH;
      |             ~~~~~~~~~~~~^~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:1108:9: note: here
 1108 |         case MATCH:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:1182:25: warning: this statement may fall through [-Wimplicit-fallthrough=]
 1182 |             state->mode = LENGTH;
      |             ~~~~~~~~~~~~^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:1183:9: note: here
 1183 |         case LENGTH:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:1195:25: warning: this statement may fall through [-Wimplicit-fallthrough=]
 1195 |             state->mode = DONE;
      |             ~~~~~~~~~~~~^~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/innobase/zlib_embedded/inflate.c:1196:9: note: here
 1196 |         case DONE:
      |         ^~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/ha_rocksdb.cc:24:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/ha_rocksdb.cc:24:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/ha_rocksdb.cc:24:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/./my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./ha_rocksdb.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/ha_rocksdb.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/ha_rocksdb.cc:24:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/./my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./ha_rocksdb.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/ha_rocksdb.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/ha_rocksdb.cc:24:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_datadic.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_datadic.cc:22:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_datadic.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_datadic.cc:22:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_datadic.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_datadic.cc:22:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_datadic.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_datadic.cc:22:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/./sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./handler.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_datadic.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_datadic.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_datadic.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_datadic.cc:22:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/./sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./handler.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_datadic.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_datadic.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_datadic.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_datadic.cc:22:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_datadic.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_datadic.cc:22:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_datadic.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_datadic.cc:22:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/./sql_audit.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/ha_rocksdb.cc:51:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/./sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_comparator.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_cf_options.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_cf_options.cc:22:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_comparator.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_cf_options.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_cf_options.cc:22:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_comparator.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_cf_options.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_cf_options.cc:22:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/./sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./handler.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_global.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_cf_options.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_cf_options.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_comparator.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_cf_options.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_cf_options.cc:22:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/./sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./handler.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_global.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_cf_options.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_cf_options.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_comparator.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_cf_options.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_cf_options.cc:22:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/ha_rocksdb.cc: In function ‘void myrocks::rocksdb_set_rocksdb_info_log_level(THD*, st_mysql_sys_var*, void*, const void*)’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/ha_rocksdb.cc:954:7: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers]
  954 |       static_cast<const rocksdb::InfoLogLevel>(rocksdb_info_log_level));
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/ha_rocksdb.cc: In function ‘void myrocks::rocksdb_set_rocksdb_stats_level(THD*, st_mysql_sys_var*, void*, const void*)’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/ha_rocksdb.cc:966:7: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers]
  966 |       static_cast<const rocksdb::StatsLevel>(
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  967 |           *static_cast<const uint64_t *>(save)));
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.h:44,
                 from /home/mdcallag/git/fbmysql-56.56/include/mysql/thread_pool_priv.h:37,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_threads.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_cf_manager.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.h:44,
                 from /home/mdcallag/git/fbmysql-56.56/include/mysql/thread_pool_priv.h:37,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_threads.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_cf_manager.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.h:44,
                 from /home/mdcallag/git/fbmysql-56.56/include/mysql/thread_pool_priv.h:37,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_threads.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_cf_manager.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.h:44,
                 from /home/mdcallag/git/fbmysql-56.56/include/mysql/thread_pool_priv.h:37,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_threads.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_cf_manager.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.h:44,
                 from /home/mdcallag/git/fbmysql-56.56/include/mysql/thread_pool_priv.h:37,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_threads.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_cf_manager.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.h:44,
                 from /home/mdcallag/git/fbmysql-56.56/include/mysql/thread_pool_priv.h:37,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_threads.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_cf_manager.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.h:44,
                 from /home/mdcallag/git/fbmysql-56.56/include/mysql/thread_pool_priv.h:37,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_threads.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_cf_manager.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_datadic.cc: In copy constructor ‘myrocks::Rdb_key_def::Rdb_key_def(const myrocks::Rdb_key_def&)’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_datadic.cc:327:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘class myrocks::Rdb_field_packing’ with no trivial copy-assignment [-Wclass-memaccess]
  327 |     memcpy(m_pack_info, k.m_pack_info, size);
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_datadic.cc:22:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_datadic.h:894:7: note: ‘class myrocks::Rdb_field_packing’ declared here
  894 | class Rdb_field_packing {
      |       ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_datadic.cc: In member function ‘uint myrocks::Rdb_key_def::pack_record(const TABLE*, uchar*, const uchar*, uchar*, myrocks::Rdb_string_writer*, bool, longlong, uint, uint*, const char*) const’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_datadic.cc:1278:32: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers]
 1278 |                                reinterpret_cast<const uchar *const>(ttl_bytes),
      |                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_converter.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_converter.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_converter.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_converter.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_threads.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_cf_manager.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/./sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_converter.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_converter.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/./sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./handler.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_converter.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_converter.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_converter.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_converter.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/./sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./handler.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_converter.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_converter.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_converter.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_converter.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./properties_collector.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/properties_collector.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./properties_collector.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/properties_collector.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./properties_collector.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/properties_collector.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/./sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./handler.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./properties_collector.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/properties_collector.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./properties_collector.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/properties_collector.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/./sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./handler.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./properties_collector.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/properties_collector.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./properties_collector.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/properties_collector.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/event_listener.cc:29:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/event_listener.cc:29:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/event_listener.cc:29:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/./sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./handler.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_global.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./event_listener.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/event_listener.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/event_listener.cc:29:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/./sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./handler.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_global.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./event_listener.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/event_listener.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/event_listener.cc:29:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_i_s.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_i_s.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_index_merge.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_index_merge.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_index_merge.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_index_merge.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_index_merge.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_index_merge.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_index_merge.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_index_merge.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_index_merge.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_index_merge.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_index_merge.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_index_merge.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_index_merge.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_index_merge.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_i_s.cc:38:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_io_watchdog.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_io_watchdog.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_io_watchdog.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_io_watchdog.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_i_s.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_i_s.cc:38:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_i_s.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_buff.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./ha_rocksdb.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_i_s.cc:38:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_io_watchdog.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_io_watchdog.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_io_watchdog.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_io_watchdog.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_io_watchdog.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_io_watchdog.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_io_watchdog.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_io_watchdog.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_io_watchdog.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_io_watchdog.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_mutex_wrapper.cc:21:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_mutex_wrapper.cc:21:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_mutex_wrapper.cc:21:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/./sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./handler.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_global.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_mutex_wrapper.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_mutex_wrapper.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_mutex_wrapper.cc:21:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/./sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./handler.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_global.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_mutex_wrapper.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_mutex_wrapper.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_class.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_mutex_wrapper.cc:21:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_psi.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_psi.cc:23:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_psi.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_psi.cc:23:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_psi.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_psi.cc:23:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_psi.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_psi.cc:23:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_psi.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_psi.cc:23:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_psi.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_psi.cc:23:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_psi.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_psi.cc:23:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_utils.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_utils.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_utils.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_utils.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_utils.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_utils.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_utils.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_sst_info.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_sst_info.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_sst_info.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_sst_info.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_sst_info.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_sst_info.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_sst_info.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_sst_info.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_sst_info.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_sst_info.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_sst_info.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_sst_info.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_sst_info.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_sst_info.cc:18:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.h:44,
                 from /home/mdcallag/git/fbmysql-56.56/include/mysql/thread_pool_priv.h:37,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_threads.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_threads.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.h:44,
                 from /home/mdcallag/git/fbmysql-56.56/include/mysql/thread_pool_priv.h:37,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_threads.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_threads.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.h:44,
                 from /home/mdcallag/git/fbmysql-56.56/include/mysql/thread_pool_priv.h:37,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_threads.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_threads.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.h:44,
                 from /home/mdcallag/git/fbmysql-56.56/include/mysql/thread_pool_priv.h:37,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_threads.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_threads.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.h:44,
                 from /home/mdcallag/git/fbmysql-56.56/include/mysql/thread_pool_priv.h:37,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_threads.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_threads.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.h:44,
                 from /home/mdcallag/git/fbmysql-56.56/include/mysql/thread_pool_priv.h:37,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_threads.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_threads.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.h:44,
                 from /home/mdcallag/git/fbmysql-56.56/include/mysql/thread_pool_priv.h:37,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_threads.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_threads.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/protocol.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./nosql_access.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/nosql_access.cc:20:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/protocol.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./nosql_access.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/nosql_access.cc:20:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/protocol.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./nosql_access.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/nosql_access.cc:20:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/protocol.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./nosql_access.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/nosql_access.cc:20:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/protocol.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./nosql_access.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/nosql_access.cc:20:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/protocol.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./nosql_access.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/nosql_access.cc:20:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/protocol.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./nosql_access.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/nosql_access.cc:20:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./../../sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/../../sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/nosql_access.cc:37:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/../../sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/../../sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/../../sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/./rdb_threads.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_threads.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/./sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_threads.cc: In static member function ‘static void* myrocks::Rdb_thread::thread_func(void*)’:
/home/mdcallag/git/fbmysql-56.56/storage/rocksdb/rdb_threads.cc:31:30: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers]
   31 |   Rdb_thread *const thread = static_cast<Rdb_thread *const>(thread_ptr);
      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/.././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/../rdb_comparator.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/mysql_ldb.cc:6:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/.././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/../rdb_comparator.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/mysql_ldb.cc:6:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/.././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/../rdb_comparator.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/mysql_ldb.cc:6:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/./sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./handler.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/.././rdb_global.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/../rdb_comparator.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/mysql_ldb.cc:6:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/.././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/../rdb_comparator.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/mysql_ldb.cc:6:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/./sql_error.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./structs.h:35,
                 from /home/mdcallag/git/fbmysql-56.56/sql/./handler.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/.././rdb_global.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/../rdb_comparator.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/mysql_ldb.cc:6:
/home/mdcallag/git/fbmysql-56.56/sql/./sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/.././rdb_utils.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/../rdb_comparator.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/storage/rocksdb/tools/mysql_ldb.cc:6:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/rocksdb/../sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:38:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:38:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:38:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:38:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:38:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:38:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:38:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:39:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /usr/include/boost/bind.hpp:30,
                 from /usr/include/boost/property_tree/json_parser/detail/parser.hpp:7,
                 from /usr/include/boost/property_tree/json_parser/detail/read.hpp:13,
                 from /usr/include/boost/property_tree/json_parser.hpp:16,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:74:
/usr/include/boost/bind.hpp: At global scope:
/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
   36 | BOOST_PRAGMA_MESSAGE(
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/abstract_query_plan.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/abstract_query_plan.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/abstract_query_plan.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/abstract_query_plan.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/abstract_query_plan.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/abstract_query_plan.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/abstract_query_plan.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy: In function ‘int MYSQLparse(THD*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:2707:19: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 2707 |             memset(&lex->create_info, 0, sizeof(lex->create_info));
      |             ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:38:
/home/mdcallag/git/fbmysql-56.56/sql/handler.h:1204:16: note: ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} declared here
 1204 | typedef struct st_ha_create_information : public st_ha_create_information_base
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:6456:58: warning: implicitly-declared ‘SQL_I_List<TABLE_LIST>& SQL_I_List<TABLE_LIST>::operator=(const SQL_I_List<TABLE_LIST>&)’ is deprecated [-Wdeprecated-copy]
 6456 |             lex->create_info.merge_list= lex->select_lex.table_list;
      |                                                          ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:38:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:48:3: note: because ‘SQL_I_List<TABLE_LIST>’ has user-provided ‘SQL_I_List<T>::SQL_I_List(const SQL_I_List<T>&) [with T = TABLE_LIST]’
   48 |   SQL_I_List(const SQL_I_List &tmp) : Sql_alloc()
      |   ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:6457:46: warning: implicitly-declared ‘SQL_I_List<TABLE_LIST>& SQL_I_List<TABLE_LIST>::operator=(const SQL_I_List<TABLE_LIST>&)’ is deprecated [-Wdeprecated-copy]
 6457 |             lex->select_lex.table_list= lex->save_list;
      |                                              ^~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:38:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:48:3: note: because ‘SQL_I_List<TABLE_LIST>’ has user-provided ‘SQL_I_List<T>::SQL_I_List(const SQL_I_List<T>&) [with T = TABLE_LIST]’
   48 |   SQL_I_List(const SQL_I_List &tmp) : Sql_alloc()
      |   ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:6606:27: warning: catching polymorphic type ‘class std::exception’ by value [-Wcatch-value=]
 6606 |               catch (std::exception)
      |                           ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:7792:19: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 7792 |             memset(&lex->create_info, 0, sizeof(lex->create_info));
      |             ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:38:
/home/mdcallag/git/fbmysql-56.56/sql/handler.h:1204:16: note: ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} declared here
 1204 | typedef struct st_ha_create_information : public st_ha_create_information_base
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:13360:19: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
13360 |             memset(&lex->create_info, 0, sizeof(lex->create_info));
      |             ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:38:
/home/mdcallag/git/fbmysql-56.56/sql/handler.h:1204:16: note: ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} declared here
 1204 | typedef struct st_ha_create_information : public st_ha_create_information_base
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/build.rel_o2nofp/sql/sql_yacc.cc:42148:1: warning: label ‘yyexhaustedlab’ defined but not used [-Wunused-label]
42148 | yyexhaustedlab:
      | ^~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:38:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h: In instantiation of ‘void SQL_I_List<T>::save_and_clear(SQL_I_List<T>*) [with T = TABLE_LIST]’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_yacc.yy:6229:59:   required from here
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:72:10: warning: implicitly-declared ‘SQL_I_List<TABLE_LIST>& SQL_I_List<TABLE_LIST>::operator=(const SQL_I_List<TABLE_LIST>&)’ is deprecated [-Wdeprecated-copy]
   72 |     *save= *this;
      |     ~~~~~^~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:48:3: note: because ‘SQL_I_List<TABLE_LIST>’ has user-provided ‘SQL_I_List<T>::SQL_I_List(const SQL_I_List<T>&) [with T = TABLE_LIST]’
   48 |   SQL_I_List(const SQL_I_List &tmp) : Sql_alloc()
      |   ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/abstract_query_plan.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/abstract_query_plan.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/abstract_query_plan.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/abstract_query_plan.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/abstract_query_plan.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/abstract_query_plan.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/abstract_query_plan.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/column_statistics.h:8,
                 from /home/mdcallag/git/fbmysql-56.56/sql/column_statistics.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/column_statistics.h:8,
                 from /home/mdcallag/git/fbmysql-56.56/sql/column_statistics.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/column_statistics.h:8,
                 from /home/mdcallag/git/fbmysql-56.56/sql/column_statistics.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/column_statistics.h:8,
                 from /home/mdcallag/git/fbmysql-56.56/sql/column_statistics.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/column_statistics.h:8,
                 from /home/mdcallag/git/fbmysql-56.56/sql/column_statistics.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/column_statistics.h:8,
                 from /home/mdcallag/git/fbmysql-56.56/sql/column_statistics.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/column_statistics.h:8,
                 from /home/mdcallag/git/fbmysql-56.56/sql/column_statistics.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/column_statistics.cc:3:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/datadict.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/datadict.cc: In function ‘bool dd_recreate_table(THD*, const char*, const char*)’:
/home/mdcallag/git/fbmysql-56.56/sql/datadict.cc:178:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
  178 |   memset(&create_info, 0, sizeof(create_info));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/handler.h:1204:16: note: ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} declared here
 1204 | typedef struct st_ha_create_information : public st_ha_create_information_base
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/db_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/db_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/db_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/db_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/db_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/db_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/db_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/db_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/des_key_file.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/des_key_file.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/des_key_file.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/des_key_file.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/des_key_file.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/des_key_file.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/des_key_file.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/des_key_file.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/des_key_file.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/des_key_file.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/derror.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/derror.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/derror.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/derror.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/derror.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/derror.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/derror.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/derror.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/discover.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/discover.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/discover.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/discover.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/discover.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/discover.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/discover.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field_conv.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field_conv.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field_conv.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field_conv.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field_conv.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field_conv.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field_conv.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/filesort.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/filesort.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/filesort.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/filesort.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/filesort.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/filesort.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/filesort.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field_conv.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/filesort.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/filesort_utils.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/filesort_utils.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/filesort.cc:37:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/filesort.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/filesort.cc:40:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/filesort.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/filesort.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/filesort.cc:40:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/filesort.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/filesort.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/gcalc_tools.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/gcalc_tools.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/slave_stats_daemon.cc:4:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/slave_stats_daemon.cc:4:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/gcalc_tools.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/slave_stats_daemon.cc:4:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/gcalc_tools.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/gcalc_tools.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/gcalc_tools.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/gcalc_tools.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/slave_stats_daemon.cc:4:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/slave_stats_daemon.cc:4:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/slave_stats_daemon.cc:4:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/slave_stats_daemon.cc:4:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/hostname.cc:32:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/hostname.cc:32:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/gcalc_tools.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/hostname.cc:32:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/slave_stats_daemon.cc:4:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/hash_filo.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/hostname.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/hostname.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/hostname.cc:32:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/hash_filo.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/hostname.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/hostname.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/hostname.cc:32:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/init.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/init.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/init.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/init.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/init.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/init.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/init.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/handler.cc: In function ‘int ha_delete_table(THD*, handlerton*, const char*, const char*, const char*, bool)’:
/home/mdcallag/git/fbmysql-56.56/sql/handler.cc:2691:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 2691 |   memset(&dummy_table, 0, sizeof(dummy_table));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1099:8: note: ‘struct TABLE’ declared here
 1099 | struct TABLE
      |        ^~~~~
/home/mdcallag/git/fbmysql-56.56/sql/handler.cc:2692:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_SHARE’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 2692 |   memset(&dummy_share, 0, sizeof(dummy_share));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:690:8: note: ‘struct TABLE_SHARE’ declared here
  690 | struct TABLE_SHARE
      |        ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/handler.cc: In function ‘int ha_create_table_from_engine(THD*, const char*, const char*)’:
/home/mdcallag/git/fbmysql-56.56/sql/handler.cc:5394:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 5394 |   memset(&create_info, 0, sizeof(create_info));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/handler.h:1204:16: note: ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} declared here
 1204 | typedef struct st_ha_create_information : public st_ha_create_information_base
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_buff.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_buff.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_buff.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_buff.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_buff.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_buff.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_buff.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_create.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_create.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_document.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_document.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_create.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sp_rcontext.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_create.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_create.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_create.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_document.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_create.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_document.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_document.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_document.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_document.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item.cc:43:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item.cc:43:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/item.cc: In constructor ‘Item_type_holder::Item_type_holder(THD*, Item*)’:
/home/mdcallag/git/fbmysql-56.56/sql/item.cc:10017:47: warning: implicitly-declared ‘List<Document_key>& List<Document_key>::operator=(const List<Document_key>&)’ is deprecated [-Wdeprecated-copy]
10017 |     document_path_keys = ((Item_field*)item)->document_path_keys;
      |                                               ^~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Document_key>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Document_key]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_buff.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_create.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_document.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc: In function ‘bool compare_doc_paths_with_array_wildcards(Item*, Item*, compare_type, const CHARSET_INFO*, int)’:
/home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc:817:38: warning: implicitly-declared ‘List<Document_key>& List<Document_key>::operator=(const List<Document_key>&)’ is deprecated [-Wdeprecated-copy]
  817 |     val1_docpath = ((Item_ident*)a)->document_path_keys;
      |                                      ^~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Document_key>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Document_key]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc:819:38: warning: implicitly-declared ‘List<Document_key>& List<Document_key>::operator=(const List<Document_key>&)’ is deprecated [-Wdeprecated-copy]
  819 |     val2_docpath = ((Item_ident*)b)->document_path_keys;
      |                                      ^~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_cmpfunc.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Document_key>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Document_key]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_func.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_func.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_func.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_func.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_func.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_func.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_func.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_geofunc.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_geofunc.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_geofunc.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_geofunc.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_geofunc.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_geofunc.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_geofunc.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_func.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_geofunc.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_row.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_row.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_row.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_row.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_row.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_row.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_row.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_row.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_strfunc.cc:42:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_strfunc.cc:42:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_strfunc.cc:42:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_strfunc.cc:42:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_strfunc.cc:42:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_strfunc.cc:42:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_strfunc.cc:42:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_subselect.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_subselect.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_subselect.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_subselect.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_subselect.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_subselect.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_strfunc.cc:42:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_subselect.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.h:6,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.h:6,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.h:6,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.h:6,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.h:6,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.h:6,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.h:6,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_timefunc.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_timefunc.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_timefunc.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_timefunc.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_timefunc.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_timefunc.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_timefunc.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_subselect.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_xmlfunc.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_xmlfunc.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_xmlfunc.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_xmlfunc.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_xmlfunc.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_xmlfunc.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_xmlfunc.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_subselect.cc:36:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_subselect.cc:36:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_subselect.cc:43:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_subselect.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_subselect.cc:43:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_subselect.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.cc:5:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_sum.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_sum.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_sum.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.cc:5:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.cc:5:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.cc:8:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.h:6,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.cc:8:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.h:6,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_sum_hll.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_timefunc.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_inetfunc.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_inetfunc.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_inetfunc.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_inetfunc.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_inetfunc.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_inetfunc.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_inetfunc.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_inetfunc.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_inetfunc.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_inetfunc.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_inetfunc.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_inetfunc.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_inetfunc.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_inetfunc.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_xmlfunc.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_jsonfunc.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_jsonfunc.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/key.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/key.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_jsonfunc.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_jsonfunc.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_jsonfunc.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_jsonfunc.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/key.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item_jsonfunc.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/key.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/key.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/key.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/key.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/item_jsonfunc.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/lock.cc:78:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/lock.cc:78:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mdl.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mdl.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/lock.cc:78:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mdl.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/lock.cc:78:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/lock.cc:78:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/lock.cc:78:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/lock.cc:78:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mdl.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mdl.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mdl.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mdl.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mf_iocache.cc:36:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mf_iocache.cc:36:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mf_iocache.cc:36:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mf_iocache.cc:36:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mf_iocache.cc:36:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mf_iocache.cc:36:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mf_iocache.cc:36:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/native_procedure.cc:4:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/native_procedure.cc:4:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/native_procedure.cc:4:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/native_procedure.cc:4:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/native_procedure.cc:4:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/native_procedure.cc:4:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/native_procedure.cc:4:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/lock.cc:81:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/mdl.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/mf_iocache.cc:36:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/native_procedure.cc:4:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_format.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_traditional.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_traditional.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_format.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_traditional.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_traditional.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_format.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_traditional.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_traditional.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_format.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_traditional.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_traditional.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_format.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_traditional.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_traditional.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_format.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_traditional.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_traditional.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_format.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_traditional.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_traditional.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_format.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_json.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_json.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_format.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_json.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_json.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_trace.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_format.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_json.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_json.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_trace.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_format.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_json.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_json.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_format.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_json.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_json.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_format.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_json.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_json.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_format.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_json.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_json.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_trace.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_trace.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_trace.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_trace.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_trace.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.cc:110:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.cc:110:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.cc:110:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.cc:110:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.cc:110:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.cc:110:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.cc:110:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_sum.cc:52:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_sum.cc:52:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_sum.cc:52:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_sum.cc:52:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_sum.cc:52:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_sum.cc:52:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_sum.cc:52:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_trace2server.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_trace2server.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_trace2server.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_trace2server.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_trace2server.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_trace2server.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_trace2server.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_format.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_traditional.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_traditional.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_format.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_json.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_explain_json.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.cc:110:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_sum.cc:52:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.cc:116:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.cc:114:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.cc:119:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.cc:110:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.cc:119:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.cc:110:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/opt_range.cc: In constructor ‘QUICK_INDEX_MERGE_SELECT::QUICK_INDEX_MERGE_SELECT(THD*, TABLE*)’:
/home/mdcallag/git/fbmysql-56.56/sql/opt_range.cc:1544:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
 1544 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.cc:114:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/opt_sum.cc:52:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_sum.cc:52:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_trace2server.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/parse_file.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/parse_file.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/parse_file.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/parse_file.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/parse_file.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/parse_file.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/parse_file.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/parse_file.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/parse_file.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.h:243,
                 from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.h:243,
                 from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.h:243,
                 from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/protocol.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/protocol.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/protocol.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/protocol.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/protocol.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/protocol.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/protocol.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/records.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/records.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/records.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/records.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/records.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/records.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/records.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.h:243,
                 from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/partition_info.cc: In member function ‘partition_info* partition_info::get_clone(bool)’:
/home/mdcallag/git/fbmysql-56.56/sql/partition_info.cc:45:9: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of non-trivially copyable type ‘class partition_info’; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
   45 |   memcpy(clone, this, sizeof(partition_info));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.h:243,
                 from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/partition_info.h:35:7: note: ‘class partition_info’ declared here
   35 | class partition_info : public Sql_alloc
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/partition_info.cc:62:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of non-trivially copyable type ‘class partition_element’; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
   62 |     memcpy(part_clone, part, sizeof(partition_element));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.h:243,
                 from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/partition_element.h:92:7: note: ‘class partition_element’ declared here
   92 | class partition_element :public Sql_alloc {
      |       ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/partition_info.cc:92:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of non-trivially copyable type ‘class partition_element’; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
   92 |       memcpy(subpart_clone, subpart, sizeof(partition_element));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.h:243,
                 from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/partition_element.h:92:7: note: ‘class partition_element’ declared here
   92 | class partition_element :public Sql_alloc {
      |       ^~~~~~~~~~~~~~~~~
In file included from /usr/include/boost/bind.hpp:30,
                 from /usr/include/boost/property_tree/json_parser/detail/parser.hpp:7,
                 from /usr/include/boost/property_tree/json_parser/detail/read.hpp:13,
                 from /usr/include/boost/property_tree/json_parser.hpp:16,
                 from /home/mdcallag/git/fbmysql-56.56/sql/query_tag_perf_counter.cc:11:
/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
   36 | BOOST_PRAGMA_MESSAGE(
      | ^~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/partition_info.cc: In member function ‘void partition_info::print_no_partition_found(TABLE*)’:
/home/mdcallag/git/fbmysql-56.56/sql/partition_info.cc:1875:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1875 |   memset(&table_list, 0, sizeof(table_list));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.h: In constructor ‘field_str::field_str(Item*, select_analyse*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.h:119:20: warning: cast between incompatible function types from ‘void (*)(String*)’ to ‘tree_element_free’ {aka ‘void (*)(void*, TREE_FREE, const void*)’} [-Wcast-function-type]
  119 |                 0, (tree_element_free) free_string, NULL); };
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/protocol.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/query_tag_perf_counter.cc:15:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/query_tag_perf_counter.cc:15:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/query_tag_perf_counter.cc:15:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/query_tag_perf_counter.cc:15:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/query_tag_perf_counter.cc:15:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/query_tag_perf_counter.cc:15:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/opt_range.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/records.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/query_tag_perf_counter.cc:15:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/records.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/records.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/records.cc: In function ‘bool init_read_record_idx(READ_RECORD*, THD*, TABLE*, bool, uint, bool)’:
/home/mdcallag/git/fbmysql-56.56/sql/records.cc:72:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
   72 |   memset(info, 0, sizeof(*info));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/records.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/records.cc: In function ‘bool init_read_record(READ_RECORD*, THD*, TABLE*, SQL_SELECT*, int, bool, bool)’:
/home/mdcallag/git/fbmysql-56.56/sql/records.cc:191:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  191 |   memset(info, 0, sizeof(*info));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/records.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/query_tag_perf_counter.cc:15:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/scheduler.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/scheduler.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/scheduler.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/scheduler.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/scheduler.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/scheduler.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/scheduler.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/session_tracker.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/session_tracker.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/session_tracker.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/session_tracker.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/session_tracker.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/session_tracker.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/session_tracker.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/set_var.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/set_var.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/set_var.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars_shared.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/signal_handler.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/set_var.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars_shared.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/signal_handler.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/set_var.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/set_var.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars_shared.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/signal_handler.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/set_var.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/set_var.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/set_var.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/set_var.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/set_var.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars_shared.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/signal_handler.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/set_var.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars_shared.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/signal_handler.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/set_var.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars_shared.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/signal_handler.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/item.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/set_var.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars_shared.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/signal_handler.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_cache.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_cache.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_cache.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_cache.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_cache.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_cache.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_cache.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/session_tracker.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/set_var.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/set_var.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars_shared.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/signal_handler.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/signal_handler.cc: In function ‘void handle_fatal_signal_ex(int, siginfo_t*, void*)’:
/home/mdcallag/git/fbmysql-56.56/sql/signal_handler.cc:272:47: warning: unused variable ‘siginfo’ [-Wunused-variable]
  272 |   siginfo_t * volatile MY_ATTRIBUTE((unused)) siginfo = info;
      |                                               ^~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/signal_handler.cc:273:48: warning: unused variable ‘ucontext’ [-Wunused-variable]
  273 |   ucontext_t * volatile MY_ATTRIBUTE((unused)) ucontext =
      |                                                ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/set_var.cc:36:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/set_var.cc:36:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sp.cc: In function ‘void sp_returns_type(THD*, String&, sp_head*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sp.cc:958:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
  958 |   memset(&table, 0, sizeof(table));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1099:8: note: ‘struct TABLE’ declared here
 1099 | struct TABLE
      |        ^~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sp.cc:959:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_SHARE’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
  959 |   memset(&share, 0, sizeof(share));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:690:8: note: ‘struct TABLE_SHARE’ declared here
  690 | struct TABLE_SHARE
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.h:25,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_cache.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_pcontext.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_instr.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_instr.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_pcontext.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_instr.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_instr.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sp_pcontext.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_instr.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_instr.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sp_pcontext.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_instr.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_instr.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sp_pcontext.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_instr.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_instr.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sp_pcontext.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_instr.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_instr.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sp_pcontext.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_instr.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_instr.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sp_head.cc: In member function ‘bool sp_head::check_show_access(THD*, bool*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sp_head.cc:1964:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1964 |   memset(&tables, 0, sizeof(tables));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h: In instantiation of ‘void SQL_I_List<T>::save_and_clear(SQL_I_List<T>*) [with T = Item_trigger_field]’:
/home/mdcallag/git/fbmysql-56.56/sql/sp_head.cc:1630:50:   required from here
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:72:10: warning: implicitly-declared ‘SQL_I_List<Item_trigger_field>& SQL_I_List<Item_trigger_field>::operator=(const SQL_I_List<Item_trigger_field>&)’ is deprecated [-Wdeprecated-copy]
   72 |     *save= *this;
      |     ~~~~~^~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:48:3: note: because ‘SQL_I_List<Item_trigger_field>’ has user-provided ‘SQL_I_List<T>::SQL_I_List(const SQL_I_List<T>&) [with T = Item_trigger_field]’
   48 |   SQL_I_List(const SQL_I_List &tmp) : Sql_alloc()
      |   ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_pcontext.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_pcontext.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_pcontext.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_pcontext.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_pcontext.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_pcontext.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sp_instr.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_instr.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_pcontext.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_rcontext.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_rcontext.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/string_service.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/string_service.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_rcontext.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_rcontext.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_rcontext.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_rcontext.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/string_service.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_rcontext.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/string_service.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/string_service.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/string_service.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/string_service.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/string_service.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/string_service.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_pcontext.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_instr.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_instr.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h: In instantiation of ‘void SQL_I_List<T>::save_and_clear(SQL_I_List<T>*) [with T = Item_trigger_field]’:
/home/mdcallag/git/fbmysql-56.56/sql/sp_instr.cc:585:56:   required from here
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:72:10: warning: implicitly-declared ‘SQL_I_List<Item_trigger_field>& SQL_I_List<Item_trigger_field>::operator=(const SQL_I_List<Item_trigger_field>&)’ is deprecated [-Wdeprecated-copy]
   72 |     *save= *this;
      |     ~~~~~^~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:48:3: note: because ‘SQL_I_List<Item_trigger_field>’ has user-provided ‘SQL_I_List<T>::SQL_I_List(const SQL_I_List<T>&) [with T = Item_trigger_field]’
   48 |   SQL_I_List(const SQL_I_List &tmp) : Sql_alloc()
      |   ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.h:25,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_pcontext.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.h:25,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_rcontext.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_admin.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_admin.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_admin.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_admin.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_admin.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_admin.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_admin.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /usr/include/string.h:535,
                 from /home/mdcallag/git/fbmysql-56.56/include/m_string.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_rcontext.cc:17:
In function ‘char* strncpy(char*, const char*, size_t)’,
    inlined from ‘sp_rcontext::Sql_condition_info::Sql_condition_info(uint, const char*, Sql_condition::enum_warning_level, const char*)’ at /home/mdcallag/git/fbmysql-56.56/sql/sp_rcontext.h:147:14,
    inlined from ‘sp_rcontext::Handler_call_frame::Handler_call_frame(const sp_handler*, uint, const char*, Sql_condition::enum_warning_level, const char*, uint)’ at /home/mdcallag/git/fbmysql-56.56/sql/sp_rcontext.h:184:7,
    inlined from ‘bool sp_rcontext::handle_sql_condition(THD*, uint*, const sp_instr*)’ at /home/mdcallag/git/fbmysql-56.56/sql/sp_rcontext.cc:400:54:
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ output may be truncated copying 511 bytes from a string of length 511 [-Wstringop-truncation]
   95 |   return __builtin___strncpy_chk (__dest, __src, __len,
      |          ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
   96 |                                   __glibc_objsize (__dest));
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_alloc_error_handler.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_alloc_error_handler.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_alloc_error_handler.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_alloc_error_handler.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_alloc_error_handler.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_alloc_error_handler.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_alloc_error_handler.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_alter.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_alter.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_alter.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_alter.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_alter.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_alter.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_alter.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/sql_acl.cc: In function ‘bool sp_grant_privileges(THD*, const char*, const char*, bool)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_acl.cc:8905:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 8905 |   memset(tables, 0, sizeof(TABLE_LIST));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_admin.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_alloc_error_handler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_audit.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_audit.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_audit.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_audit.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_audit.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_audit.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_audit.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_audit.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_audit.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_audit.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_audit.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_audit.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_audit.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_audit.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_alter.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_alter.cc: In member function ‘virtual bool Sql_cmd_alter_table::execute(THD*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_alter.cc:296:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
  296 |     memset(&tmp_table, 0, sizeof(tmp_table));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_alter.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_audit.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_audit.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.h: In constructor ‘field_str::field_str(Item*, select_analyse*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.h:119:20: warning: cast between incompatible function types from ‘void (*)(String*)’ to ‘tree_element_free’ {aka ‘void (*)(void*, TREE_FREE, const void*)’} [-Wcast-function-type]
  119 |                 0, (tree_element_free) free_string, NULL); };
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.cc: In member function ‘virtual void field_str::add()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.cc:323:15: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
  323 |         memset(&s, 0, sizeof(s));  // Let tree handle free of this
      |         ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc:41:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc:41:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc: In function ‘OPEN_TABLE_LIST* list_open_tables(THD*, const char*, const char*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc:762:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
  762 |   memset(&table_list, 0, sizeof(table_list));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc: In function ‘bool close_cached_connection_tables(THD*, LEX_STRING*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc:1088:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1088 |   memset(&tmp, 0, sizeof(TABLE_LIST));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc: In function ‘int setup_wild(THD*, TABLE_LIST*, List<Item>&, List<Item>*, uint)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc:8565:30: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
 8565 |       select_lex->item_list= fields;
      |                              ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_cache.cc:334:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_cache.cc:334:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_cache.cc:334:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_cache.cc:334:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_cache.cc:334:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_cache.cc:334:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_cache.cc:334:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:34,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_connect.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_connect.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_connect.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_cache.cc:334:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_connect.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_connect.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_connect.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_connect.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/sql_cache.cc: In member function ‘int Query_cache::send_result_to_client(THD*, char*, uint)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_cache.cc:1699:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1699 |     memset(&table_list, 0, sizeof(table_list));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_cache.cc:334:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_cursor.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_cursor.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_cursor.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_cursor.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_cursor.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_cursor.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_cursor.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_connect.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_connect.cc: In function ‘void init_aux_user_table_stats()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_connect.cc:189:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘USER_CONN’ {aka ‘struct user_conn’} with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]
  189 |   memset(&slave_user_conn, 0, sizeof(slave_user_conn));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_connect.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/structs.h:352:17: note: ‘USER_CONN’ {aka ‘struct user_conn’} declared here
  352 | typedef struct  user_conn {
      |                 ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_connect.cc:190:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘USER_CONN’ {aka ‘struct user_conn’} with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]
  190 |   memset(&other_user_conn, 0, sizeof(other_user_conn));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_connect.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/structs.h:352:17: note: ‘USER_CONN’ {aka ‘struct user_conn’} declared here
  352 | typedef struct  user_conn {
      |                 ^~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_data_change.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_data_change.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_data_change.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_data_change.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /usr/include/boost/bind.hpp:30,
                 from /usr/include/boost/property_tree/json_parser/detail/parser.hpp:7,
                 from /usr/include/boost/property_tree/json_parser/detail/read.hpp:13,
                 from /usr/include/boost/property_tree/json_parser.hpp:16,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.cc:71:
/usr/include/boost/bind.hpp: At global scope:
/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
   36 | BOOST_PRAGMA_MESSAGE(
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_data_change.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_data_change.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_data_change.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_data_change.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_data_change.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_data_change.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_data_change.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.cc: In constructor ‘THD::THD(bool)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.cc:1068:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Ha_data’; use assignment or value-initialization instead [-Wclass-memaccess]
 1068 |   memset(ha_data, 0, sizeof(ha_data));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:2329:8: note: ‘struct Ha_data’ declared here
 2329 | struct Ha_data
      |        ^~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_cursor.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_cursor.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.cc: In function ‘std::string get_shard_id(const string&)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.cc:6094:15: warning: catching polymorphic type ‘class std::exception’ by value [-Wcatch-value=]
 6094 |   catch (std::exception)
      |               ^~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_db.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_db.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_db.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_db.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_db.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_db.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_db.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_data_change.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_db.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_delete.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_delete.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_derived.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_derived.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_delete.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_delete.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_delete.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_delete.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_derived.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_delete.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_derived.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_derived.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_derived.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_derived.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_data_change.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_digest.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_data_change.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_digest.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_digest.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_data_change.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_digest.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_digest.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_data_change.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_digest.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_digest.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_do.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_do.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_do.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_do.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_do.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_do.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_do.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_delete.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_derived.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_delete.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_delete.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.cc:45:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.cc:45:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_delete.cc:36:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_delete.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_delete.cc:36:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_delete.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_delete.cc: In function ‘bool mysql_delete(THD*, TABLE_LIST*, Item*, SQL_I_List<st_order>*, ha_rows, ulonglong)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_delete.cc:95:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
   95 |     memset(&tables, 0, sizeof(tables));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_delete.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_derived.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_derived.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_derived.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_derived.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_derived.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_derived.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.cc:45:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.cc:45:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.cc:45:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.cc:45:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.cc:45:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_digest.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_do.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_do.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_do.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sp_rcontext.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_error.cc:47:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_get_diagnostics.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_get_diagnostics.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_get_diagnostics.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_get_diagnostics.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_get_diagnostics.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_get_diagnostics.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_get_diagnostics.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.cc:55:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.cc:55:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.cc:55:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.cc:55:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.cc:55:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.cc:55:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.cc:55:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_help.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_help.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_help.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_help.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_help.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_help.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_help.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc: In function ‘bool make_group_fields(JOIN*, JOIN*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc:3805:41: warning: implicitly-declared ‘List<Cached_item>& List<Cached_item>::operator=(const List<Cached_item>&)’ is deprecated [-Wdeprecated-copy]
 3805 |     curr_join->group_fields= main_join->group_fields_cache;
      |                                         ^~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Cached_item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Cached_item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc:3812:47: warning: implicitly-declared ‘List<Cached_item>& List<Cached_item>::operator=(const List<Cached_item>&)’ is deprecated [-Wdeprecated-copy]
 3812 |     main_join->group_fields_cache= curr_join->group_fields;
      |                                               ^~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_executor.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Cached_item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Cached_item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:60:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:60:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:60:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:60:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:60:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:60:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:60:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_get_diagnostics.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.cc:55:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_help.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.cc:61:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.cc:61:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_join_buffer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_join_buffer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.cc:55:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘TABLE_LIST& TABLE_LIST::operator=(const TABLE_LIST&)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: warning: implicitly-declared ‘List<Derived_key>& List<Derived_key>::operator=(const List<Derived_key>&)’ is deprecated [-Wdeprecated-copy]
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_handler.cc:55:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Derived_key>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Derived_key]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_handler.cc: In member function ‘virtual bool Sql_cmd_handler_open::execute(THD*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_handler.cc:237:18: note: synthesized method ‘TABLE_LIST& TABLE_LIST::operator=(const TABLE_LIST&)’ first required here
  237 |   *hash_tables= *tables;
      |                  ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_join_buffer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_join_buffer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_join_buffer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_join_buffer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_join_buffer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_insert.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:61:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:72:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:72:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:83:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:60:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:83:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:60:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc: In constructor ‘Delayed_insert::Delayed_insert(SELECT_LEX*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:2222:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 2222 |     memset(&table_list, 0, sizeof(table_list));     // Safety
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:60:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘TABLE_LIST& TABLE_LIST::operator=(const TABLE_LIST&)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: warning: implicitly-declared ‘List<Derived_key>& List<Derived_key>::operator=(const List<Derived_key>&)’ is deprecated [-Wdeprecated-copy]
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:60:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Derived_key>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Derived_key]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc: In function ‘bool delayed_get_table(THD*, MDL_request*, TABLE_LIST*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:2395:24: note: synthesized method ‘TABLE_LIST& TABLE_LIST::operator=(const TABLE_LIST&)’ first required here
 2395 |       di->table_list= *table_list;                      // Needed to open table
      |                        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc: In member function ‘int select_create::binlog_show_create_table(TABLE**, uint)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:4335:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 4335 |   memset(&tmp_table_list, 0, sizeof(tmp_table_list));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_insert.cc:60:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_lex.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_lex.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_lex.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_lex.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_lex.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_lex.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_lex.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_join_buffer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_list.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_list.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_list.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_join_buffer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_join_buffer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_join_buffer.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_join_buffer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_join_buffer.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_join_buffer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_list.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_list.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_list.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_list.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_lex.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_lex.cc:33:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_lex.cc:33:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_lex.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_lex.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_lex.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_lex.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_load.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_load.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_load.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_load.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_load.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_load.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_load.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_locale.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_locale.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_locale.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_locale.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_locale.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_locale.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_locale.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_manager.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_manager.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_manager.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_manager.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_manager.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_manager.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_manager.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_multi_tenancy.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_multi_tenancy.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_multi_tenancy.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_multi_tenancy.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_multi_tenancy.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_multi_tenancy.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_multi_tenancy.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_load.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_load.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_locale.cc:26:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_manager.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_multi_tenancy.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3107:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3107 |     {
      |             ^                       
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3048:10: note: ‘struct THD::st_transactions’ declared here
 3048 | 
      |          ^              
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc: In function ‘bool optimize_semijoin_nests_for_materialization(JOIN*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc:4484:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of non-trivially copyable type ‘struct st_position’; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
 4484 |       memcpy(sj_nest->nested_join->sjm.positions,
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 4485 |              join->best_positions + join->const_tables,
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 4486 |              sizeof(st_position) * n_tables);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:362:16: note: ‘struct st_position’ declared here
  362 | typedef struct st_position : public Sql_alloc
      |                ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc: In function ‘bool make_join_select(JOIN*, Item*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.cc:8278:20: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers]
 8278 |                    reinterpret_cast<uchar * const>(&idx));
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:68:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:68:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse_com_rpc.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse_com_rpc.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse_com_rpc.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse_com_rpc.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse_com_rpc.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse_com_rpc.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse_com_rpc.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:105:
/home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.h: In constructor ‘field_str::field_str(Item*, select_analyse*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.h:119:20: warning: cast between incompatible function types from ‘void (*)(String*)’ to ‘tree_element_free’ {aka ‘void (*)(void*, TREE_FREE, const void*)’} [-Wcast-function-type]
  119 |                 0, (tree_element_free) free_string, NULL); };
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc: In function ‘int validate_checksum(THD*, const char*, uint)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:1725:29: warning: catching polymorphic type ‘class std::exception’ by value [-Wcatch-value=]
 1725 |     } catch (std::exception e) {
      |                             ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.cc:50:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.cc:50:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc: In function ‘int mysql_execute_command(THD*, ulonglong*, ulonglong*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:4622:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 4622 |     memset(&create_info, 0, sizeof(create_info));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/handler.h:1204:16: note: ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} declared here
 1204 | typedef struct st_ha_create_information : public st_ha_create_information_base
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘TABLE_LIST& TABLE_LIST::operator=(const TABLE_LIST&)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: warning: implicitly-declared ‘List<Derived_key>& List<Derived_key>::operator=(const List<Derived_key>&)’ is deprecated [-Wdeprecated-copy]
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Derived_key>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Derived_key]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc: In function ‘int mysql_execute_command(THD*, ulonglong*, ulonglong*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:4697:24: note: synthesized method ‘TABLE_LIST& TABLE_LIST::operator=(const TABLE_LIST&)’ first required here
 4697 |       old_list= table[0];
      |                        ^
/home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc: In function ‘bool check_routine_access(THD*, ulong, char*, char*, bool, bool)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:7489:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 7489 |   memset(tables, 0, sizeof(TABLE_LIST));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.cc:50:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.cc:50:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.cc:50:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.cc:50:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.cc:50:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h: In instantiation of ‘void SQL_I_List<T>::save_and_clear(SQL_I_List<T>*) [with T = TABLE_LIST]’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_parse.cc:8092:44:   required from here
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:72:10: warning: implicitly-declared ‘SQL_I_List<TABLE_LIST>& SQL_I_List<TABLE_LIST>::operator=(const SQL_I_List<TABLE_LIST>&)’ is deprecated [-Wdeprecated-copy]
   72 |     *save= *this;
      |     ~~~~~^~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:48:3: note: because ‘SQL_I_List<TABLE_LIST>’ has user-provided ‘SQL_I_List<T>::SQL_I_List(const SQL_I_List<T>&) [with T = TABLE_LIST]’
   48 |   SQL_I_List(const SQL_I_List &tmp) : Sql_alloc()
      |   ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition_admin.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition_admin.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse_com_rpc.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition_admin.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition_admin.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition_admin.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition_admin.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition_admin.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.h:243,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.cc:51:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.cc:69:
/home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.h: In constructor ‘field_str::field_str(Item*, select_analyse*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.h:119:20: warning: cast between incompatible function types from ‘void (*)(String*)’ to ‘tree_element_free’ {aka ‘void (*)(void*, TREE_FREE, const void*)’} [-Wcast-function-type]
  119 |                 0, (tree_element_free) free_string, NULL); };
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_plans.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_plans.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_plans.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_plans.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_plans.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_plans.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_plans.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition_admin.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_partition_admin.cc: In function ‘bool compare_table_with_partition(THD*, TABLE*, TABLE*, partition_element*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_partition_admin.cc:182:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
  182 |   memset(&part_create_info, 0, sizeof(HA_CREATE_INFO));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition_admin.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/handler.h:1204:16: note: ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} declared here
 1204 | typedef struct st_ha_create_information : public st_ha_create_information_base
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_partition_admin.cc:183:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
  183 |   memset(&table_create_info, 0, sizeof(HA_CREATE_INFO));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition_admin.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/handler.h:1204:16: note: ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} declared here
 1204 | typedef struct st_ha_create_information : public st_ha_create_information_base
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc: In member function ‘bool Optimize_table_order::choose_table_order()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:1110:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of non-trivially copyable type ‘POSITION’ {aka ‘struct st_position’}; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
 1110 |     memcpy(join->best_positions, join->positions,
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1111 |            sizeof(POSITION) * join->const_tables);
      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:362:16: note: ‘POSITION’ {aka ‘struct st_position’} declared here
  362 | typedef struct st_position : public Sql_alloc
      |                ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc: In member function ‘void Optimize_table_order::optimize_straight_join(table_map)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:1304:9: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of non-trivially copyable type ‘POSITION’ {aka ‘struct st_position’}; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
 1304 |   memcpy(join->best_positions, join->positions, sizeof(POSITION)*idx);
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:362:16: note: ‘POSITION’ {aka ‘struct st_position’} declared here
  362 | typedef struct st_position : public Sql_alloc
      |                ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc: In member function ‘bool Optimize_table_order::fix_semijoin_strategies()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:2492:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of non-trivially copyable type ‘POSITION’ {aka ‘struct st_position’}; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
 2492 |       memcpy(pos - table_count + 1, sjm_nest->nested_join->sjm.positions,
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2493 |              sizeof(POSITION) * table_count);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:362:16: note: ‘POSITION’ {aka ‘struct st_position’} declared here
  362 | typedef struct st_position : public Sql_alloc
      |                ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:2511:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of non-trivially copyable type ‘POSITION’ {aka ‘struct st_position’}; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
 2511 |       memcpy(join->best_positions + first, // stale semijoin strategy here too
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2512 |              sjm_nest->nested_join->sjm.positions,
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2513 |              sizeof(POSITION) * table_count);
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:362:16: note: ‘POSITION’ {aka ‘struct st_position’} declared here
  362 | typedef struct st_position : public Sql_alloc
      |                ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_plans.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc: In member function ‘void Optimize_table_order::best_access_path(JOIN_TAB*, table_map, uint, bool, double, POSITION*, POSITION*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:335:52: warning: ‘loose_scan_opt.Loose_scan_opt::best_max_loose_keypart’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  335 |       pos->loosescan_parts= best_max_loose_keypart + 1;
      |                             ~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:431:18: note: ‘loose_scan_opt.Loose_scan_opt::best_max_loose_keypart’ was declared here
  431 |   Loose_scan_opt loose_scan_opt;
      |                  ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:333:15: warning: ‘loose_scan_opt.Loose_scan_opt::best_loose_scan_start_key’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  333 |       pos->key=             best_loose_scan_start_key;
      |       ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:431:18: note: ‘loose_scan_opt.Loose_scan_opt::best_loose_scan_start_key’ was declared here
  431 |   Loose_scan_opt loose_scan_opt;
      |                  ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:332:24: warning: ‘loose_scan_opt.Loose_scan_opt::best_loose_scan_records’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  332 |       pos->records_read=    best_loose_scan_records;
      |       ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:431:18: note: ‘loose_scan_opt.Loose_scan_opt::best_loose_scan_records’ was declared here
  431 |   Loose_scan_opt loose_scan_opt;
      |                  ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:334:25: warning: ‘loose_scan_opt.Loose_scan_opt::best_loose_scan_key’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  334 |       pos->loosescan_key=   best_loose_scan_key;
      |       ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_planner.cc:431:18: note: ‘loose_scan_opt.Loose_scan_opt::best_loose_scan_key’ was declared here
  431 |   Loose_scan_opt loose_scan_opt;
      |                  ^~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_prepare.cc:88:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_prepare.cc:88:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_prepare.cc:88:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_prepare.cc:88:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_prepare.cc:88:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_prepare.cc:88:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_prepare.cc:88:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.cc:33:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.cc:33:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_reload.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_reload.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.cc:33:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_reload.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.cc:33:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.cc:33:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.cc:33:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_reload.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_reload.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_reload.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.cc:33:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_reload.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_rename.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_rename.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_rename.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_rename.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_rename.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_rename.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_rename.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_prepare.cc:89:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_resolver.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_resolver.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_resolver.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_resolver.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_resolver.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_resolver.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_resolver.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_prepare.cc:97:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_prepare.cc:97:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_prepare.cc:116:
/home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.h: In constructor ‘field_str::field_str(Item*, select_analyse*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_analyse.h:119:20: warning: cast between incompatible function types from ‘void (*)(String*)’ to ‘tree_element_free’ {aka ‘void (*)(void*, TREE_FREE, const void*)’} [-Wcast-function-type]
  119 |                 0, (tree_element_free) free_string, NULL); };
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sys_vars.h: In member function ‘virtual bool sys_var_pluginvar::global_update(THD*, set_var*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sys_vars.h:98:26: warning: ‘new_val’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   98 |     sql_print_information(format, name.str, old_val, new_val, user, host); \
      |                          ^
/home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.cc:3372:17: note: ‘new_val’ was declared here
 3372 |       ulonglong new_val;
      |                 ^~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sys_vars.h:98:26: warning: ‘old_val’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   98 |     sql_print_information(format, name.str, old_val, new_val, user, host); \
      |                          ^
/home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.cc:3371:17: note: ‘old_val’ was declared here
 3371 |       ulonglong old_val;
      |                 ^~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_profile.cc:37:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_reload.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_rewrite.cc:35:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_rewrite.cc:35:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_view.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_rename.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_rewrite.cc:35:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_rewrite.cc:35:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_rewrite.cc:35:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_rewrite.cc:35:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_rewrite.cc:35:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_resolver.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_resolver.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_resolver.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_resolver.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_resolver.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_resolver.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_resolver.cc:27:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_rewrite.cc:35:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.cc:37:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.cc:37:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.cc:37:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.cc:37:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.cc:37:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.cc:37:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:48,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.cc:37:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/srv_session.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/srv_session.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/srv_session.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/srv_session.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/srv_session.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/srv_session.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/srv_session.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/srv_session.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/srv_session.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/srv_session.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/srv_session.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/srv_session.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/srv_session.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/srv_session.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.h:25,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_signal.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.h:25,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_signal.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.h:25,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_signal.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.h:25,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_signal.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.h:25,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_signal.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.h:25,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_signal.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.h:25,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_signal.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_record.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/log_event.h:47,
                 from /home/mdcallag/git/fbmysql-56.56/sql/binlog.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_slave.h:49,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_servers.cc:37:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.cc:45:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.cc:45:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/srv_session.h:24,
                 from /home/mdcallag/git/fbmysql-56.56/sql/srv_session.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_stats.cc:3:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_stats.cc:3:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_stats.cc:3:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_stats.cc:2:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_stats.cc:3:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_stats.cc:2:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_stats.cc:3:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:60:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:60:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc: In function ‘find_files_result find_files(THD*, List<st_mysql_lex_string>*, const char*, const char*, const char*, bool, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:619:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
  619 |   memset(&table_list, 0, sizeof(table_list));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc: In function ‘int store_create_info(THD*, TABLE_LIST*, String*, HA_CREATE_INFO*, bool)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:1630:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1630 |   memset(&create_info, 0, sizeof(create_info));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/handler.h:1204:16: note: ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} declared here
 1204 | typedef struct st_ha_create_information : public st_ha_create_information_base
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc: In function ‘bool get_netlink_diag(socket_diag_hashmap*, uint8_t)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:3582:3: warning: missing initializer for member ‘sockaddr_nl::nl_pad’ [-Wmissing-field-initializers]
 3582 |   };
      |   ^
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:3582:3: warning: missing initializer for member ‘sockaddr_nl::nl_pid’ [-Wmissing-field-initializers]
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:3582:3: warning: missing initializer for member ‘sockaddr_nl::nl_groups’ [-Wmissing-field-initializers]
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:3603:5: warning: missing initializer for member ‘msghdr::msg_control’ [-Wmissing-field-initializers]
 3603 |     };
      |     ^
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:3603:5: warning: missing initializer for member ‘msghdr::msg_controllen’ [-Wmissing-field-initializers]
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:3603:5: warning: missing initializer for member ‘msghdr::msg_flags’ [-Wmissing-field-initializers]
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.h:25,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_signal.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc: In function ‘int fill_schema_table_from_frm(THD*, TABLE_LIST*, ST_SCHEMA_TABLE*, LEX_STRING*, LEX_STRING*, enum_schema_tables, Open_tables_backup*, bool)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:5626:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 5626 |   memset(&table_list, 0, sizeof(TABLE_LIST));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:5627:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 5627 |   memset(&tbl, 0, sizeof(TABLE));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1099:8: note: ‘struct TABLE’ declared here
 1099 | struct TABLE
      |        ^~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc: In function ‘bool store_schema_params(THD*, TABLE*, TABLE*, const char*, bool, const char*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:7034:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 7034 |   memset(&tbl, 0, sizeof(TABLE));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1099:8: note: ‘struct TABLE’ declared here
 1099 | struct TABLE
      |        ^~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc: In function ‘bool store_schema_proc(THD*, TABLE*, TABLE*, const char*, bool, const char*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:7243:17: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 7243 |           memset(&tbl, 0, sizeof(TABLE));
      |           ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1099:8: note: ‘struct TABLE’ declared here
 1099 | struct TABLE
      |        ^~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc: In function ‘int fill_schema_proc(THD*, TABLE_LIST*, Item*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:7324:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 7324 |   memset(&proc_tables, 0, sizeof(proc_tables));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc: In function ‘int get_schema_views_record(THD*, TABLE_LIST*, TABLE*, bool, LEX_STRING*, LEX_STRING*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:7507:17: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 7507 |           memset(&table_list, 0, sizeof(table_list));
      |           ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_show.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_stats.cc:3:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_stats.cc: In function ‘std::string sql_cmd_type(enum_sql_command)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_stats.cc:1844:1: warning: control reaches end of non-void function [-Wreturn-type]
 1844 | }
      | ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tablespace.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tablespace.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tablespace.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc:40:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc:38:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tablespace.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tablespace.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tablespace.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tablespace.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc: In function ‘bool mysql_create_like_table(THD*, TABLE_LIST*, TABLE_LIST*, HA_CREATE_INFO*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc:5579:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 5579 |   memset(&local_create_info, 0, sizeof(local_create_info));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/handler.h:1204:16: note: ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} declared here
 1204 | typedef struct st_ha_create_information : public st_ha_create_information_base
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc: In function ‘bool mysql_prepare_alter_table(THD*, TABLE*, HA_CREATE_INFO*, Alter_info*, Alter_table_ctx*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc:7204:8: warning: variable ‘deleted_primary’ set but not used [-Wunused-but-set-variable]
 7204 |   bool deleted_primary= false;
      |        ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc: In function ‘int copy_data_between_tables(TABLE*, TABLE*, List<Create_field>&, bool, uint, ORDER*, ha_rows*, ha_rows*, Alter_info::enum_enable_or_disable, Alter_table_ctx*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc:9542:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 9542 |       memset(&tables, 0, sizeof(tables));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc: In function ‘bool mysql_recreate_table(THD*, TABLE_LIST*, bool)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc:9715:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 9715 |   memset(&create_info, 0, sizeof(create_info));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/handler.h:1204:16: note: ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} declared here
 1204 | typedef struct st_ha_create_information : public st_ha_create_information_base
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_tablespace.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_time.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_time.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_time.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_time.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_time.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_time.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_time.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_time.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc: In function ‘TABLE* create_tmp_table(THD*, TMP_TABLE_PARAM*, List<Item>&, ORDER*, bool, bool, ulonglong, ha_rows, const char*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:664:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
  664 |   memset(table, 0, sizeof(*table));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1099:8: note: ‘struct TABLE’ declared here
 1099 | struct TABLE
      |        ^~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:668:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class KEY_PART_INFO’; use assignment or value-initialization instead [-Wclass-memaccess]
  668 |   memset(key_part_info, 0, sizeof(*key_part_info)*(param->group_parts+1));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/structs.h:84:7: note: ‘class KEY_PART_INFO’ declared here
   84 | class KEY_PART_INFO {   /* Info about a key part */
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:1202:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class KEY_PART_INFO’; use assignment or value-initialization instead [-Wclass-memaccess]
 1202 |     memset(key_part_info, 0, keyinfo->user_defined_key_parts *
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1203 |            sizeof(KEY_PART_INFO));
      |            ~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/structs.h:84:7: note: ‘class KEY_PART_INFO’ declared here
   84 | class KEY_PART_INFO {   /* Info about a key part */
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc: In function ‘TABLE* create_duplicate_weedout_tmp_table(THD*, uint, SJ_TMP_TABLE*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:1374:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1374 |   memset(table, 0, sizeof(*table));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1099:8: note: ‘struct TABLE’ declared here
 1099 | struct TABLE
      |        ^~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:1376:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class KEY_PART_INFO’; use assignment or value-initialization instead [-Wclass-memaccess]
 1376 |   memset(key_part_info, 0, sizeof(*key_part_info)*2);
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/structs.h:84:7: note: ‘class KEY_PART_INFO’ declared here
   84 | class KEY_PART_INFO {   /* Info about a key part */
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc: In function ‘TABLE* create_virtual_tmp_table(THD*, List<Create_field>&)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:1613:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1613 |   memset(table, 0, sizeof(*table));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1099:8: note: ‘struct TABLE’ declared here
 1099 | struct TABLE
      |        ^~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:1614:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_SHARE’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1614 |   memset(share, 0, sizeof(*share));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_tmp_table.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:690:8: note: ‘struct TABLE_SHARE’ declared here
  690 | struct TABLE_SHARE
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_trigger.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_trigger.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_trigger.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_trigger.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_trigger.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_trigger.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_trigger.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_truncate.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_truncate.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_truncate.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_truncate.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_truncate.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/handler.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_truncate.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_truncate.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_udf.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_udf.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.h:25,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_trigger.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_udf.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_udf.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_udf.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_udf.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_udf.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/sql_trigger.cc: In static member function ‘static bool Table_triggers_list::drop_all_triggers(THD*, char*, char*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_trigger.cc:1835:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1835 |   memset(&table, 0, sizeof(table));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_trigger.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1099:8: note: ‘struct TABLE’ declared here
 1099 | struct TABLE
      |        ^~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_trigger.cc: In static member function ‘static bool Table_triggers_list::change_table_name(THD*, const char*, const char*, const char*, const char*, const char*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_trigger.cc:2055:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 2055 |   memset(&table, 0, sizeof(table));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_trigger.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1099:8: note: ‘struct TABLE’ declared here
 1099 | struct TABLE
      |        ^~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_update.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_update.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_update.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_update.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_update.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_update.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_update.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_truncate.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/sql_truncate.cc: In function ‘bool recreate_temporary_table(THD*, TABLE*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_truncate.cc:282:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
  282 |   memset(&create_info, 0, sizeof(create_info));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/datadict.h:18,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_truncate.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/handler.h:1204:16: note: ‘HA_CREATE_INFO’ {aka ‘struct st_ha_create_information’} declared here
 1204 | typedef struct st_ha_create_information : public st_ha_create_information_base
      |                ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_udf.cc:32:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/procedure.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:27,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_update.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_update.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:25:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc: In member function ‘bool st_select_lex_unit::init_prepare_fake_select_lex(THD*, bool)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:345:33: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  345 |     fake_select_lex->item_list= item_list;
      |                                 ^~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc: In member function ‘bool st_select_lex_unit::prepare(THD*, select_result*, ulong)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:481:24: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  481 |       types= first_sl->item_list;
      |                        ^~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:589:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
  589 |     memset(&result_table_list, 0, sizeof(result_table_list));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_union.cc:23:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/strfunc.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/strfunc.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_update.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_update.cc:30:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_update.cc:47:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h: In member function ‘void JOIN::init(THD*, List<Item>&, ulonglong, select_result*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:456:17: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  456 |     all_fields= fields_arg;
      |                 ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_update.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_update.cc:47:
/home/mdcallag/git/fbmysql-56.56/sql/sql_optimizer.h:458:20: warning: implicitly-declared ‘List<Item>& List<Item>::operator=(const List<Item>&)’ is deprecated [-Wdeprecated-copy]
  458 |       fields_list= fields_arg;
      |                    ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_update.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<Item>’ has user-provided ‘List<T>::List(const List<T>&) [with T = Item]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/strfunc.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/strfunc.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/strfunc.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/strfunc.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/strfunc.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_view.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc: In function ‘bool fill_defined_view_parts(THD*, TABLE_LIST*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc:224:10: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use copy-assignment instead [-Wclass-memaccess]
  224 |   memcpy (&decoy, view, sizeof (TABLE_LIST));
      |   ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc: In function ‘bool mysql_make_view(THD*, TABLE_SHARE*, TABLE_LIST*, bool)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc:1713:46: warning: implicitly-declared ‘List<TABLE_LIST>& List<TABLE_LIST>::operator=(const List<TABLE_LIST>&)’ is deprecated [-Wdeprecated-copy]
 1713 |         nested_join->join_list= view_select->top_join_list;
      |                                              ^~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:46,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_list.h:473:10: note: because ‘List<TABLE_LIST>’ has user-provided ‘List<T>::List(const List<T>&) [with T = TABLE_LIST]’
  473 |   inline List(const List<T> &tmp) :base_list(tmp) {}
      |          ^~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc: In function ‘bool mysql_rename_view(THD*, const char*, const char*, TABLE_LIST*)’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc:2179:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 2179 |     memset(&view_def, 0, sizeof(view_def));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_view.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/strfunc.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars.cc:35:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars.cc:35:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars.cc:35:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars.cc:35:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars.cc:35:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars.cc:35:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars.cc:35:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_cache.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_cache.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_cache.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_cache.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_cache.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_cache.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_cache.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_cache.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_cache.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_cache.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_cache.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_cache.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_cache.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_cache.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/thr_malloc.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/thr_malloc.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/thr_malloc.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/thr_malloc.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/thr_malloc.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/thr_malloc.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/thr_malloc.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sys_vars.cc:35:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.cc:38:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.cc:38:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table_cache.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_cache.cc:16:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.cc: In function ‘TABLE_SHARE* alloc_table_share(TABLE_LIST*, const char*, uint)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.cc:355:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_SHARE’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
  355 |     memset(share, 0, sizeof(*share));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:690:8: note: ‘struct TABLE_SHARE’ declared here
  690 | struct TABLE_SHARE
      |        ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.cc: In function ‘void init_tmp_table_share(THD*, TABLE_SHARE*, const char*, uint, const char*, const char*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.cc:421:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_SHARE’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
  421 |   memset(share, 0, sizeof(*share));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:690:8: note: ‘struct TABLE_SHARE’ declared here
  690 | struct TABLE_SHARE
      |        ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.cc: In function ‘int open_binary_frm(THD*, TABLE_SHARE*, uchar*, File)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.cc:1287:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
 1287 |     memset(share->document_key_trie, 0, sizeof(Document_key_trie));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.cc: In function ‘int open_table_from_share(THD*, TABLE_SHARE*, const char*, uint, uint, uint, TABLE*, bool)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.cc:2404:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 2404 |   memset(outparam, 0, sizeof(*outparam));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1099:8: note: ‘struct TABLE’ declared here
 1099 | struct TABLE
      |        ^~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.cc: In static member function ‘static TABLE_LIST* TABLE_LIST::new_nested_join(MEM_ROOT*, const char*, TABLE_LIST*, List<TABLE_LIST>*, st_select_lex*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.cc:4136:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 4136 |   memset(join_nest, 0, ALIGN_SIZE(sizeof(TABLE_LIST)) + sizeof(NESTED_JOIN));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_cache.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_cache.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/transaction.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/transaction.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/tztime.cc:32:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/tztime.cc:32:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/transaction.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/tztime.cc:32:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/transaction.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/transaction.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_gtid.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/transaction.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/tztime.cc:32:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/tztime.cc:32:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/tztime.cc:32:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/transaction.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/tztime.cc:32:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/thr_malloc.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/uniques.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/uniques.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/uniques.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/uniques.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/uniques.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/uniques.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/uniques.cc:34:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
/home/mdcallag/git/fbmysql-56.56/sql-common/client.c: In function ‘mysql_read_default_options’:
/home/mdcallag/git/fbmysql-56.56/sql-common/client.c:1894:29: warning: this statement may fall through [-Wimplicit-fallthrough=]
 1894 |           options->protocol = MYSQL_PROTOCOL_PIPE;
      |           ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql-common/client.c:1895:9: note: here
 1895 |         case OPT_connect_timeout:
      |         ^~~~
/home/mdcallag/git/fbmysql-56.56/sql-common/client.c: In function ‘mysql_options’:
/home/mdcallag/git/fbmysql-56.56/sql-common/client.c:7169:36: warning: this statement may fall through [-Wimplicit-fallthrough=]
 7169 |     mysql->net.receive_buffer_size = *(uint*) arg;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql-common/client.c:7171:3: note: here
 7171 |   default:
      |   ^~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/tztime.cc:35:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/rpl_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_rli.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_mi.h:26,
                 from /home/mdcallag/git/fbmysql-56.56/sql/rpl_handler.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/transaction.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/tztime.cc: In function ‘void tz_init_table_list(TABLE_LIST*)’:
/home/mdcallag/git/fbmysql-56.56/sql/tztime.cc:1525:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1525 |   memset(tz_tabs, 0, sizeof(TABLE_LIST) * MY_TZ_TABLES_COUNT);
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/tztime.cc:32:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/tztime.cc: In function ‘my_bool my_tz_init(THD*, const char*, my_bool)’:
/home/mdcallag/git/fbmysql-56.56/sql/tztime.cc:1656:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1656 |   memset(&tz_tables[0], 0, sizeof(TABLE_LIST));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/tztime.cc:32:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/uniques.cc:38:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
<command-line>: warning: ISO C99 requires whitespace after the macro name
<command-line>: warning: ISO C99 requires whitespace after the macro name
In file included from /home/mdcallag/git/fbmysql-56.56/sql/partition_info.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_partition.h:243,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.cc:29:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/unireg.cc: In function ‘bool make_empty_rec(THD*, File, uint, List<Create_field>&, uint, ulong, handler*)’:
/home/mdcallag/git/fbmysql-56.56/sql/unireg.cc:1172:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1172 |   memset(&table, 0, sizeof(table));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1099:8: note: ‘struct TABLE’ declared here
 1099 | struct TABLE
      |        ^~~~~
/home/mdcallag/git/fbmysql-56.56/sql/unireg.cc:1173:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_SHARE’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1173 |   memset(&share, 0, sizeof(share));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:690:8: note: ‘struct TABLE_SHARE’ declared here
  690 | struct TABLE_SHARE
      |        ^~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_data_objects.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_db_repository.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_data_objects.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_db_repository.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_parse_data.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_parse_data.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_db_repository.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_data_objects.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_parse_data.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_db_repository.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_data_objects.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_db_repository.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_db_repository.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_data_objects.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_data_objects.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_db_repository.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_data_objects.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_parse_data.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_parse_data.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_parse_data.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_parse_data.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_queue.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_queue.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_queue.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_scheduler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_scheduler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_queue.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_queue.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_queue.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_queue.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_scheduler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_scheduler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_scheduler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_scheduler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_scheduler.cc:17:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/events.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/events.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/events.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/events.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/events.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/events.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/events.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_db_repository.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_data_objects.cc:20:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sp_head.h:25,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_parse_data.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_audit.h:22,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_queue.cc:22:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/event_scheduler.cc:24:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.cc:28:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/events.cc:19:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_acl.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_parse.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.cc:31:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.cc:53:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h: In constructor ‘st_join_table::st_join_table()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:985:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct READ_RECORD’; use assignment or value-initialization instead [-Wclass-memaccess]
  985 |   memset(&read_record, 0, sizeof(read_record));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_select.h:30,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_test.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.cc:53:
/home/mdcallag/git/fbmysql-56.56/sql/records.h:43:8: note: ‘struct READ_RECORD’ declared here
   43 | struct READ_RECORD
      |        ^~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/mysqld.cc: In function ‘void do_backoff(int*)’:
/home/mdcallag/git/fbmysql-56.56/sql/mysqld.cc:3503:18: warning: ‘int pthread_yield()’ is deprecated: pthread_yield is deprecated, use sched_yield instead [-Wdeprecated-declarations]
 3503 |     pthread_yield();
      |     ~~~~~~~~~~~~~^~
In file included from /usr/include/features.h:486,
                 from /usr/include/pthread.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/include/my_global.h:266,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.cc:17:
/usr/include/pthread.h:479:12: note: declared here
  479 | extern int __REDIRECT_NTH (pthread_yield, (void), sched_yield)
      |            ^~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_client.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_client.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_client.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_client.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_client.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_client.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_client.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/error_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/error_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/table.h:33,
                 from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_timer.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h: In member function ‘Table_id Table_id::operator++(int)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:57:12: warning: implicitly-declared ‘constexpr Table_id::Table_id(const Table_id&)’ is deprecated [-Wdeprecated-copy]
   57 |     return id;
      |            ^~
/home/mdcallag/git/fbmysql-56.56/sql/table_id.h:40:8: note: because ‘Table_id’ has user-provided ‘void Table_id::operator=(const Table_id&)’
   40 |   void operator=(const Table_id &tid) { m_id = tid.m_id; }
      |        ^~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/field.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_timer.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘Document_key_trie* Document_key_trie::insert(const char*, MEM_ROOT*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:638:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  638 |       memset(child, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:656:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct Document_key_trie’; use assignment or value-initialization instead [-Wclass-memaccess]
  656 |       memset(cur, 0, sizeof(Document_key_trie));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:612:8: note: ‘struct Document_key_trie’ declared here
  612 | struct Document_key_trie
      |        ^~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h: In member function ‘void TABLE_LIST::init_one_table(const char*, size_t, const char*, size_t, const char*, thr_lock_type)’:
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1691:11: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct TABLE_LIST’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 1691 |     memset(this, 0, sizeof(*this));
      |     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table.h:1676:8: note: ‘struct TABLE_LIST’ declared here
 1676 | struct TABLE_LIST
      |        ^~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/error_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_timer.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_num::Field_num(const Field_num&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1625:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1625 | class Field_num :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_real::Field_real(const Field_real&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1736:7: note: synthesized method ‘constexpr Field_num::Field_num(const Field_num&)’ first required here
 1736 | class Field_real :public Field_num {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1762:7: note: synthesized method ‘constexpr Field_real::Field_real(const Field_real&)’ first required here
 1762 | class Field_decimal :public Field_real {
      |       ^~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_decimal* Field_decimal::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1790:46: note: synthesized method ‘constexpr Field_decimal::Field_decimal(const Field_decimal&)’ first required here
 1790 |     return new (mem_root) Field_decimal(*this);
      |                                              ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/error_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/error_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/error_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_str::Field_str(const Field_str&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:1665:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 1665 | class Field_str :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_null::Field_null(const Field_null&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2266:7: note: synthesized method ‘constexpr Field_str::Field_str(const Field_str&)’ first required here
 2266 | class Field_null :public Field_str {
      |       ^~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_null* Field_null::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2306:43: note: synthesized method ‘constexpr Field_null::Field_null(const Field_null&)’ first required here
 2306 |     return new (mem_root) Field_null(*this);
      |                                           ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2319:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 2319 | class Field_temporal :public Field {
      |       ^~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2527:7: note: synthesized method ‘constexpr Field_temporal::Field_temporal(const Field_temporal&)’ first required here
 2527 | class Field_temporal_with_date :public Field_temporal {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2601:7: note: synthesized method ‘constexpr Field_temporal_with_date::Field_temporal_with_date(const Field_temporal_with_date&)’ first required here
 2601 | class Field_temporal_with_date_and_time :public Field_temporal_with_date {
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2715:7: note: synthesized method ‘constexpr Field_temporal_with_date_and_time::Field_temporal_with_date_and_time(const Field_temporal_with_date_and_time&)’ first required here
 2715 | class Field_timestamp :public Field_temporal_with_date_and_time {
      |       ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_timestamp* Field_timestamp::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:2746:48: note: synthesized method ‘constexpr Field_timestamp::Field_timestamp(const Field_timestamp&)’ first required here
 2746 |     return new (mem_root) Field_timestamp(*this);
      |                                                ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/error_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual void Field_blob::reset_fields()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3578:31: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3578 |   void reset_fields() { memset(&value, 0, sizeof(value)); }
      |                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_timer.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_timer.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘void Field_blob::clear_temporary()’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:3653:41: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class String’ with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
 3653 |   inline void clear_temporary() { memset(&value, 0, sizeof(value)); }
      |                                   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/my_decimal.h:32,
                 from /home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:28,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_timer.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_string.h:140:7: note: ‘class String’ declared here
  140 | class String
      |       ^~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:170,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_timer.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In copy constructor ‘constexpr Field_bit::Field_bit(const Field_bit&)’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4424:7: warning: implicitly-declared ‘constexpr Field::Field(const Field&)’ is deprecated [-Wdeprecated-copy]
 4424 | class Field_bit :public Field {
      |       ^~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h:561:8: note: because ‘Field’ has user-provided ‘void Field::operator=(Field&)’
  561 |   void operator=(Field &);
      |        ^~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/field.h: In member function ‘virtual Field_bit* Field_bit::clone(MEM_ROOT*) const’:
/home/mdcallag/git/fbmysql-56.56/sql/field.h:4517:42: note: synthesized method ‘constexpr Field_bit::Field_bit(const Field_bit&)’ first required here
 4517 |     return new (mem_root) Field_bit(*this);
      |                                          ^
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_client.cc:21:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:21,
                 from /home/mdcallag/git/fbmysql-56.56/sql/error_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table_stats.cc: In function ‘void clear_table_stats(TABLE_STATS*)’:
/home/mdcallag/git/fbmysql-56.56/sql/table_stats.cc:275:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘page_stats_atomic_t’ {aka ‘struct page_stats_atomic_struct’} with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]
  275 |   memset(&table_stats->page_stats, 0, sizeof(table_stats->page_stats));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:627:8: note: ‘page_stats_atomic_t’ {aka ‘struct page_stats_atomic_struct’} declared here
  627 | struct page_stats_atomic_struct {
      |        ^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/table_stats.cc:276:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘comp_stats_atomic_t’ {aka ‘struct comp_stats_atomic_struct’} with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]
  276 |   memset(&table_stats->comp_stats, 0, sizeof(table_stats->comp_stats));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:29,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/table_stats.cc:1:
/home/mdcallag/git/fbmysql-56.56/sql/mysqld.h:572:8: note: ‘comp_stats_atomic_t’ {aka ‘struct comp_stats_atomic_struct’} declared here
  572 | struct comp_stats_atomic_struct {
      |        ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/mdcallag/git/fbmysql-56.56/sql/sql_timer.cc:18:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h: In constructor ‘THD::st_transactions::st_transactions()’:
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3108:13: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘struct THD::st_transactions’; use assignment or value-initialization instead [-Wclass-memaccess]
 3108 |       memset(this, 0, sizeof(*this));
      |       ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/sql_class.h:3049:10: note: ‘struct THD::st_transactions’ declared here
 3049 |   struct st_transactions {
      |          ^~~~~~~~~~~~~~~
/home/mdcallag/git/fbmysql-56.56/sql/error_stats.cc: In function ‘void reset_global_error_stats()’:
/home/mdcallag/git/fbmysql-56.56/sql/error_stats.cc:49:9: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘time_counter_pair’ {aka ‘struct std::pair<long long unsigned int, atomic_stat<long long unsigned int> >’} with no trivial copy-assignment [-Wclass-memaccess]
   49 |   memset(global_error_stats, 0, sizeof(global_error_stats));
      |   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/vector:60,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_plugin.h:20,
                 from /home/mdcallag/git/fbmysql-56.56/sql/structs.h:23,
                 from /home/mdcallag/git/fbmysql-56.56/sql/unireg.h:168,
                 from /home/mdcallag/git/fbmysql-56.56/sql/sql_base.h:19,
                 from /home/mdcallag/git/fbmysql-56.56/sql/error_stats.cc:1:
/usr/include/c++/11/bits/stl_pair.h:211:12: note: ‘time_counter_pair’ {aka ‘struct std::pair<long long unsigned int, atomic_stat<long long unsigned int> >’} declared here
  211 |     struct pair
      |            ^~~~
