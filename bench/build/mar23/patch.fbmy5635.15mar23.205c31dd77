diff --git a/storage/rocksdb/get_rocksdb_files.sh b/storage/rocksdb/get_rocksdb_files.sh
index c9d3aa14b36..4e7076c9d45 100755
--- a/storage/rocksdb/get_rocksdb_files.sh
+++ b/storage/rocksdb/get_rocksdb_files.sh
@@ -4,7 +4,7 @@ MKFILE=`mktemp`
 # include rocksdb make file relative to the path of this script
 echo "include rocksdb/src.mk
 all:
-	@echo \$(LIB_SOURCES)" > $MKFILE
+	@echo \"\$(LIB_SOURCES)\"" > $MKFILE
 for f in `make --makefile $MKFILE`
 do
   echo ../../rocksdb/$f
@@ -22,7 +22,8 @@ git_tag=$(git symbolic-ref -q --short HEAD || \
 git_mod=$(git diff-index HEAD --quiet 2>/dev/null; echo $?)
 git_date=$(git log -1 --date=format:"%Y-%m-%d %T" --format="%ad" 2>/dev/null)
 popd>/dev/null
-if [ ! -f $bv ] || [ -z $git_sha ] || [ ! `grep -q $git_sha $bv` ]
+#if [ ! -f $bv ] || [ -z $git_sha ] || [ ! `grep -q $git_sha $bv` ]
+if [ ! -f $bv ] || [ -z $git_sha ] || ! grep -q $git_sha $bv
 then
 sed -e s/@GIT_SHA@/$git_sha/ -e s:@GIT_TAG@:"$git_tag":  \
     -e s/@GIT_MOD@/"$git_mod"/ -e s/@BUILD_DATE@/"$build_date"/  \
diff --git a/storage/rocksdb/ha_rocksdb.cc b/storage/rocksdb/ha_rocksdb.cc
index da15b182646..c42f59f98ac 100644
--- a/storage/rocksdb/ha_rocksdb.cc
+++ b/storage/rocksdb/ha_rocksdb.cc
@@ -469,6 +469,23 @@ static int rocksdb_force_flush_memtable_and_lzero_now(
       cf_handle->GetDescriptor(&cf_descr);
       c_options.output_file_size_limit = cf_descr.options.target_file_size_base;
 
+      // Lets RocksDB use the configured compression for this level
+      c_options.compression = rocksdb::kDisableCompressionOption;
+
+      uint64_t base_level;
+      if (!rdb->GetIntProperty(cf_handle.get(),
+                               rocksdb::DB::Properties::kBaseLevel,
+			       &base_level)) {
+	sql_print_information("MyRocks: force flush cannot get base level.");
+        break;
+      }
+
+      if (base_level == 0) {
+        sql_print_information(
+          "MyRocks: force flush cannot flush to base level when 0.");
+        break;
+      }
+
       DBUG_ASSERT(metadata.levels[0].level == 0);
       std::vector<std::string> file_names;
       for (auto &file : metadata.levels[0].files) {
@@ -476,11 +493,13 @@ static int rocksdb_force_flush_memtable_and_lzero_now(
       }
 
       if (file_names.empty()) {
+        sql_print_information(
+          "MyRocks: cannot force compaction, no files in L0.");
         break;
       }
 
       rocksdb::Status s;
-      s = rdb->CompactFiles(c_options, cf_handle.get(), file_names, 1);
+      s = rdb->CompactFiles(c_options, cf_handle.get(), file_names, base_level);
 
       if (!s.ok()) {
         std::shared_ptr<rocksdb::ColumnFamilyHandle> cfh =
